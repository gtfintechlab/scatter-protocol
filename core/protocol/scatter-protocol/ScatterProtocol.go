// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package scatterprotocol

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
	_ = abi.ConvertType
)

// ScatterprotocolMetaData contains all meta data concerning the Scatterprotocol contract.
var ScatterprotocolMetaData = &bind.MetaData{
	ABI: "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"trainingTokenContractAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"evaluationTokenContractAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"scatterTokenContractAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"modelTokenContractAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"reputationManagerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"voteManagerAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"name\":\"DebugEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"requestor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"topicName\",\"type\":\"string\"}],\"name\":\"JobComplete\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"requestor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"topicName\",\"type\":\"string\"}],\"name\":\"ModelReadyToValidate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"requestor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"topicName\",\"type\":\"string\"}],\"name\":\"RequestForEvaluationSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"requestor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"topicName\",\"type\":\"string\"}],\"name\":\"TrainingInitialized\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"addressToFederatedJob\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"trainingJobCid\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"publishedTrainerCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pooledReward\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"evaluationJobCid\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"evaluationJobDataCid\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"jobTerminationDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"validatorValidationCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"jobStartDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"validationThresholdScore\",\"type\":\"uint256\"},{\"internalType\":\"enumFederatedJobStatus\",\"name\":\"status\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToNodeId\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToRoles\",\"outputs\":[{\"internalType\":\"enumroles\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"addressToTopics\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nodeAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"topicName\",\"type\":\"string\"}],\"name\":\"checkIfTopicExistsForRequestor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"evaluationJobContract\",\"outputs\":[{\"internalType\":\"contractIEvaluationJobToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"requestorAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"topicName\",\"type\":\"string\"}],\"name\":\"federatedJobCleanUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addressToView\",\"type\":\"address\"}],\"name\":\"getEnumRoleByAddress\",\"outputs\":[{\"internalType\":\"enumroles\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"skip\",\"type\":\"int256\"}],\"name\":\"getRequestorAddresses\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addressToFind\",\"type\":\"address\"}],\"name\":\"getRoleByAddress\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"requestorAddress\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"skip\",\"type\":\"int256\"}],\"name\":\"getTopicsByRequestorAddress\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"requestorAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"topicName\",\"type\":\"string\"},{\"internalType\":\"int256\",\"name\":\"skip\",\"type\":\"int256\"}],\"name\":\"getTrainersByAddressAndTopic\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"requestorAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"topicName\",\"type\":\"string\"}],\"name\":\"getTrainersForFederatedJob\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"requestorAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"topicName\",\"type\":\"string\"}],\"name\":\"getValidatorsForFederatedJob\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initRequestorNode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initTrainerNode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initValidatorNode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"requestorAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"topicName\",\"type\":\"string\"}],\"name\":\"isJobInProgress\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"requestorAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"topicName\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"validatorAddress\",\"type\":\"address\"}],\"name\":\"isValidatorForTrainingJob\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"modelTokenContract\",\"outputs\":[{\"internalType\":\"contractIModelToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"networkRequestors\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"networkTrainers\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"networkValidators\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"addresspayable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"modelURI\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"requestorAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"topicName\",\"type\":\"string\"}],\"name\":\"publishModelToProtocol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reputationManagerContract\",\"outputs\":[{\"internalType\":\"contractIReputationManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"trainingTokenURI\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"evaluationTokenURI\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"topicName\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"pooledReward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"validationThresholdScore\",\"type\":\"uint256\"}],\"name\":\"requestorAddTopic\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"requestorAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"topicName\",\"type\":\"string\"}],\"name\":\"rewardDistributor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"scatterTokenContract\",\"outputs\":[{\"internalType\":\"contractIScatterToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"setEvaluationJobContractAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"nodeId\",\"type\":\"string\"}],\"name\":\"setNodeId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addressToUpdate\",\"type\":\"address\"},{\"internalType\":\"enumroles\",\"name\":\"newRole\",\"type\":\"uint8\"}],\"name\":\"setRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"setScatterTokenContractAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"setTrainingJobContractAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"topicName\",\"type\":\"string\"}],\"name\":\"startTraining\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"requestorAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"topicName\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"trainerAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"score\",\"type\":\"uint256\"}],\"name\":\"submitEvaluationScore\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"topicName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"evaluationDataURI\",\"type\":\"string\"}],\"name\":\"submitEvaluationSet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"requestorAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"topicName\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"stakeAmount\",\"type\":\"uint256\"}],\"name\":\"trainerAddTopic\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"trainerTrainingMap\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"trainingJobContract\",\"outputs\":[{\"internalType\":\"contractITrainingJobToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"validatorTrainingMap\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"voteManagerContract\",\"outputs\":[{\"internalType\":\"contractIVoteManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]",
	Bin: "",
}

// ScatterprotocolABI is the input ABI used to generate the binding from.
// Deprecated: Use ScatterprotocolMetaData.ABI instead.
var ScatterprotocolABI = ScatterprotocolMetaData.ABI

// ScatterprotocolBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use ScatterprotocolMetaData.Bin instead.
var ScatterprotocolBin = ScatterprotocolMetaData.Bin

// DeployScatterprotocol deploys a new Ethereum contract, binding an instance of Scatterprotocol to it.
func DeployScatterprotocol(auth *bind.TransactOpts, backend bind.ContractBackend, trainingTokenContractAddress common.Address, evaluationTokenContractAddress common.Address, scatterTokenContractAddress common.Address, modelTokenContractAddress common.Address, reputationManagerAddress common.Address, voteManagerAddress common.Address) (common.Address, *types.Transaction, *Scatterprotocol, error) {
	parsed, err := ScatterprotocolMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(ScatterprotocolBin), backend, trainingTokenContractAddress, evaluationTokenContractAddress, scatterTokenContractAddress, modelTokenContractAddress, reputationManagerAddress, voteManagerAddress)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &Scatterprotocol{ScatterprotocolCaller: ScatterprotocolCaller{contract: contract}, ScatterprotocolTransactor: ScatterprotocolTransactor{contract: contract}, ScatterprotocolFilterer: ScatterprotocolFilterer{contract: contract}}, nil
}

// Scatterprotocol is an auto generated Go binding around an Ethereum contract.
type Scatterprotocol struct {
	ScatterprotocolCaller     // Read-only binding to the contract
	ScatterprotocolTransactor // Write-only binding to the contract
	ScatterprotocolFilterer   // Log filterer for contract events
}

// ScatterprotocolCaller is an auto generated read-only Go binding around an Ethereum contract.
type ScatterprotocolCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ScatterprotocolTransactor is an auto generated write-only Go binding around an Ethereum contract.
type ScatterprotocolTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ScatterprotocolFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type ScatterprotocolFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ScatterprotocolSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type ScatterprotocolSession struct {
	Contract     *Scatterprotocol  // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// ScatterprotocolCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type ScatterprotocolCallerSession struct {
	Contract *ScatterprotocolCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts          // Call options to use throughout this session
}

// ScatterprotocolTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type ScatterprotocolTransactorSession struct {
	Contract     *ScatterprotocolTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts          // Transaction auth options to use throughout this session
}

// ScatterprotocolRaw is an auto generated low-level Go binding around an Ethereum contract.
type ScatterprotocolRaw struct {
	Contract *Scatterprotocol // Generic contract binding to access the raw methods on
}

// ScatterprotocolCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type ScatterprotocolCallerRaw struct {
	Contract *ScatterprotocolCaller // Generic read-only contract binding to access the raw methods on
}

// ScatterprotocolTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type ScatterprotocolTransactorRaw struct {
	Contract *ScatterprotocolTransactor // Generic write-only contract binding to access the raw methods on
}

// NewScatterprotocol creates a new instance of Scatterprotocol, bound to a specific deployed contract.
func NewScatterprotocol(address common.Address, backend bind.ContractBackend) (*Scatterprotocol, error) {
	contract, err := bindScatterprotocol(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &Scatterprotocol{ScatterprotocolCaller: ScatterprotocolCaller{contract: contract}, ScatterprotocolTransactor: ScatterprotocolTransactor{contract: contract}, ScatterprotocolFilterer: ScatterprotocolFilterer{contract: contract}}, nil
}

// NewScatterprotocolCaller creates a new read-only instance of Scatterprotocol, bound to a specific deployed contract.
func NewScatterprotocolCaller(address common.Address, caller bind.ContractCaller) (*ScatterprotocolCaller, error) {
	contract, err := bindScatterprotocol(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &ScatterprotocolCaller{contract: contract}, nil
}

// NewScatterprotocolTransactor creates a new write-only instance of Scatterprotocol, bound to a specific deployed contract.
func NewScatterprotocolTransactor(address common.Address, transactor bind.ContractTransactor) (*ScatterprotocolTransactor, error) {
	contract, err := bindScatterprotocol(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &ScatterprotocolTransactor{contract: contract}, nil
}

// NewScatterprotocolFilterer creates a new log filterer instance of Scatterprotocol, bound to a specific deployed contract.
func NewScatterprotocolFilterer(address common.Address, filterer bind.ContractFilterer) (*ScatterprotocolFilterer, error) {
	contract, err := bindScatterprotocol(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &ScatterprotocolFilterer{contract: contract}, nil
}

// bindScatterprotocol binds a generic wrapper to an already deployed contract.
func bindScatterprotocol(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := ScatterprotocolMetaData.GetAbi()
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, *parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Scatterprotocol *ScatterprotocolRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Scatterprotocol.Contract.ScatterprotocolCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Scatterprotocol *ScatterprotocolRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.ScatterprotocolTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Scatterprotocol *ScatterprotocolRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.ScatterprotocolTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Scatterprotocol *ScatterprotocolCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Scatterprotocol.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Scatterprotocol *ScatterprotocolTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Scatterprotocol *ScatterprotocolTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.contract.Transact(opts, method, params...)
}

// AddressToFederatedJob is a free data retrieval call binding the contract method 0x240ae095.
//
// Solidity: function addressToFederatedJob(address , string ) view returns(string trainingJobCid, uint256 publishedTrainerCount, uint256 pooledReward, string evaluationJobCid, string evaluationJobDataCid, uint256 jobTerminationDate, uint256 validatorValidationCount, uint256 jobStartDate, uint256 validationThresholdScore, uint8 status)
func (_Scatterprotocol *ScatterprotocolCaller) AddressToFederatedJob(opts *bind.CallOpts, arg0 common.Address, arg1 string) (struct {
	TrainingJobCid           string
	PublishedTrainerCount    *big.Int
	PooledReward             *big.Int
	EvaluationJobCid         string
	EvaluationJobDataCid     string
	JobTerminationDate       *big.Int
	ValidatorValidationCount *big.Int
	JobStartDate             *big.Int
	ValidationThresholdScore *big.Int
	Status                   uint8
}, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "addressToFederatedJob", arg0, arg1)

	outstruct := new(struct {
		TrainingJobCid           string
		PublishedTrainerCount    *big.Int
		PooledReward             *big.Int
		EvaluationJobCid         string
		EvaluationJobDataCid     string
		JobTerminationDate       *big.Int
		ValidatorValidationCount *big.Int
		JobStartDate             *big.Int
		ValidationThresholdScore *big.Int
		Status                   uint8
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.TrainingJobCid = *abi.ConvertType(out[0], new(string)).(*string)
	outstruct.PublishedTrainerCount = *abi.ConvertType(out[1], new(*big.Int)).(**big.Int)
	outstruct.PooledReward = *abi.ConvertType(out[2], new(*big.Int)).(**big.Int)
	outstruct.EvaluationJobCid = *abi.ConvertType(out[3], new(string)).(*string)
	outstruct.EvaluationJobDataCid = *abi.ConvertType(out[4], new(string)).(*string)
	outstruct.JobTerminationDate = *abi.ConvertType(out[5], new(*big.Int)).(**big.Int)
	outstruct.ValidatorValidationCount = *abi.ConvertType(out[6], new(*big.Int)).(**big.Int)
	outstruct.JobStartDate = *abi.ConvertType(out[7], new(*big.Int)).(**big.Int)
	outstruct.ValidationThresholdScore = *abi.ConvertType(out[8], new(*big.Int)).(**big.Int)
	outstruct.Status = *abi.ConvertType(out[9], new(uint8)).(*uint8)

	return *outstruct, err

}

// AddressToFederatedJob is a free data retrieval call binding the contract method 0x240ae095.
//
// Solidity: function addressToFederatedJob(address , string ) view returns(string trainingJobCid, uint256 publishedTrainerCount, uint256 pooledReward, string evaluationJobCid, string evaluationJobDataCid, uint256 jobTerminationDate, uint256 validatorValidationCount, uint256 jobStartDate, uint256 validationThresholdScore, uint8 status)
func (_Scatterprotocol *ScatterprotocolSession) AddressToFederatedJob(arg0 common.Address, arg1 string) (struct {
	TrainingJobCid           string
	PublishedTrainerCount    *big.Int
	PooledReward             *big.Int
	EvaluationJobCid         string
	EvaluationJobDataCid     string
	JobTerminationDate       *big.Int
	ValidatorValidationCount *big.Int
	JobStartDate             *big.Int
	ValidationThresholdScore *big.Int
	Status                   uint8
}, error) {
	return _Scatterprotocol.Contract.AddressToFederatedJob(&_Scatterprotocol.CallOpts, arg0, arg1)
}

// AddressToFederatedJob is a free data retrieval call binding the contract method 0x240ae095.
//
// Solidity: function addressToFederatedJob(address , string ) view returns(string trainingJobCid, uint256 publishedTrainerCount, uint256 pooledReward, string evaluationJobCid, string evaluationJobDataCid, uint256 jobTerminationDate, uint256 validatorValidationCount, uint256 jobStartDate, uint256 validationThresholdScore, uint8 status)
func (_Scatterprotocol *ScatterprotocolCallerSession) AddressToFederatedJob(arg0 common.Address, arg1 string) (struct {
	TrainingJobCid           string
	PublishedTrainerCount    *big.Int
	PooledReward             *big.Int
	EvaluationJobCid         string
	EvaluationJobDataCid     string
	JobTerminationDate       *big.Int
	ValidatorValidationCount *big.Int
	JobStartDate             *big.Int
	ValidationThresholdScore *big.Int
	Status                   uint8
}, error) {
	return _Scatterprotocol.Contract.AddressToFederatedJob(&_Scatterprotocol.CallOpts, arg0, arg1)
}

// AddressToNodeId is a free data retrieval call binding the contract method 0xef36d16a.
//
// Solidity: function addressToNodeId(address ) view returns(string)
func (_Scatterprotocol *ScatterprotocolCaller) AddressToNodeId(opts *bind.CallOpts, arg0 common.Address) (string, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "addressToNodeId", arg0)

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// AddressToNodeId is a free data retrieval call binding the contract method 0xef36d16a.
//
// Solidity: function addressToNodeId(address ) view returns(string)
func (_Scatterprotocol *ScatterprotocolSession) AddressToNodeId(arg0 common.Address) (string, error) {
	return _Scatterprotocol.Contract.AddressToNodeId(&_Scatterprotocol.CallOpts, arg0)
}

// AddressToNodeId is a free data retrieval call binding the contract method 0xef36d16a.
//
// Solidity: function addressToNodeId(address ) view returns(string)
func (_Scatterprotocol *ScatterprotocolCallerSession) AddressToNodeId(arg0 common.Address) (string, error) {
	return _Scatterprotocol.Contract.AddressToNodeId(&_Scatterprotocol.CallOpts, arg0)
}

// AddressToRoles is a free data retrieval call binding the contract method 0xf629ad71.
//
// Solidity: function addressToRoles(address ) view returns(uint8)
func (_Scatterprotocol *ScatterprotocolCaller) AddressToRoles(opts *bind.CallOpts, arg0 common.Address) (uint8, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "addressToRoles", arg0)

	if err != nil {
		return *new(uint8), err
	}

	out0 := *abi.ConvertType(out[0], new(uint8)).(*uint8)

	return out0, err

}

// AddressToRoles is a free data retrieval call binding the contract method 0xf629ad71.
//
// Solidity: function addressToRoles(address ) view returns(uint8)
func (_Scatterprotocol *ScatterprotocolSession) AddressToRoles(arg0 common.Address) (uint8, error) {
	return _Scatterprotocol.Contract.AddressToRoles(&_Scatterprotocol.CallOpts, arg0)
}

// AddressToRoles is a free data retrieval call binding the contract method 0xf629ad71.
//
// Solidity: function addressToRoles(address ) view returns(uint8)
func (_Scatterprotocol *ScatterprotocolCallerSession) AddressToRoles(arg0 common.Address) (uint8, error) {
	return _Scatterprotocol.Contract.AddressToRoles(&_Scatterprotocol.CallOpts, arg0)
}

// AddressToTopics is a free data retrieval call binding the contract method 0x624c45ea.
//
// Solidity: function addressToTopics(address , uint256 ) view returns(string)
func (_Scatterprotocol *ScatterprotocolCaller) AddressToTopics(opts *bind.CallOpts, arg0 common.Address, arg1 *big.Int) (string, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "addressToTopics", arg0, arg1)

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// AddressToTopics is a free data retrieval call binding the contract method 0x624c45ea.
//
// Solidity: function addressToTopics(address , uint256 ) view returns(string)
func (_Scatterprotocol *ScatterprotocolSession) AddressToTopics(arg0 common.Address, arg1 *big.Int) (string, error) {
	return _Scatterprotocol.Contract.AddressToTopics(&_Scatterprotocol.CallOpts, arg0, arg1)
}

// AddressToTopics is a free data retrieval call binding the contract method 0x624c45ea.
//
// Solidity: function addressToTopics(address , uint256 ) view returns(string)
func (_Scatterprotocol *ScatterprotocolCallerSession) AddressToTopics(arg0 common.Address, arg1 *big.Int) (string, error) {
	return _Scatterprotocol.Contract.AddressToTopics(&_Scatterprotocol.CallOpts, arg0, arg1)
}

// CheckIfTopicExistsForRequestor is a free data retrieval call binding the contract method 0x35b40e60.
//
// Solidity: function checkIfTopicExistsForRequestor(address nodeAddress, string topicName) view returns(bool)
func (_Scatterprotocol *ScatterprotocolCaller) CheckIfTopicExistsForRequestor(opts *bind.CallOpts, nodeAddress common.Address, topicName string) (bool, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "checkIfTopicExistsForRequestor", nodeAddress, topicName)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// CheckIfTopicExistsForRequestor is a free data retrieval call binding the contract method 0x35b40e60.
//
// Solidity: function checkIfTopicExistsForRequestor(address nodeAddress, string topicName) view returns(bool)
func (_Scatterprotocol *ScatterprotocolSession) CheckIfTopicExistsForRequestor(nodeAddress common.Address, topicName string) (bool, error) {
	return _Scatterprotocol.Contract.CheckIfTopicExistsForRequestor(&_Scatterprotocol.CallOpts, nodeAddress, topicName)
}

// CheckIfTopicExistsForRequestor is a free data retrieval call binding the contract method 0x35b40e60.
//
// Solidity: function checkIfTopicExistsForRequestor(address nodeAddress, string topicName) view returns(bool)
func (_Scatterprotocol *ScatterprotocolCallerSession) CheckIfTopicExistsForRequestor(nodeAddress common.Address, topicName string) (bool, error) {
	return _Scatterprotocol.Contract.CheckIfTopicExistsForRequestor(&_Scatterprotocol.CallOpts, nodeAddress, topicName)
}

// EvaluationJobContract is a free data retrieval call binding the contract method 0xcff06d39.
//
// Solidity: function evaluationJobContract() view returns(address)
func (_Scatterprotocol *ScatterprotocolCaller) EvaluationJobContract(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "evaluationJobContract")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// EvaluationJobContract is a free data retrieval call binding the contract method 0xcff06d39.
//
// Solidity: function evaluationJobContract() view returns(address)
func (_Scatterprotocol *ScatterprotocolSession) EvaluationJobContract() (common.Address, error) {
	return _Scatterprotocol.Contract.EvaluationJobContract(&_Scatterprotocol.CallOpts)
}

// EvaluationJobContract is a free data retrieval call binding the contract method 0xcff06d39.
//
// Solidity: function evaluationJobContract() view returns(address)
func (_Scatterprotocol *ScatterprotocolCallerSession) EvaluationJobContract() (common.Address, error) {
	return _Scatterprotocol.Contract.EvaluationJobContract(&_Scatterprotocol.CallOpts)
}

// GetEnumRoleByAddress is a free data retrieval call binding the contract method 0x153a7b36.
//
// Solidity: function getEnumRoleByAddress(address addressToView) view returns(uint8)
func (_Scatterprotocol *ScatterprotocolCaller) GetEnumRoleByAddress(opts *bind.CallOpts, addressToView common.Address) (uint8, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "getEnumRoleByAddress", addressToView)

	if err != nil {
		return *new(uint8), err
	}

	out0 := *abi.ConvertType(out[0], new(uint8)).(*uint8)

	return out0, err

}

// GetEnumRoleByAddress is a free data retrieval call binding the contract method 0x153a7b36.
//
// Solidity: function getEnumRoleByAddress(address addressToView) view returns(uint8)
func (_Scatterprotocol *ScatterprotocolSession) GetEnumRoleByAddress(addressToView common.Address) (uint8, error) {
	return _Scatterprotocol.Contract.GetEnumRoleByAddress(&_Scatterprotocol.CallOpts, addressToView)
}

// GetEnumRoleByAddress is a free data retrieval call binding the contract method 0x153a7b36.
//
// Solidity: function getEnumRoleByAddress(address addressToView) view returns(uint8)
func (_Scatterprotocol *ScatterprotocolCallerSession) GetEnumRoleByAddress(addressToView common.Address) (uint8, error) {
	return _Scatterprotocol.Contract.GetEnumRoleByAddress(&_Scatterprotocol.CallOpts, addressToView)
}

// GetRequestorAddresses is a free data retrieval call binding the contract method 0xb4efe15f.
//
// Solidity: function getRequestorAddresses(int256 skip) view returns(string)
func (_Scatterprotocol *ScatterprotocolCaller) GetRequestorAddresses(opts *bind.CallOpts, skip *big.Int) (string, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "getRequestorAddresses", skip)

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// GetRequestorAddresses is a free data retrieval call binding the contract method 0xb4efe15f.
//
// Solidity: function getRequestorAddresses(int256 skip) view returns(string)
func (_Scatterprotocol *ScatterprotocolSession) GetRequestorAddresses(skip *big.Int) (string, error) {
	return _Scatterprotocol.Contract.GetRequestorAddresses(&_Scatterprotocol.CallOpts, skip)
}

// GetRequestorAddresses is a free data retrieval call binding the contract method 0xb4efe15f.
//
// Solidity: function getRequestorAddresses(int256 skip) view returns(string)
func (_Scatterprotocol *ScatterprotocolCallerSession) GetRequestorAddresses(skip *big.Int) (string, error) {
	return _Scatterprotocol.Contract.GetRequestorAddresses(&_Scatterprotocol.CallOpts, skip)
}

// GetRoleByAddress is a free data retrieval call binding the contract method 0x7bff77d4.
//
// Solidity: function getRoleByAddress(address addressToFind) view returns(string)
func (_Scatterprotocol *ScatterprotocolCaller) GetRoleByAddress(opts *bind.CallOpts, addressToFind common.Address) (string, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "getRoleByAddress", addressToFind)

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// GetRoleByAddress is a free data retrieval call binding the contract method 0x7bff77d4.
//
// Solidity: function getRoleByAddress(address addressToFind) view returns(string)
func (_Scatterprotocol *ScatterprotocolSession) GetRoleByAddress(addressToFind common.Address) (string, error) {
	return _Scatterprotocol.Contract.GetRoleByAddress(&_Scatterprotocol.CallOpts, addressToFind)
}

// GetRoleByAddress is a free data retrieval call binding the contract method 0x7bff77d4.
//
// Solidity: function getRoleByAddress(address addressToFind) view returns(string)
func (_Scatterprotocol *ScatterprotocolCallerSession) GetRoleByAddress(addressToFind common.Address) (string, error) {
	return _Scatterprotocol.Contract.GetRoleByAddress(&_Scatterprotocol.CallOpts, addressToFind)
}

// GetTopicsByRequestorAddress is a free data retrieval call binding the contract method 0xd8ecebed.
//
// Solidity: function getTopicsByRequestorAddress(address requestorAddress, int256 skip) view returns(string)
func (_Scatterprotocol *ScatterprotocolCaller) GetTopicsByRequestorAddress(opts *bind.CallOpts, requestorAddress common.Address, skip *big.Int) (string, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "getTopicsByRequestorAddress", requestorAddress, skip)

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// GetTopicsByRequestorAddress is a free data retrieval call binding the contract method 0xd8ecebed.
//
// Solidity: function getTopicsByRequestorAddress(address requestorAddress, int256 skip) view returns(string)
func (_Scatterprotocol *ScatterprotocolSession) GetTopicsByRequestorAddress(requestorAddress common.Address, skip *big.Int) (string, error) {
	return _Scatterprotocol.Contract.GetTopicsByRequestorAddress(&_Scatterprotocol.CallOpts, requestorAddress, skip)
}

// GetTopicsByRequestorAddress is a free data retrieval call binding the contract method 0xd8ecebed.
//
// Solidity: function getTopicsByRequestorAddress(address requestorAddress, int256 skip) view returns(string)
func (_Scatterprotocol *ScatterprotocolCallerSession) GetTopicsByRequestorAddress(requestorAddress common.Address, skip *big.Int) (string, error) {
	return _Scatterprotocol.Contract.GetTopicsByRequestorAddress(&_Scatterprotocol.CallOpts, requestorAddress, skip)
}

// GetTrainersByAddressAndTopic is a free data retrieval call binding the contract method 0x04aa1397.
//
// Solidity: function getTrainersByAddressAndTopic(address requestorAddress, string topicName, int256 skip) view returns(string)
func (_Scatterprotocol *ScatterprotocolCaller) GetTrainersByAddressAndTopic(opts *bind.CallOpts, requestorAddress common.Address, topicName string, skip *big.Int) (string, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "getTrainersByAddressAndTopic", requestorAddress, topicName, skip)

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// GetTrainersByAddressAndTopic is a free data retrieval call binding the contract method 0x04aa1397.
//
// Solidity: function getTrainersByAddressAndTopic(address requestorAddress, string topicName, int256 skip) view returns(string)
func (_Scatterprotocol *ScatterprotocolSession) GetTrainersByAddressAndTopic(requestorAddress common.Address, topicName string, skip *big.Int) (string, error) {
	return _Scatterprotocol.Contract.GetTrainersByAddressAndTopic(&_Scatterprotocol.CallOpts, requestorAddress, topicName, skip)
}

// GetTrainersByAddressAndTopic is a free data retrieval call binding the contract method 0x04aa1397.
//
// Solidity: function getTrainersByAddressAndTopic(address requestorAddress, string topicName, int256 skip) view returns(string)
func (_Scatterprotocol *ScatterprotocolCallerSession) GetTrainersByAddressAndTopic(requestorAddress common.Address, topicName string, skip *big.Int) (string, error) {
	return _Scatterprotocol.Contract.GetTrainersByAddressAndTopic(&_Scatterprotocol.CallOpts, requestorAddress, topicName, skip)
}

// GetTrainersForFederatedJob is a free data retrieval call binding the contract method 0x289a278f.
//
// Solidity: function getTrainersForFederatedJob(address requestorAddress, string topicName) view returns(address[])
func (_Scatterprotocol *ScatterprotocolCaller) GetTrainersForFederatedJob(opts *bind.CallOpts, requestorAddress common.Address, topicName string) ([]common.Address, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "getTrainersForFederatedJob", requestorAddress, topicName)

	if err != nil {
		return *new([]common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new([]common.Address)).(*[]common.Address)

	return out0, err

}

// GetTrainersForFederatedJob is a free data retrieval call binding the contract method 0x289a278f.
//
// Solidity: function getTrainersForFederatedJob(address requestorAddress, string topicName) view returns(address[])
func (_Scatterprotocol *ScatterprotocolSession) GetTrainersForFederatedJob(requestorAddress common.Address, topicName string) ([]common.Address, error) {
	return _Scatterprotocol.Contract.GetTrainersForFederatedJob(&_Scatterprotocol.CallOpts, requestorAddress, topicName)
}

// GetTrainersForFederatedJob is a free data retrieval call binding the contract method 0x289a278f.
//
// Solidity: function getTrainersForFederatedJob(address requestorAddress, string topicName) view returns(address[])
func (_Scatterprotocol *ScatterprotocolCallerSession) GetTrainersForFederatedJob(requestorAddress common.Address, topicName string) ([]common.Address, error) {
	return _Scatterprotocol.Contract.GetTrainersForFederatedJob(&_Scatterprotocol.CallOpts, requestorAddress, topicName)
}

// GetValidatorsForFederatedJob is a free data retrieval call binding the contract method 0x7e720f6d.
//
// Solidity: function getValidatorsForFederatedJob(address requestorAddress, string topicName) view returns(address[])
func (_Scatterprotocol *ScatterprotocolCaller) GetValidatorsForFederatedJob(opts *bind.CallOpts, requestorAddress common.Address, topicName string) ([]common.Address, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "getValidatorsForFederatedJob", requestorAddress, topicName)

	if err != nil {
		return *new([]common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new([]common.Address)).(*[]common.Address)

	return out0, err

}

// GetValidatorsForFederatedJob is a free data retrieval call binding the contract method 0x7e720f6d.
//
// Solidity: function getValidatorsForFederatedJob(address requestorAddress, string topicName) view returns(address[])
func (_Scatterprotocol *ScatterprotocolSession) GetValidatorsForFederatedJob(requestorAddress common.Address, topicName string) ([]common.Address, error) {
	return _Scatterprotocol.Contract.GetValidatorsForFederatedJob(&_Scatterprotocol.CallOpts, requestorAddress, topicName)
}

// GetValidatorsForFederatedJob is a free data retrieval call binding the contract method 0x7e720f6d.
//
// Solidity: function getValidatorsForFederatedJob(address requestorAddress, string topicName) view returns(address[])
func (_Scatterprotocol *ScatterprotocolCallerSession) GetValidatorsForFederatedJob(requestorAddress common.Address, topicName string) ([]common.Address, error) {
	return _Scatterprotocol.Contract.GetValidatorsForFederatedJob(&_Scatterprotocol.CallOpts, requestorAddress, topicName)
}

// IsJobInProgress is a free data retrieval call binding the contract method 0xc47557c3.
//
// Solidity: function isJobInProgress(address requestorAddress, string topicName) view returns(bool)
func (_Scatterprotocol *ScatterprotocolCaller) IsJobInProgress(opts *bind.CallOpts, requestorAddress common.Address, topicName string) (bool, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "isJobInProgress", requestorAddress, topicName)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// IsJobInProgress is a free data retrieval call binding the contract method 0xc47557c3.
//
// Solidity: function isJobInProgress(address requestorAddress, string topicName) view returns(bool)
func (_Scatterprotocol *ScatterprotocolSession) IsJobInProgress(requestorAddress common.Address, topicName string) (bool, error) {
	return _Scatterprotocol.Contract.IsJobInProgress(&_Scatterprotocol.CallOpts, requestorAddress, topicName)
}

// IsJobInProgress is a free data retrieval call binding the contract method 0xc47557c3.
//
// Solidity: function isJobInProgress(address requestorAddress, string topicName) view returns(bool)
func (_Scatterprotocol *ScatterprotocolCallerSession) IsJobInProgress(requestorAddress common.Address, topicName string) (bool, error) {
	return _Scatterprotocol.Contract.IsJobInProgress(&_Scatterprotocol.CallOpts, requestorAddress, topicName)
}

// IsValidatorForTrainingJob is a free data retrieval call binding the contract method 0x74241d60.
//
// Solidity: function isValidatorForTrainingJob(address requestorAddress, string topicName, address validatorAddress) view returns(bool)
func (_Scatterprotocol *ScatterprotocolCaller) IsValidatorForTrainingJob(opts *bind.CallOpts, requestorAddress common.Address, topicName string, validatorAddress common.Address) (bool, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "isValidatorForTrainingJob", requestorAddress, topicName, validatorAddress)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// IsValidatorForTrainingJob is a free data retrieval call binding the contract method 0x74241d60.
//
// Solidity: function isValidatorForTrainingJob(address requestorAddress, string topicName, address validatorAddress) view returns(bool)
func (_Scatterprotocol *ScatterprotocolSession) IsValidatorForTrainingJob(requestorAddress common.Address, topicName string, validatorAddress common.Address) (bool, error) {
	return _Scatterprotocol.Contract.IsValidatorForTrainingJob(&_Scatterprotocol.CallOpts, requestorAddress, topicName, validatorAddress)
}

// IsValidatorForTrainingJob is a free data retrieval call binding the contract method 0x74241d60.
//
// Solidity: function isValidatorForTrainingJob(address requestorAddress, string topicName, address validatorAddress) view returns(bool)
func (_Scatterprotocol *ScatterprotocolCallerSession) IsValidatorForTrainingJob(requestorAddress common.Address, topicName string, validatorAddress common.Address) (bool, error) {
	return _Scatterprotocol.Contract.IsValidatorForTrainingJob(&_Scatterprotocol.CallOpts, requestorAddress, topicName, validatorAddress)
}

// ModelTokenContract is a free data retrieval call binding the contract method 0x46747741.
//
// Solidity: function modelTokenContract() view returns(address)
func (_Scatterprotocol *ScatterprotocolCaller) ModelTokenContract(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "modelTokenContract")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// ModelTokenContract is a free data retrieval call binding the contract method 0x46747741.
//
// Solidity: function modelTokenContract() view returns(address)
func (_Scatterprotocol *ScatterprotocolSession) ModelTokenContract() (common.Address, error) {
	return _Scatterprotocol.Contract.ModelTokenContract(&_Scatterprotocol.CallOpts)
}

// ModelTokenContract is a free data retrieval call binding the contract method 0x46747741.
//
// Solidity: function modelTokenContract() view returns(address)
func (_Scatterprotocol *ScatterprotocolCallerSession) ModelTokenContract() (common.Address, error) {
	return _Scatterprotocol.Contract.ModelTokenContract(&_Scatterprotocol.CallOpts)
}

// NetworkRequestors is a free data retrieval call binding the contract method 0xa765d052.
//
// Solidity: function networkRequestors(uint256 ) view returns(address)
func (_Scatterprotocol *ScatterprotocolCaller) NetworkRequestors(opts *bind.CallOpts, arg0 *big.Int) (common.Address, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "networkRequestors", arg0)

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// NetworkRequestors is a free data retrieval call binding the contract method 0xa765d052.
//
// Solidity: function networkRequestors(uint256 ) view returns(address)
func (_Scatterprotocol *ScatterprotocolSession) NetworkRequestors(arg0 *big.Int) (common.Address, error) {
	return _Scatterprotocol.Contract.NetworkRequestors(&_Scatterprotocol.CallOpts, arg0)
}

// NetworkRequestors is a free data retrieval call binding the contract method 0xa765d052.
//
// Solidity: function networkRequestors(uint256 ) view returns(address)
func (_Scatterprotocol *ScatterprotocolCallerSession) NetworkRequestors(arg0 *big.Int) (common.Address, error) {
	return _Scatterprotocol.Contract.NetworkRequestors(&_Scatterprotocol.CallOpts, arg0)
}

// NetworkTrainers is a free data retrieval call binding the contract method 0xaa711be6.
//
// Solidity: function networkTrainers(uint256 ) view returns(address)
func (_Scatterprotocol *ScatterprotocolCaller) NetworkTrainers(opts *bind.CallOpts, arg0 *big.Int) (common.Address, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "networkTrainers", arg0)

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// NetworkTrainers is a free data retrieval call binding the contract method 0xaa711be6.
//
// Solidity: function networkTrainers(uint256 ) view returns(address)
func (_Scatterprotocol *ScatterprotocolSession) NetworkTrainers(arg0 *big.Int) (common.Address, error) {
	return _Scatterprotocol.Contract.NetworkTrainers(&_Scatterprotocol.CallOpts, arg0)
}

// NetworkTrainers is a free data retrieval call binding the contract method 0xaa711be6.
//
// Solidity: function networkTrainers(uint256 ) view returns(address)
func (_Scatterprotocol *ScatterprotocolCallerSession) NetworkTrainers(arg0 *big.Int) (common.Address, error) {
	return _Scatterprotocol.Contract.NetworkTrainers(&_Scatterprotocol.CallOpts, arg0)
}

// NetworkValidators is a free data retrieval call binding the contract method 0x4be0be0d.
//
// Solidity: function networkValidators(uint256 ) view returns(address)
func (_Scatterprotocol *ScatterprotocolCaller) NetworkValidators(opts *bind.CallOpts, arg0 *big.Int) (common.Address, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "networkValidators", arg0)

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// NetworkValidators is a free data retrieval call binding the contract method 0x4be0be0d.
//
// Solidity: function networkValidators(uint256 ) view returns(address)
func (_Scatterprotocol *ScatterprotocolSession) NetworkValidators(arg0 *big.Int) (common.Address, error) {
	return _Scatterprotocol.Contract.NetworkValidators(&_Scatterprotocol.CallOpts, arg0)
}

// NetworkValidators is a free data retrieval call binding the contract method 0x4be0be0d.
//
// Solidity: function networkValidators(uint256 ) view returns(address)
func (_Scatterprotocol *ScatterprotocolCallerSession) NetworkValidators(arg0 *big.Int) (common.Address, error) {
	return _Scatterprotocol.Contract.NetworkValidators(&_Scatterprotocol.CallOpts, arg0)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_Scatterprotocol *ScatterprotocolCaller) Owner(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "owner")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_Scatterprotocol *ScatterprotocolSession) Owner() (common.Address, error) {
	return _Scatterprotocol.Contract.Owner(&_Scatterprotocol.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_Scatterprotocol *ScatterprotocolCallerSession) Owner() (common.Address, error) {
	return _Scatterprotocol.Contract.Owner(&_Scatterprotocol.CallOpts)
}

// ReputationManagerContract is a free data retrieval call binding the contract method 0x67e98e1c.
//
// Solidity: function reputationManagerContract() view returns(address)
func (_Scatterprotocol *ScatterprotocolCaller) ReputationManagerContract(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "reputationManagerContract")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// ReputationManagerContract is a free data retrieval call binding the contract method 0x67e98e1c.
//
// Solidity: function reputationManagerContract() view returns(address)
func (_Scatterprotocol *ScatterprotocolSession) ReputationManagerContract() (common.Address, error) {
	return _Scatterprotocol.Contract.ReputationManagerContract(&_Scatterprotocol.CallOpts)
}

// ReputationManagerContract is a free data retrieval call binding the contract method 0x67e98e1c.
//
// Solidity: function reputationManagerContract() view returns(address)
func (_Scatterprotocol *ScatterprotocolCallerSession) ReputationManagerContract() (common.Address, error) {
	return _Scatterprotocol.Contract.ReputationManagerContract(&_Scatterprotocol.CallOpts)
}

// ScatterTokenContract is a free data retrieval call binding the contract method 0x594de850.
//
// Solidity: function scatterTokenContract() view returns(address)
func (_Scatterprotocol *ScatterprotocolCaller) ScatterTokenContract(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "scatterTokenContract")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// ScatterTokenContract is a free data retrieval call binding the contract method 0x594de850.
//
// Solidity: function scatterTokenContract() view returns(address)
func (_Scatterprotocol *ScatterprotocolSession) ScatterTokenContract() (common.Address, error) {
	return _Scatterprotocol.Contract.ScatterTokenContract(&_Scatterprotocol.CallOpts)
}

// ScatterTokenContract is a free data retrieval call binding the contract method 0x594de850.
//
// Solidity: function scatterTokenContract() view returns(address)
func (_Scatterprotocol *ScatterprotocolCallerSession) ScatterTokenContract() (common.Address, error) {
	return _Scatterprotocol.Contract.ScatterTokenContract(&_Scatterprotocol.CallOpts)
}

// TrainerTrainingMap is a free data retrieval call binding the contract method 0x67fa5840.
//
// Solidity: function trainerTrainingMap(address , string , address ) view returns(bool)
func (_Scatterprotocol *ScatterprotocolCaller) TrainerTrainingMap(opts *bind.CallOpts, arg0 common.Address, arg1 string, arg2 common.Address) (bool, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "trainerTrainingMap", arg0, arg1, arg2)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// TrainerTrainingMap is a free data retrieval call binding the contract method 0x67fa5840.
//
// Solidity: function trainerTrainingMap(address , string , address ) view returns(bool)
func (_Scatterprotocol *ScatterprotocolSession) TrainerTrainingMap(arg0 common.Address, arg1 string, arg2 common.Address) (bool, error) {
	return _Scatterprotocol.Contract.TrainerTrainingMap(&_Scatterprotocol.CallOpts, arg0, arg1, arg2)
}

// TrainerTrainingMap is a free data retrieval call binding the contract method 0x67fa5840.
//
// Solidity: function trainerTrainingMap(address , string , address ) view returns(bool)
func (_Scatterprotocol *ScatterprotocolCallerSession) TrainerTrainingMap(arg0 common.Address, arg1 string, arg2 common.Address) (bool, error) {
	return _Scatterprotocol.Contract.TrainerTrainingMap(&_Scatterprotocol.CallOpts, arg0, arg1, arg2)
}

// TrainingJobContract is a free data retrieval call binding the contract method 0xb3f5b280.
//
// Solidity: function trainingJobContract() view returns(address)
func (_Scatterprotocol *ScatterprotocolCaller) TrainingJobContract(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "trainingJobContract")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// TrainingJobContract is a free data retrieval call binding the contract method 0xb3f5b280.
//
// Solidity: function trainingJobContract() view returns(address)
func (_Scatterprotocol *ScatterprotocolSession) TrainingJobContract() (common.Address, error) {
	return _Scatterprotocol.Contract.TrainingJobContract(&_Scatterprotocol.CallOpts)
}

// TrainingJobContract is a free data retrieval call binding the contract method 0xb3f5b280.
//
// Solidity: function trainingJobContract() view returns(address)
func (_Scatterprotocol *ScatterprotocolCallerSession) TrainingJobContract() (common.Address, error) {
	return _Scatterprotocol.Contract.TrainingJobContract(&_Scatterprotocol.CallOpts)
}

// ValidatorTrainingMap is a free data retrieval call binding the contract method 0x0b680f76.
//
// Solidity: function validatorTrainingMap(address , string , address ) view returns(bool)
func (_Scatterprotocol *ScatterprotocolCaller) ValidatorTrainingMap(opts *bind.CallOpts, arg0 common.Address, arg1 string, arg2 common.Address) (bool, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "validatorTrainingMap", arg0, arg1, arg2)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// ValidatorTrainingMap is a free data retrieval call binding the contract method 0x0b680f76.
//
// Solidity: function validatorTrainingMap(address , string , address ) view returns(bool)
func (_Scatterprotocol *ScatterprotocolSession) ValidatorTrainingMap(arg0 common.Address, arg1 string, arg2 common.Address) (bool, error) {
	return _Scatterprotocol.Contract.ValidatorTrainingMap(&_Scatterprotocol.CallOpts, arg0, arg1, arg2)
}

// ValidatorTrainingMap is a free data retrieval call binding the contract method 0x0b680f76.
//
// Solidity: function validatorTrainingMap(address , string , address ) view returns(bool)
func (_Scatterprotocol *ScatterprotocolCallerSession) ValidatorTrainingMap(arg0 common.Address, arg1 string, arg2 common.Address) (bool, error) {
	return _Scatterprotocol.Contract.ValidatorTrainingMap(&_Scatterprotocol.CallOpts, arg0, arg1, arg2)
}

// VoteManagerContract is a free data retrieval call binding the contract method 0x38fcb3b2.
//
// Solidity: function voteManagerContract() view returns(address)
func (_Scatterprotocol *ScatterprotocolCaller) VoteManagerContract(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "voteManagerContract")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// VoteManagerContract is a free data retrieval call binding the contract method 0x38fcb3b2.
//
// Solidity: function voteManagerContract() view returns(address)
func (_Scatterprotocol *ScatterprotocolSession) VoteManagerContract() (common.Address, error) {
	return _Scatterprotocol.Contract.VoteManagerContract(&_Scatterprotocol.CallOpts)
}

// VoteManagerContract is a free data retrieval call binding the contract method 0x38fcb3b2.
//
// Solidity: function voteManagerContract() view returns(address)
func (_Scatterprotocol *ScatterprotocolCallerSession) VoteManagerContract() (common.Address, error) {
	return _Scatterprotocol.Contract.VoteManagerContract(&_Scatterprotocol.CallOpts)
}

// FederatedJobCleanUp is a paid mutator transaction binding the contract method 0x973e5814.
//
// Solidity: function federatedJobCleanUp(address requestorAddress, string topicName) returns()
func (_Scatterprotocol *ScatterprotocolTransactor) FederatedJobCleanUp(opts *bind.TransactOpts, requestorAddress common.Address, topicName string) (*types.Transaction, error) {
	return _Scatterprotocol.contract.Transact(opts, "federatedJobCleanUp", requestorAddress, topicName)
}

// FederatedJobCleanUp is a paid mutator transaction binding the contract method 0x973e5814.
//
// Solidity: function federatedJobCleanUp(address requestorAddress, string topicName) returns()
func (_Scatterprotocol *ScatterprotocolSession) FederatedJobCleanUp(requestorAddress common.Address, topicName string) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.FederatedJobCleanUp(&_Scatterprotocol.TransactOpts, requestorAddress, topicName)
}

// FederatedJobCleanUp is a paid mutator transaction binding the contract method 0x973e5814.
//
// Solidity: function federatedJobCleanUp(address requestorAddress, string topicName) returns()
func (_Scatterprotocol *ScatterprotocolTransactorSession) FederatedJobCleanUp(requestorAddress common.Address, topicName string) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.FederatedJobCleanUp(&_Scatterprotocol.TransactOpts, requestorAddress, topicName)
}

// InitRequestorNode is a paid mutator transaction binding the contract method 0xcb30bfc3.
//
// Solidity: function initRequestorNode() returns()
func (_Scatterprotocol *ScatterprotocolTransactor) InitRequestorNode(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Scatterprotocol.contract.Transact(opts, "initRequestorNode")
}

// InitRequestorNode is a paid mutator transaction binding the contract method 0xcb30bfc3.
//
// Solidity: function initRequestorNode() returns()
func (_Scatterprotocol *ScatterprotocolSession) InitRequestorNode() (*types.Transaction, error) {
	return _Scatterprotocol.Contract.InitRequestorNode(&_Scatterprotocol.TransactOpts)
}

// InitRequestorNode is a paid mutator transaction binding the contract method 0xcb30bfc3.
//
// Solidity: function initRequestorNode() returns()
func (_Scatterprotocol *ScatterprotocolTransactorSession) InitRequestorNode() (*types.Transaction, error) {
	return _Scatterprotocol.Contract.InitRequestorNode(&_Scatterprotocol.TransactOpts)
}

// InitTrainerNode is a paid mutator transaction binding the contract method 0x6949f907.
//
// Solidity: function initTrainerNode() returns()
func (_Scatterprotocol *ScatterprotocolTransactor) InitTrainerNode(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Scatterprotocol.contract.Transact(opts, "initTrainerNode")
}

// InitTrainerNode is a paid mutator transaction binding the contract method 0x6949f907.
//
// Solidity: function initTrainerNode() returns()
func (_Scatterprotocol *ScatterprotocolSession) InitTrainerNode() (*types.Transaction, error) {
	return _Scatterprotocol.Contract.InitTrainerNode(&_Scatterprotocol.TransactOpts)
}

// InitTrainerNode is a paid mutator transaction binding the contract method 0x6949f907.
//
// Solidity: function initTrainerNode() returns()
func (_Scatterprotocol *ScatterprotocolTransactorSession) InitTrainerNode() (*types.Transaction, error) {
	return _Scatterprotocol.Contract.InitTrainerNode(&_Scatterprotocol.TransactOpts)
}

// InitValidatorNode is a paid mutator transaction binding the contract method 0x45e2e030.
//
// Solidity: function initValidatorNode() returns()
func (_Scatterprotocol *ScatterprotocolTransactor) InitValidatorNode(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Scatterprotocol.contract.Transact(opts, "initValidatorNode")
}

// InitValidatorNode is a paid mutator transaction binding the contract method 0x45e2e030.
//
// Solidity: function initValidatorNode() returns()
func (_Scatterprotocol *ScatterprotocolSession) InitValidatorNode() (*types.Transaction, error) {
	return _Scatterprotocol.Contract.InitValidatorNode(&_Scatterprotocol.TransactOpts)
}

// InitValidatorNode is a paid mutator transaction binding the contract method 0x45e2e030.
//
// Solidity: function initValidatorNode() returns()
func (_Scatterprotocol *ScatterprotocolTransactorSession) InitValidatorNode() (*types.Transaction, error) {
	return _Scatterprotocol.Contract.InitValidatorNode(&_Scatterprotocol.TransactOpts)
}

// PublishModelToProtocol is a paid mutator transaction binding the contract method 0x9294be12.
//
// Solidity: function publishModelToProtocol(string modelURI, address requestorAddress, string topicName) returns()
func (_Scatterprotocol *ScatterprotocolTransactor) PublishModelToProtocol(opts *bind.TransactOpts, modelURI string, requestorAddress common.Address, topicName string) (*types.Transaction, error) {
	return _Scatterprotocol.contract.Transact(opts, "publishModelToProtocol", modelURI, requestorAddress, topicName)
}

// PublishModelToProtocol is a paid mutator transaction binding the contract method 0x9294be12.
//
// Solidity: function publishModelToProtocol(string modelURI, address requestorAddress, string topicName) returns()
func (_Scatterprotocol *ScatterprotocolSession) PublishModelToProtocol(modelURI string, requestorAddress common.Address, topicName string) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.PublishModelToProtocol(&_Scatterprotocol.TransactOpts, modelURI, requestorAddress, topicName)
}

// PublishModelToProtocol is a paid mutator transaction binding the contract method 0x9294be12.
//
// Solidity: function publishModelToProtocol(string modelURI, address requestorAddress, string topicName) returns()
func (_Scatterprotocol *ScatterprotocolTransactorSession) PublishModelToProtocol(modelURI string, requestorAddress common.Address, topicName string) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.PublishModelToProtocol(&_Scatterprotocol.TransactOpts, modelURI, requestorAddress, topicName)
}

// RequestorAddTopic is a paid mutator transaction binding the contract method 0x22e44f0c.
//
// Solidity: function requestorAddTopic(string trainingTokenURI, string evaluationTokenURI, string topicName, uint256 pooledReward, uint256 validationThresholdScore) returns()
func (_Scatterprotocol *ScatterprotocolTransactor) RequestorAddTopic(opts *bind.TransactOpts, trainingTokenURI string, evaluationTokenURI string, topicName string, pooledReward *big.Int, validationThresholdScore *big.Int) (*types.Transaction, error) {
	return _Scatterprotocol.contract.Transact(opts, "requestorAddTopic", trainingTokenURI, evaluationTokenURI, topicName, pooledReward, validationThresholdScore)
}

// RequestorAddTopic is a paid mutator transaction binding the contract method 0x22e44f0c.
//
// Solidity: function requestorAddTopic(string trainingTokenURI, string evaluationTokenURI, string topicName, uint256 pooledReward, uint256 validationThresholdScore) returns()
func (_Scatterprotocol *ScatterprotocolSession) RequestorAddTopic(trainingTokenURI string, evaluationTokenURI string, topicName string, pooledReward *big.Int, validationThresholdScore *big.Int) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.RequestorAddTopic(&_Scatterprotocol.TransactOpts, trainingTokenURI, evaluationTokenURI, topicName, pooledReward, validationThresholdScore)
}

// RequestorAddTopic is a paid mutator transaction binding the contract method 0x22e44f0c.
//
// Solidity: function requestorAddTopic(string trainingTokenURI, string evaluationTokenURI, string topicName, uint256 pooledReward, uint256 validationThresholdScore) returns()
func (_Scatterprotocol *ScatterprotocolTransactorSession) RequestorAddTopic(trainingTokenURI string, evaluationTokenURI string, topicName string, pooledReward *big.Int, validationThresholdScore *big.Int) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.RequestorAddTopic(&_Scatterprotocol.TransactOpts, trainingTokenURI, evaluationTokenURI, topicName, pooledReward, validationThresholdScore)
}

// RewardDistributor is a paid mutator transaction binding the contract method 0x0ef186a3.
//
// Solidity: function rewardDistributor(address requestorAddress, string topicName) returns()
func (_Scatterprotocol *ScatterprotocolTransactor) RewardDistributor(opts *bind.TransactOpts, requestorAddress common.Address, topicName string) (*types.Transaction, error) {
	return _Scatterprotocol.contract.Transact(opts, "rewardDistributor", requestorAddress, topicName)
}

// RewardDistributor is a paid mutator transaction binding the contract method 0x0ef186a3.
//
// Solidity: function rewardDistributor(address requestorAddress, string topicName) returns()
func (_Scatterprotocol *ScatterprotocolSession) RewardDistributor(requestorAddress common.Address, topicName string) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.RewardDistributor(&_Scatterprotocol.TransactOpts, requestorAddress, topicName)
}

// RewardDistributor is a paid mutator transaction binding the contract method 0x0ef186a3.
//
// Solidity: function rewardDistributor(address requestorAddress, string topicName) returns()
func (_Scatterprotocol *ScatterprotocolTransactorSession) RewardDistributor(requestorAddress common.Address, topicName string) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.RewardDistributor(&_Scatterprotocol.TransactOpts, requestorAddress, topicName)
}

// SetEvaluationJobContractAddress is a paid mutator transaction binding the contract method 0x039e09b1.
//
// Solidity: function setEvaluationJobContractAddress(address newAddress) returns()
func (_Scatterprotocol *ScatterprotocolTransactor) SetEvaluationJobContractAddress(opts *bind.TransactOpts, newAddress common.Address) (*types.Transaction, error) {
	return _Scatterprotocol.contract.Transact(opts, "setEvaluationJobContractAddress", newAddress)
}

// SetEvaluationJobContractAddress is a paid mutator transaction binding the contract method 0x039e09b1.
//
// Solidity: function setEvaluationJobContractAddress(address newAddress) returns()
func (_Scatterprotocol *ScatterprotocolSession) SetEvaluationJobContractAddress(newAddress common.Address) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.SetEvaluationJobContractAddress(&_Scatterprotocol.TransactOpts, newAddress)
}

// SetEvaluationJobContractAddress is a paid mutator transaction binding the contract method 0x039e09b1.
//
// Solidity: function setEvaluationJobContractAddress(address newAddress) returns()
func (_Scatterprotocol *ScatterprotocolTransactorSession) SetEvaluationJobContractAddress(newAddress common.Address) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.SetEvaluationJobContractAddress(&_Scatterprotocol.TransactOpts, newAddress)
}

// SetNodeId is a paid mutator transaction binding the contract method 0x7d9011ec.
//
// Solidity: function setNodeId(string nodeId) returns()
func (_Scatterprotocol *ScatterprotocolTransactor) SetNodeId(opts *bind.TransactOpts, nodeId string) (*types.Transaction, error) {
	return _Scatterprotocol.contract.Transact(opts, "setNodeId", nodeId)
}

// SetNodeId is a paid mutator transaction binding the contract method 0x7d9011ec.
//
// Solidity: function setNodeId(string nodeId) returns()
func (_Scatterprotocol *ScatterprotocolSession) SetNodeId(nodeId string) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.SetNodeId(&_Scatterprotocol.TransactOpts, nodeId)
}

// SetNodeId is a paid mutator transaction binding the contract method 0x7d9011ec.
//
// Solidity: function setNodeId(string nodeId) returns()
func (_Scatterprotocol *ScatterprotocolTransactorSession) SetNodeId(nodeId string) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.SetNodeId(&_Scatterprotocol.TransactOpts, nodeId)
}

// SetRole is a paid mutator transaction binding the contract method 0x571c3e60.
//
// Solidity: function setRole(address addressToUpdate, uint8 newRole) returns()
func (_Scatterprotocol *ScatterprotocolTransactor) SetRole(opts *bind.TransactOpts, addressToUpdate common.Address, newRole uint8) (*types.Transaction, error) {
	return _Scatterprotocol.contract.Transact(opts, "setRole", addressToUpdate, newRole)
}

// SetRole is a paid mutator transaction binding the contract method 0x571c3e60.
//
// Solidity: function setRole(address addressToUpdate, uint8 newRole) returns()
func (_Scatterprotocol *ScatterprotocolSession) SetRole(addressToUpdate common.Address, newRole uint8) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.SetRole(&_Scatterprotocol.TransactOpts, addressToUpdate, newRole)
}

// SetRole is a paid mutator transaction binding the contract method 0x571c3e60.
//
// Solidity: function setRole(address addressToUpdate, uint8 newRole) returns()
func (_Scatterprotocol *ScatterprotocolTransactorSession) SetRole(addressToUpdate common.Address, newRole uint8) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.SetRole(&_Scatterprotocol.TransactOpts, addressToUpdate, newRole)
}

// SetScatterTokenContractAddress is a paid mutator transaction binding the contract method 0xa9de0ae9.
//
// Solidity: function setScatterTokenContractAddress(address newAddress) returns()
func (_Scatterprotocol *ScatterprotocolTransactor) SetScatterTokenContractAddress(opts *bind.TransactOpts, newAddress common.Address) (*types.Transaction, error) {
	return _Scatterprotocol.contract.Transact(opts, "setScatterTokenContractAddress", newAddress)
}

// SetScatterTokenContractAddress is a paid mutator transaction binding the contract method 0xa9de0ae9.
//
// Solidity: function setScatterTokenContractAddress(address newAddress) returns()
func (_Scatterprotocol *ScatterprotocolSession) SetScatterTokenContractAddress(newAddress common.Address) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.SetScatterTokenContractAddress(&_Scatterprotocol.TransactOpts, newAddress)
}

// SetScatterTokenContractAddress is a paid mutator transaction binding the contract method 0xa9de0ae9.
//
// Solidity: function setScatterTokenContractAddress(address newAddress) returns()
func (_Scatterprotocol *ScatterprotocolTransactorSession) SetScatterTokenContractAddress(newAddress common.Address) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.SetScatterTokenContractAddress(&_Scatterprotocol.TransactOpts, newAddress)
}

// SetTrainingJobContractAddress is a paid mutator transaction binding the contract method 0x5aff6e77.
//
// Solidity: function setTrainingJobContractAddress(address newAddress) returns()
func (_Scatterprotocol *ScatterprotocolTransactor) SetTrainingJobContractAddress(opts *bind.TransactOpts, newAddress common.Address) (*types.Transaction, error) {
	return _Scatterprotocol.contract.Transact(opts, "setTrainingJobContractAddress", newAddress)
}

// SetTrainingJobContractAddress is a paid mutator transaction binding the contract method 0x5aff6e77.
//
// Solidity: function setTrainingJobContractAddress(address newAddress) returns()
func (_Scatterprotocol *ScatterprotocolSession) SetTrainingJobContractAddress(newAddress common.Address) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.SetTrainingJobContractAddress(&_Scatterprotocol.TransactOpts, newAddress)
}

// SetTrainingJobContractAddress is a paid mutator transaction binding the contract method 0x5aff6e77.
//
// Solidity: function setTrainingJobContractAddress(address newAddress) returns()
func (_Scatterprotocol *ScatterprotocolTransactorSession) SetTrainingJobContractAddress(newAddress common.Address) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.SetTrainingJobContractAddress(&_Scatterprotocol.TransactOpts, newAddress)
}

// StartTraining is a paid mutator transaction binding the contract method 0x300c7315.
//
// Solidity: function startTraining(string topicName) returns()
func (_Scatterprotocol *ScatterprotocolTransactor) StartTraining(opts *bind.TransactOpts, topicName string) (*types.Transaction, error) {
	return _Scatterprotocol.contract.Transact(opts, "startTraining", topicName)
}

// StartTraining is a paid mutator transaction binding the contract method 0x300c7315.
//
// Solidity: function startTraining(string topicName) returns()
func (_Scatterprotocol *ScatterprotocolSession) StartTraining(topicName string) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.StartTraining(&_Scatterprotocol.TransactOpts, topicName)
}

// StartTraining is a paid mutator transaction binding the contract method 0x300c7315.
//
// Solidity: function startTraining(string topicName) returns()
func (_Scatterprotocol *ScatterprotocolTransactorSession) StartTraining(topicName string) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.StartTraining(&_Scatterprotocol.TransactOpts, topicName)
}

// SubmitEvaluationScore is a paid mutator transaction binding the contract method 0x51ba5ab6.
//
// Solidity: function submitEvaluationScore(address requestorAddress, string topicName, address trainerAddress, uint256 score) returns()
func (_Scatterprotocol *ScatterprotocolTransactor) SubmitEvaluationScore(opts *bind.TransactOpts, requestorAddress common.Address, topicName string, trainerAddress common.Address, score *big.Int) (*types.Transaction, error) {
	return _Scatterprotocol.contract.Transact(opts, "submitEvaluationScore", requestorAddress, topicName, trainerAddress, score)
}

// SubmitEvaluationScore is a paid mutator transaction binding the contract method 0x51ba5ab6.
//
// Solidity: function submitEvaluationScore(address requestorAddress, string topicName, address trainerAddress, uint256 score) returns()
func (_Scatterprotocol *ScatterprotocolSession) SubmitEvaluationScore(requestorAddress common.Address, topicName string, trainerAddress common.Address, score *big.Int) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.SubmitEvaluationScore(&_Scatterprotocol.TransactOpts, requestorAddress, topicName, trainerAddress, score)
}

// SubmitEvaluationScore is a paid mutator transaction binding the contract method 0x51ba5ab6.
//
// Solidity: function submitEvaluationScore(address requestorAddress, string topicName, address trainerAddress, uint256 score) returns()
func (_Scatterprotocol *ScatterprotocolTransactorSession) SubmitEvaluationScore(requestorAddress common.Address, topicName string, trainerAddress common.Address, score *big.Int) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.SubmitEvaluationScore(&_Scatterprotocol.TransactOpts, requestorAddress, topicName, trainerAddress, score)
}

// SubmitEvaluationSet is a paid mutator transaction binding the contract method 0x8017c3e1.
//
// Solidity: function submitEvaluationSet(string topicName, string evaluationDataURI) returns()
func (_Scatterprotocol *ScatterprotocolTransactor) SubmitEvaluationSet(opts *bind.TransactOpts, topicName string, evaluationDataURI string) (*types.Transaction, error) {
	return _Scatterprotocol.contract.Transact(opts, "submitEvaluationSet", topicName, evaluationDataURI)
}

// SubmitEvaluationSet is a paid mutator transaction binding the contract method 0x8017c3e1.
//
// Solidity: function submitEvaluationSet(string topicName, string evaluationDataURI) returns()
func (_Scatterprotocol *ScatterprotocolSession) SubmitEvaluationSet(topicName string, evaluationDataURI string) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.SubmitEvaluationSet(&_Scatterprotocol.TransactOpts, topicName, evaluationDataURI)
}

// SubmitEvaluationSet is a paid mutator transaction binding the contract method 0x8017c3e1.
//
// Solidity: function submitEvaluationSet(string topicName, string evaluationDataURI) returns()
func (_Scatterprotocol *ScatterprotocolTransactorSession) SubmitEvaluationSet(topicName string, evaluationDataURI string) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.SubmitEvaluationSet(&_Scatterprotocol.TransactOpts, topicName, evaluationDataURI)
}

// TrainerAddTopic is a paid mutator transaction binding the contract method 0x6fb3337e.
//
// Solidity: function trainerAddTopic(address requestorAddress, string topicName, uint256 stakeAmount) returns()
func (_Scatterprotocol *ScatterprotocolTransactor) TrainerAddTopic(opts *bind.TransactOpts, requestorAddress common.Address, topicName string, stakeAmount *big.Int) (*types.Transaction, error) {
	return _Scatterprotocol.contract.Transact(opts, "trainerAddTopic", requestorAddress, topicName, stakeAmount)
}

// TrainerAddTopic is a paid mutator transaction binding the contract method 0x6fb3337e.
//
// Solidity: function trainerAddTopic(address requestorAddress, string topicName, uint256 stakeAmount) returns()
func (_Scatterprotocol *ScatterprotocolSession) TrainerAddTopic(requestorAddress common.Address, topicName string, stakeAmount *big.Int) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.TrainerAddTopic(&_Scatterprotocol.TransactOpts, requestorAddress, topicName, stakeAmount)
}

// TrainerAddTopic is a paid mutator transaction binding the contract method 0x6fb3337e.
//
// Solidity: function trainerAddTopic(address requestorAddress, string topicName, uint256 stakeAmount) returns()
func (_Scatterprotocol *ScatterprotocolTransactorSession) TrainerAddTopic(requestorAddress common.Address, topicName string, stakeAmount *big.Int) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.TrainerAddTopic(&_Scatterprotocol.TransactOpts, requestorAddress, topicName, stakeAmount)
}

// ScatterprotocolDebugEventIterator is returned from FilterDebugEvent and is used to iterate over the raw logs and unpacked data for DebugEvent events raised by the Scatterprotocol contract.
type ScatterprotocolDebugEventIterator struct {
	Event *ScatterprotocolDebugEvent // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ScatterprotocolDebugEventIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ScatterprotocolDebugEvent)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ScatterprotocolDebugEvent)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ScatterprotocolDebugEventIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ScatterprotocolDebugEventIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ScatterprotocolDebugEvent represents a DebugEvent event raised by the Scatterprotocol contract.
type ScatterprotocolDebugEvent struct {
	Message string
	Raw     types.Log // Blockchain specific contextual infos
}

// FilterDebugEvent is a free log retrieval operation binding the contract event 0x56f074d292557f2e3c567d982816e0fb5b72100ff196892f8fbd23b8a9073679.
//
// Solidity: event DebugEvent(string message)
func (_Scatterprotocol *ScatterprotocolFilterer) FilterDebugEvent(opts *bind.FilterOpts) (*ScatterprotocolDebugEventIterator, error) {

	logs, sub, err := _Scatterprotocol.contract.FilterLogs(opts, "DebugEvent")
	if err != nil {
		return nil, err
	}
	return &ScatterprotocolDebugEventIterator{contract: _Scatterprotocol.contract, event: "DebugEvent", logs: logs, sub: sub}, nil
}

// WatchDebugEvent is a free log subscription operation binding the contract event 0x56f074d292557f2e3c567d982816e0fb5b72100ff196892f8fbd23b8a9073679.
//
// Solidity: event DebugEvent(string message)
func (_Scatterprotocol *ScatterprotocolFilterer) WatchDebugEvent(opts *bind.WatchOpts, sink chan<- *ScatterprotocolDebugEvent) (event.Subscription, error) {

	logs, sub, err := _Scatterprotocol.contract.WatchLogs(opts, "DebugEvent")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ScatterprotocolDebugEvent)
				if err := _Scatterprotocol.contract.UnpackLog(event, "DebugEvent", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseDebugEvent is a log parse operation binding the contract event 0x56f074d292557f2e3c567d982816e0fb5b72100ff196892f8fbd23b8a9073679.
//
// Solidity: event DebugEvent(string message)
func (_Scatterprotocol *ScatterprotocolFilterer) ParseDebugEvent(log types.Log) (*ScatterprotocolDebugEvent, error) {
	event := new(ScatterprotocolDebugEvent)
	if err := _Scatterprotocol.contract.UnpackLog(event, "DebugEvent", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ScatterprotocolJobCompleteIterator is returned from FilterJobComplete and is used to iterate over the raw logs and unpacked data for JobComplete events raised by the Scatterprotocol contract.
type ScatterprotocolJobCompleteIterator struct {
	Event *ScatterprotocolJobComplete // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ScatterprotocolJobCompleteIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ScatterprotocolJobComplete)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ScatterprotocolJobComplete)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ScatterprotocolJobCompleteIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ScatterprotocolJobCompleteIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ScatterprotocolJobComplete represents a JobComplete event raised by the Scatterprotocol contract.
type ScatterprotocolJobComplete struct {
	Requestor common.Address
	TopicName string
	Raw       types.Log // Blockchain specific contextual infos
}

// FilterJobComplete is a free log retrieval operation binding the contract event 0x6205595390a0753e195fad731e2a21fe32900e9e6a00f2be0fbd7bf038147a1b.
//
// Solidity: event JobComplete(address requestor, string topicName)
func (_Scatterprotocol *ScatterprotocolFilterer) FilterJobComplete(opts *bind.FilterOpts) (*ScatterprotocolJobCompleteIterator, error) {

	logs, sub, err := _Scatterprotocol.contract.FilterLogs(opts, "JobComplete")
	if err != nil {
		return nil, err
	}
	return &ScatterprotocolJobCompleteIterator{contract: _Scatterprotocol.contract, event: "JobComplete", logs: logs, sub: sub}, nil
}

// WatchJobComplete is a free log subscription operation binding the contract event 0x6205595390a0753e195fad731e2a21fe32900e9e6a00f2be0fbd7bf038147a1b.
//
// Solidity: event JobComplete(address requestor, string topicName)
func (_Scatterprotocol *ScatterprotocolFilterer) WatchJobComplete(opts *bind.WatchOpts, sink chan<- *ScatterprotocolJobComplete) (event.Subscription, error) {

	logs, sub, err := _Scatterprotocol.contract.WatchLogs(opts, "JobComplete")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ScatterprotocolJobComplete)
				if err := _Scatterprotocol.contract.UnpackLog(event, "JobComplete", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseJobComplete is a log parse operation binding the contract event 0x6205595390a0753e195fad731e2a21fe32900e9e6a00f2be0fbd7bf038147a1b.
//
// Solidity: event JobComplete(address requestor, string topicName)
func (_Scatterprotocol *ScatterprotocolFilterer) ParseJobComplete(log types.Log) (*ScatterprotocolJobComplete, error) {
	event := new(ScatterprotocolJobComplete)
	if err := _Scatterprotocol.contract.UnpackLog(event, "JobComplete", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ScatterprotocolModelReadyToValidateIterator is returned from FilterModelReadyToValidate and is used to iterate over the raw logs and unpacked data for ModelReadyToValidate events raised by the Scatterprotocol contract.
type ScatterprotocolModelReadyToValidateIterator struct {
	Event *ScatterprotocolModelReadyToValidate // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ScatterprotocolModelReadyToValidateIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ScatterprotocolModelReadyToValidate)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ScatterprotocolModelReadyToValidate)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ScatterprotocolModelReadyToValidateIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ScatterprotocolModelReadyToValidateIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ScatterprotocolModelReadyToValidate represents a ModelReadyToValidate event raised by the Scatterprotocol contract.
type ScatterprotocolModelReadyToValidate struct {
	Requestor common.Address
	TopicName string
	Raw       types.Log // Blockchain specific contextual infos
}

// FilterModelReadyToValidate is a free log retrieval operation binding the contract event 0x81ebde127b98dac35c03a4eec2d7d67042cbb737d00846b2cb0fa3f4e33f159a.
//
// Solidity: event ModelReadyToValidate(address requestor, string topicName)
func (_Scatterprotocol *ScatterprotocolFilterer) FilterModelReadyToValidate(opts *bind.FilterOpts) (*ScatterprotocolModelReadyToValidateIterator, error) {

	logs, sub, err := _Scatterprotocol.contract.FilterLogs(opts, "ModelReadyToValidate")
	if err != nil {
		return nil, err
	}
	return &ScatterprotocolModelReadyToValidateIterator{contract: _Scatterprotocol.contract, event: "ModelReadyToValidate", logs: logs, sub: sub}, nil
}

// WatchModelReadyToValidate is a free log subscription operation binding the contract event 0x81ebde127b98dac35c03a4eec2d7d67042cbb737d00846b2cb0fa3f4e33f159a.
//
// Solidity: event ModelReadyToValidate(address requestor, string topicName)
func (_Scatterprotocol *ScatterprotocolFilterer) WatchModelReadyToValidate(opts *bind.WatchOpts, sink chan<- *ScatterprotocolModelReadyToValidate) (event.Subscription, error) {

	logs, sub, err := _Scatterprotocol.contract.WatchLogs(opts, "ModelReadyToValidate")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ScatterprotocolModelReadyToValidate)
				if err := _Scatterprotocol.contract.UnpackLog(event, "ModelReadyToValidate", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseModelReadyToValidate is a log parse operation binding the contract event 0x81ebde127b98dac35c03a4eec2d7d67042cbb737d00846b2cb0fa3f4e33f159a.
//
// Solidity: event ModelReadyToValidate(address requestor, string topicName)
func (_Scatterprotocol *ScatterprotocolFilterer) ParseModelReadyToValidate(log types.Log) (*ScatterprotocolModelReadyToValidate, error) {
	event := new(ScatterprotocolModelReadyToValidate)
	if err := _Scatterprotocol.contract.UnpackLog(event, "ModelReadyToValidate", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ScatterprotocolRequestForEvaluationSetIterator is returned from FilterRequestForEvaluationSet and is used to iterate over the raw logs and unpacked data for RequestForEvaluationSet events raised by the Scatterprotocol contract.
type ScatterprotocolRequestForEvaluationSetIterator struct {
	Event *ScatterprotocolRequestForEvaluationSet // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ScatterprotocolRequestForEvaluationSetIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ScatterprotocolRequestForEvaluationSet)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ScatterprotocolRequestForEvaluationSet)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ScatterprotocolRequestForEvaluationSetIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ScatterprotocolRequestForEvaluationSetIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ScatterprotocolRequestForEvaluationSet represents a RequestForEvaluationSet event raised by the Scatterprotocol contract.
type ScatterprotocolRequestForEvaluationSet struct {
	Requestor common.Address
	TopicName string
	Raw       types.Log // Blockchain specific contextual infos
}

// FilterRequestForEvaluationSet is a free log retrieval operation binding the contract event 0xf7e2a6109d1c061bfecbea32c29709ab398588a2d2ad965c461d536d086e14e0.
//
// Solidity: event RequestForEvaluationSet(address requestor, string topicName)
func (_Scatterprotocol *ScatterprotocolFilterer) FilterRequestForEvaluationSet(opts *bind.FilterOpts) (*ScatterprotocolRequestForEvaluationSetIterator, error) {

	logs, sub, err := _Scatterprotocol.contract.FilterLogs(opts, "RequestForEvaluationSet")
	if err != nil {
		return nil, err
	}
	return &ScatterprotocolRequestForEvaluationSetIterator{contract: _Scatterprotocol.contract, event: "RequestForEvaluationSet", logs: logs, sub: sub}, nil
}

// WatchRequestForEvaluationSet is a free log subscription operation binding the contract event 0xf7e2a6109d1c061bfecbea32c29709ab398588a2d2ad965c461d536d086e14e0.
//
// Solidity: event RequestForEvaluationSet(address requestor, string topicName)
func (_Scatterprotocol *ScatterprotocolFilterer) WatchRequestForEvaluationSet(opts *bind.WatchOpts, sink chan<- *ScatterprotocolRequestForEvaluationSet) (event.Subscription, error) {

	logs, sub, err := _Scatterprotocol.contract.WatchLogs(opts, "RequestForEvaluationSet")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ScatterprotocolRequestForEvaluationSet)
				if err := _Scatterprotocol.contract.UnpackLog(event, "RequestForEvaluationSet", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseRequestForEvaluationSet is a log parse operation binding the contract event 0xf7e2a6109d1c061bfecbea32c29709ab398588a2d2ad965c461d536d086e14e0.
//
// Solidity: event RequestForEvaluationSet(address requestor, string topicName)
func (_Scatterprotocol *ScatterprotocolFilterer) ParseRequestForEvaluationSet(log types.Log) (*ScatterprotocolRequestForEvaluationSet, error) {
	event := new(ScatterprotocolRequestForEvaluationSet)
	if err := _Scatterprotocol.contract.UnpackLog(event, "RequestForEvaluationSet", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ScatterprotocolTrainingInitializedIterator is returned from FilterTrainingInitialized and is used to iterate over the raw logs and unpacked data for TrainingInitialized events raised by the Scatterprotocol contract.
type ScatterprotocolTrainingInitializedIterator struct {
	Event *ScatterprotocolTrainingInitialized // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ScatterprotocolTrainingInitializedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ScatterprotocolTrainingInitialized)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ScatterprotocolTrainingInitialized)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ScatterprotocolTrainingInitializedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ScatterprotocolTrainingInitializedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ScatterprotocolTrainingInitialized represents a TrainingInitialized event raised by the Scatterprotocol contract.
type ScatterprotocolTrainingInitialized struct {
	Requestor common.Address
	TopicName string
	Raw       types.Log // Blockchain specific contextual infos
}

// FilterTrainingInitialized is a free log retrieval operation binding the contract event 0xccf83a8b6b0e84145342e27b95fb2db4f9485912b03ae9e14666580c72ef2b3d.
//
// Solidity: event TrainingInitialized(address requestor, string topicName)
func (_Scatterprotocol *ScatterprotocolFilterer) FilterTrainingInitialized(opts *bind.FilterOpts) (*ScatterprotocolTrainingInitializedIterator, error) {

	logs, sub, err := _Scatterprotocol.contract.FilterLogs(opts, "TrainingInitialized")
	if err != nil {
		return nil, err
	}
	return &ScatterprotocolTrainingInitializedIterator{contract: _Scatterprotocol.contract, event: "TrainingInitialized", logs: logs, sub: sub}, nil
}

// WatchTrainingInitialized is a free log subscription operation binding the contract event 0xccf83a8b6b0e84145342e27b95fb2db4f9485912b03ae9e14666580c72ef2b3d.
//
// Solidity: event TrainingInitialized(address requestor, string topicName)
func (_Scatterprotocol *ScatterprotocolFilterer) WatchTrainingInitialized(opts *bind.WatchOpts, sink chan<- *ScatterprotocolTrainingInitialized) (event.Subscription, error) {

	logs, sub, err := _Scatterprotocol.contract.WatchLogs(opts, "TrainingInitialized")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ScatterprotocolTrainingInitialized)
				if err := _Scatterprotocol.contract.UnpackLog(event, "TrainingInitialized", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseTrainingInitialized is a log parse operation binding the contract event 0xccf83a8b6b0e84145342e27b95fb2db4f9485912b03ae9e14666580c72ef2b3d.
//
// Solidity: event TrainingInitialized(address requestor, string topicName)
func (_Scatterprotocol *ScatterprotocolFilterer) ParseTrainingInitialized(log types.Log) (*ScatterprotocolTrainingInitialized, error) {
	event := new(ScatterprotocolTrainingInitialized)
	if err := _Scatterprotocol.contract.UnpackLog(event, "TrainingInitialized", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}
