// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package scatterprotocol

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
	_ = abi.ConvertType
)

// ScatterprotocolMetaData contains all meta data concerning the Scatterprotocol contract.
var ScatterprotocolMetaData = &bind.MetaData{
	ABI: "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"trainingTokenContractAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"evaluationTokenContractAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"scatterTokenContractAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"modelTokenContractAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"reputationManagerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"voteManagerAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"name\":\"DebugEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"requestor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"topicName\",\"type\":\"string\"}],\"name\":\"JobComplete\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"requestor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"topicName\",\"type\":\"string\"}],\"name\":\"ModelReadyToValidate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"requestor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"topicName\",\"type\":\"string\"}],\"name\":\"RequestForEvaluationSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"requestor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"topicName\",\"type\":\"string\"}],\"name\":\"TrainingInitialized\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"addressToFederatedJob\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"trainingJobCid\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"publishedTrainerCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pooledReward\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"evaluationJobCid\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"evaluationJobDataCid\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"jobTerminationDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"validatorValidationCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"jobStartDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"validationThresholdScore\",\"type\":\"uint256\"},{\"internalType\":\"enumFederatedJobStatus\",\"name\":\"status\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToNodeId\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToRoles\",\"outputs\":[{\"internalType\":\"enumroles\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"addressToTopics\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nodeAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"topicName\",\"type\":\"string\"}],\"name\":\"checkIfTopicExistsForRequestor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"evaluationJobContract\",\"outputs\":[{\"internalType\":\"contractIEvaluationJobToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"requestorAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"topicName\",\"type\":\"string\"}],\"name\":\"federatedJobCleanUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addressToView\",\"type\":\"address\"}],\"name\":\"getEnumRoleByAddress\",\"outputs\":[{\"internalType\":\"enumroles\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"skip\",\"type\":\"int256\"}],\"name\":\"getRequestorAddresses\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addressToFind\",\"type\":\"address\"}],\"name\":\"getRoleByAddress\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"requestorAddress\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"skip\",\"type\":\"int256\"}],\"name\":\"getTopicsByRequestorAddress\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"requestorAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"topicName\",\"type\":\"string\"},{\"internalType\":\"int256\",\"name\":\"skip\",\"type\":\"int256\"}],\"name\":\"getTrainersByAddressAndTopic\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"requestorAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"topicName\",\"type\":\"string\"}],\"name\":\"getTrainersForFederatedJob\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"requestorAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"topicName\",\"type\":\"string\"}],\"name\":\"getValidatorsForFederatedJob\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initRequestorNode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initTrainerNode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initValidatorNode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"requestorAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"topicName\",\"type\":\"string\"}],\"name\":\"isJobInProgress\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"requestorAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"topicName\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"validatorAddress\",\"type\":\"address\"}],\"name\":\"isValidatorForTrainingJob\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"modelTokenContract\",\"outputs\":[{\"internalType\":\"contractIModelToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"networkRequestors\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"networkTrainers\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"networkValidators\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"nodeIdToAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"addresspayable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"modelURI\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"requestorAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"topicName\",\"type\":\"string\"}],\"name\":\"publishModelToProtocol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reputationManagerContract\",\"outputs\":[{\"internalType\":\"contractIReputationManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"trainingTokenURI\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"evaluationTokenURI\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"topicName\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"pooledReward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"validationThresholdScore\",\"type\":\"uint256\"}],\"name\":\"requestorAddTopic\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"requestorAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"topicName\",\"type\":\"string\"}],\"name\":\"rewardDistributor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"scatterTokenContract\",\"outputs\":[{\"internalType\":\"contractIScatterToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"setEvaluationJobContractAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"nodeId\",\"type\":\"string\"}],\"name\":\"setNodeId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addressToUpdate\",\"type\":\"address\"},{\"internalType\":\"enumroles\",\"name\":\"newRole\",\"type\":\"uint8\"}],\"name\":\"setRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"setScatterTokenContractAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"setTrainingJobContractAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"topicName\",\"type\":\"string\"}],\"name\":\"startTraining\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"requestorAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"topicName\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"trainerAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"score\",\"type\":\"uint256\"}],\"name\":\"submitEvaluationScore\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"topicName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"evaluationDataURI\",\"type\":\"string\"}],\"name\":\"submitEvaluationSet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"requestorAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"topicName\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"stakeAmount\",\"type\":\"uint256\"}],\"name\":\"trainerAddTopic\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"trainerTrainingMap\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"trainingJobContract\",\"outputs\":[{\"internalType\":\"contractITrainingJobToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"validatorTrainingMap\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"voteManagerContract\",\"outputs\":[{\"internalType\":\"contractIVoteManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]",
	Bin: "0x6080604052600160185560646019553480156200001a575f80fd5b5060405162004075380380620040758339810160408190526200003d91620000d5565b5f8054336001600160a01b0319918216179091556001805482166001600160a01b0398891617905560028054821696881696909617909555600380548616948716949094179093556004805485169286169290921790915560058054841691851691909117905560068054909216921691909117905562000152565b80516001600160a01b0381168114620000d0575f80fd5b919050565b5f805f805f8060c08789031215620000eb575f80fd5b620000f687620000b9565b95506200010660208801620000b9565b94506200011660408801620000b9565b93506200012660608801620000b9565b92506200013660808801620000b9565b91506200014660a08801620000b9565b90509295509295509295565b613f1580620001605f395ff3fe608060405234801561000f575f80fd5b5060043610610260575f3560e01c80636949f9071161014b578063a9de0ae9116100bf578063c47557c311610084578063c47557c3146105ff578063cb30bfc314610612578063cff06d391461061a578063d8ecebed1461062d578063ef36d16a14610640578063f629ad7114610653575f80fd5b8063a9de0ae91461057f578063aa711be614610592578063b3f5b280146105a5578063b4efe15f146105b8578063c27f66a6146105cb575f80fd5b80637e720f6d116101105780637e720f6d1461050e5780638017c3e1146105215780638da5cb5b146105345780639294be1214610546578063973e581414610559578063a765d0521461056c575f80fd5b80636949f907146104ba5780636fb3337e146104c257806374241d60146104d55780637bff77d4146104e85780637d9011ec146104fb575f80fd5b806338fcb3b2116101e2578063571c3e60116101a7578063571c3e6014610417578063594de8501461042a5780635aff6e771461043d578063624c45ea1461045057806367e98e1c1461046357806367fa584014610476575f80fd5b806338fcb3b2146103ab57806345e2e030146103d657806346747741146103de5780634be0be0d146103f157806351ba5ab614610404575f80fd5b806322e44f0c1161022857806322e44f0c14610329578063240ae0951461033c578063289a278f14610365578063300c73151461038557806335b40e6014610398575f80fd5b8063039e09b11461026457806304aa1397146102795780630b680f76146102a25780630ef186a3146102f6578063153a7b3614610309575b5f80fd5b610277610272366004613069565b610675565b005b61028c610287366004613140565b6106c9565b60405161029991906131e1565b60405180910390f35b6102e66102b03660046131f3565b601660209081525f9384526040808520845180860184018051928152908401958401959095209452929052825290205460ff1681565b6040519015158152602001610299565b610277610304366004613252565b61080b565b61031c610317366004613069565b610bd8565b60405161029991906132b2565b6102776103373660046132cc565b610c22565b61034f61034a366004613252565b610fb4565b6040516102999a9998979695949392919061335e565b610378610373366004613252565b6111b1565b60405161029991906133e7565b610277610393366004613433565b611246565b6102e66103a6366004613252565b61152c565b6006546103be906001600160a01b031681565b6040516001600160a01b039091168152602001610299565b610277611579565b6004546103be906001600160a01b031681565b6103be6103ff36600461346c565b611696565b610277610412366004613483565b6116be565b6102776104253660046134e8565b61182a565b6003546103be906001600160a01b031681565b61027761044b366004613069565b611891565b61028c61045e366004613522565b6118dc565b6005546103be906001600160a01b031681565b6102e66104843660046131f3565b601460209081525f9384526040808520845180860184018051928152908401958401959095209452929052825290205460ff1681565b61027761198d565b6102776104d0366004613140565b6119d1565b6102e66104e33660046131f3565b611c7b565b61028c6104f6366004613069565b611cd2565b610277610509366004613433565b611e55565b61037861051c366004613252565b611eb1565b61027761052f36600461354c565b611f40565b5f546103be906001600160a01b031681565b6102776105543660046135a1565b612091565b610277610567366004613252565b612475565b6103be61057a36600461346c565b61255f565b61027761058d366004613069565b61256e565b6103be6105a036600461346c565b6125b9565b6001546103be906001600160a01b031681565b61028c6105c636600461346c565b6125c8565b6103be6105d9366004613433565b80516020818301810180516013825292820191909301209152546001600160a01b031681565b6102e661060d366004613252565b61267b565b6102776126d3565b6002546103be906001600160a01b031681565b61028c61063b366004613522565b612715565b61028c61064e366004613069565b612810565b61031c610661366004613069565b60096020525f908152604090205460ff1681565b5f546001600160a01b031633146106a75760405162461bcd60e51b815260040161069e90613613565b60405180910390fd5b600280546001600160a01b0319166001600160a01b0392909216919091179055565b60408051602080820183525f8083526001600160a01b0387168152600a9091528281209251606093906106fd908790613658565b90815260405190819003602001902090505f61071a85600a613687565b6001830154126107345761072f85600a613687565b61073a565b60018201545b9050845b818112156107ff575f6001600160a01b0316836001018281548110610765576107656136ae565b5f918252602090912001546001600160a01b0316146107f757836107b2846001018381548110610797576107976136ae565b5f918252602090912001546001600160a01b03166014612828565b6040516020016107c39291906136c2565b6040516020818303038152906040529350836040516020016107e591906136f0565b60405160208183030381529060405293505b60010161073e565b50919695505050505050565b6001600160a01b0382165f908152600a60205260408082209051829190610833908590613658565b908152602001604051809103902060060154905080421015801561085657508015155b1561086057600191505b5f61086b85856129c4565b90505f6108788686612aa3565b9050838061088b575081801561088b5750805b93508380156108e7575060036001600160a01b0387165f908152600a60205260409081902090516108bd908890613658565b908152604051908190036020019020600a015460ff1660038111156108e4576108e461329e565b14155b8015610940575060026001600160a01b0387165f908152600a6020526040908190209051610916908890613658565b908152604051908190036020019020600a015460ff16600381111561093d5761093d61329e565b14155b93508315610bd0576001600160a01b0386165f908152600a602052604090819020905160029190610972908890613658565b908152604051908190036020019020600a01805460ff1916600183600381111561099e5761099e61329e565b021790555060035460405163824205d160e01b81526001600160a01b039091169063824205d1906109d59089908990600401613714565b5f604051808303815f87803b1580156109ec575f80fd5b505af11580156109fe573d5f803e3d5ffd5b5050600354604051631f3af38d60e31b81526001600160a01b03909116925063f9d79c689150610a349089908990600401613714565b5f604051808303815f87803b158015610a4b575f80fd5b505af1158015610a5d573d5f803e3d5ffd5b505060035460405163da0e3f1360e01b81526001600160a01b03909116925063da0e3f139150610a939089908990600401613714565b5f604051808303815f87803b158015610aaa575f80fd5b505af1158015610abc573d5f803e3d5ffd5b50506003546040516204b46160ed1b81526001600160a01b03909116925063968c20009150610af19089908990600401613714565b5f604051808303815f87803b158015610b08575f80fd5b505af1158015610b1a573d5f803e3d5ffd5b5050600354604051632ca2386960e01b81526001600160a01b039091169250632ca238699150610b509089908990600401613714565b5f604051808303815f87803b158015610b67575f80fd5b505af1158015610b79573d5f803e3d5ffd5b50506040516325cf960560e21b815230925063973e58149150610ba29089908990600401613714565b5f604051808303815f87803b158015610bb9575f80fd5b505af1158015610bcb573d5f803e3d5ffd5b505050505b505050505050565b6003545f906001600160a01b03163314610c045760405162461bcd60e51b815260040161069e90613737565b506001600160a01b03165f9081526009602052604090205460ff1690565b6001335f9081526009602052604090205460ff166004811115610c4757610c4761329e565b14610c645760405162461bcd60e51b815260040161069e90613794565b60015460405163341c527b60e11b81526001600160a01b0390911690636838a4f690610c969088903390600401613802565b6020604051808303815f875af1158015610cb2573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610cd6919061382b565b50600254604051631ca9847d60e31b81526001600160a01b039091169063e54c23e890610d0b90339087908990600401613842565b6020604051808303815f875af1158015610d27573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d4b919061382b565b50604080515f808252610180820183526020808301898152838501849052606084018390526080840187905260a08401899052845191820190945281815260c0830152909160e08301610d9e6001612bce565b610da89042613881565b81526020015f81526020014281526020018481526020015f6003811115610dd157610dd161329e565b9052335f908152600a60205260409081902090519192508291610df5908890613658565b90815260405190819003602001902081518190610e129082613917565b506020828101518051610e2b9260018501920190612fde565b50604082015160028201556060820151600382015560808201516004820190610e549082613917565b5060a08201516005820190610e699082613917565b5060c0820151600682015560e0820151600782015561010082015160088201556101208201516009820155610140820151600a8201805460ff19166001836003811115610eb857610eb861329e565b021790555050335f908152600b60209081526040822080546001810182559083529120019050610ee88682613917565b506003546040516342a0f9bf60e01b81526001600160a01b03909116906342a0f9bf90610f1d903390899089906004016139d2565b5f604051808303815f87803b158015610f34575f80fd5b505af1158015610f46573d5f803e3d5ffd5b505060065460405163ce83f60f60e01b81526001600160a01b03909116925063ce83f60f9150610f7e903390899088906004016139d2565b5f604051808303815f87803b158015610f95575f80fd5b505af1158015610fa7573d5f803e3d5ffd5b5050505050505050505050565b600a60209081525f92835260409092208151808301840180519281529084019290930191909120915280548190610fea90613894565b80601f016020809104026020016040519081016040528092919081815260200182805461101690613894565b80156110615780601f1061103857610100808354040283529160200191611061565b820191905f5260205f20905b81548152906001019060200180831161104457829003601f168201915b50505050509080600201549080600301549080600401805461108290613894565b80601f01602080910402602001604051908101604052809291908181526020018280546110ae90613894565b80156110f95780601f106110d0576101008083540402835291602001916110f9565b820191905f5260205f20905b8154815290600101906020018083116110dc57829003601f168201915b50505050509080600501805461110e90613894565b80601f016020809104026020016040519081016040528092919081815260200182805461113a90613894565b80156111855780601f1061115c57610100808354040283529160200191611185565b820191905f5260205f20905b81548152906001019060200180831161116857829003601f168201915b5050506006840154600785015460088601546009870154600a9097015495969295919450925060ff168a565b6001600160a01b0382165f908152600a6020526040908190209051606091906111db908490613658565b908152604080519182900360209081018320600101805480830285018301909352828452919083018282801561123857602002820191905f5260205f20905b81546001600160a01b0316815260019091019060200180831161121a575b505050505090505b92915050565b6001335f9081526009602052604090205460ff16600481111561126b5761126b61329e565b146112885760405162461bcd60e51b815260040161069e90613794565b611292338261152c565b6113145760405162461bcd60e51b815260206004820152604760248201527f5468697320746f70696320686173206e6f74206265656e20616464656420616e60448201527f64207468657265666f72652063616e6e6f74207374617274206120747261696e60648201526634b733903537b160c91b608482015260a40161069e565b6019546011545f916064916113299190613a05565b6113339190613a30565b90505f611398601180548060200260200160405190810160405280929190818152602001828054801561138d57602002820191905f5260205f20905b81546001600160a01b0316815260019091019060200180831161136f575b505050505083612c1b565b90505f5b815181101561149b57335f90815260166020526040908190209051600191906113c6908790613658565b90815260200160405180910390205f8484815181106113e7576113e76136ae565b6020908102919091018101516001600160a01b031682528181019290925260409081015f908120805460ff1916941515949094179093553383526017909152908190209051611437908690613658565b9081526020016040518091039020828281518110611457576114576136ae565b6020908102919091018101518254600180820185555f9485529290932090920180546001600160a01b0319166001600160a01b03909316929092179091550161139c565b50335f908152600a6020526040908190209051600191906114bd908690613658565b908152604051908190036020019020600a01805460ff191660018360038111156114e9576114e961329e565b02179055507fccf83a8b6b0e84145342e27b95fb2db4f9485912b03ae9e14666580c72ef2b3d338460405161151f929190613714565b60405180910390a1505050565b6001600160a01b0382165f908152600a60205260408082209051829190611554908590613658565b908152604051908190036020019020805461156e90613894565b905011905092915050565b600354604051639dacf42d60e01b81523360048201525f916001600160a01b031690639dacf42d906024016020604051808303815f875af11580156115c0573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906115e49190613a43565b9050806116515760405162461bcd60e51b815260206004820152603560248201527f596f7572206e6f6465206973206e6f7420656c696769626c6520746f2062656360448201527437b6b290309036b7b232b6103b30b634b230ba37b960591b606482015260840161069e565b61165e600d600c33612d54565b61166b600f600e33612d54565b335f818152600960205260409020805460ff1916600317905561169390601190601090612e67565b50565b601181815481106116a5575f80fd5b5f918252602090912001546001600160a01b0316905081565b6003335f9081526009602052604090205460ff1660048111156116e3576116e361329e565b146117675760405162461bcd60e51b815260206004820152604860248201527f596f75206d757374206368616e676520796f7572206e6f6465277320726f6c6560448201527f20746f2076616c696461746f72206265666f72652063616c6c696e67207468696064820152671cc81b595d1a1bd960c21b608482015260a40161069e565b6002546040516351bd242160e01b81526001600160a01b03909116906351bd24219061179f9087908790879033908890600401613a62565b5f604051808303815f87803b1580156117b6575f80fd5b505af11580156117c8573d5f803e3d5ffd5b5050506001600160a01b0385165f908152600a6020526040908190209051600192506117f5908690613658565b90815260200160405180910390206007015f8282546118149190613881565b909155506118249050848461080b565b50505050565b6003546001600160a01b031633146118545760405162461bcd60e51b815260040161069e90613737565b6001600160a01b0382165f908152600960205260409020805482919060ff191660018360048111156118885761188861329e565b02179055505050565b5f546001600160a01b031633146118ba5760405162461bcd60e51b815260040161069e90613613565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b600b602052815f5260405f2081815481106118f5575f80fd5b905f5260205f20015f9150915050805461190e90613894565b80601f016020809104026020016040519081016040528092919081815260200182805461193a90613894565b80156119855780601f1061195c57610100808354040283529160200191611985565b820191905f5260205f20905b81548152906001019060200180831161196857829003601f168201915b505050505081565b61199a6011601033612d54565b6119a7600d600c33612d54565b335f818152600960205260409020805460ff191660021790556119cf90600f90600e90612e67565b565b6002335f9081526009602052604090205460ff1660048111156119f6576119f661329e565b14611a135760405162461bcd60e51b815260040161069e90613a9f565b6001600160a01b0383165f908152600a60205260408082209051611a38908590613658565b908152604051908190036020019020600a015460ff166003811115611a5f57611a5f61329e565b14611ac55760405162461bcd60e51b815260206004820152603060248201527f466564657261746564206a6f62206d757374206e6f742068617665207374617260448201526f1d1959081d1c985a5b9a5b99c81e595d60821b606482015260840161069e565b6001600160a01b0383165f908152601460205260408082209051611aea908590613658565b9081526040805160209281900383019020335f908152925290205460ff1690508015611b165750505050565b60035460405163ccd712d560e01b81526001600160a01b039091169063ccd712d590611b4c903390889088908890600401613b0b565b5f604051808303815f87803b158015611b63575f80fd5b505af1158015611b75573d5f803e3d5ffd5b505050506001600160a01b0384165f908152600a6020526040908190209051611b9f908590613658565b9081526040805191829003602090810183206001908101805480830182555f9182528382200180546001600160a01b031916331790556001600160a01b038916815260149092529190209091611bf6908690613658565b9081526040805160209281900383018120335f908152908452828120805460ff1916951515959095179094556001600160a01b0388168452601590925290912090611c42908590613658565b90815260405190819003602090810190912080546001810182555f9182529190200180546001600160a01b03191633179055505b505050565b6001600160a01b0383165f908152601660205260408082209051611ca0908590613658565b908152604080519182900360209081019092206001600160a01b0385165f908152925290205460ff1690509392505050565b606060016001600160a01b0383165f9081526009602052604090205460ff166004811115611d0257611d0261329e565b03611d2c5750506040805180820190915260098152683932b8bab2b9ba37b960b91b602082015290565b60026001600160a01b0383165f9081526009602052604090205460ff166004811115611d5a57611d5a61329e565b03611d825750506040805180820190915260078152663a3930b4b732b960c91b602082015290565b60036001600160a01b0383165f9081526009602052604090205460ff166004811115611db057611db061329e565b03611dda5750506040805180820190915260098152683b30b634b230ba37b960b91b602082015290565b60046001600160a01b0383165f9081526009602052604090205460ff166004811115611e0857611e0861329e565b03611e325750506040805180820190915260098152686368616c6c656e676560b81b602082015290565b50506040805180820190915260078152666e6f20726f6c6560c81b602082015290565b335f908152601260205260409020611e6d8282613917565b5033601382604051611e7f9190613658565b90815260405190819003602001902080546001600160a01b03929092166001600160a01b031990921691909117905550565b6001600160a01b0382165f9081526017602052604090819020905160609190611edb908490613658565b908152604080519182900360209081018320805480830285018301909352828452919083018282801561123857602002820191905f5260205f209081546001600160a01b0316815260019091019060200180831161121a575050505050905092915050565b6001335f9081526009602052604090205460ff166004811115611f6557611f6561329e565b14611f825760405162461bcd60e51b815260040161069e90613794565b600254335f818152600a60205260409081902090516001600160a01b0390931692630909230192918691611fb7908390613658565b9081526020016040518091039020600401856040518563ffffffff1660e01b8152600401611fe89493929190613b47565b5f604051808303815f87803b158015611fff575f80fd5b505af1158015612011573d5f803e3d5ffd5b5050335f908152600a6020526040908190209051849350909150612036908590613658565b908152602001604051809103902060050190816120539190613917565b507f81ebde127b98dac35c03a4eec2d7d67042cbb737d00846b2cb0fa3f4e33f159a3383604051612085929190613714565b60405180910390a15050565b6002335f9081526009602052604090205460ff1660048111156120b6576120b661329e565b146120d35760405162461bcd60e51b815260040161069e90613a9f565b60048054604051632e8a493560e11b8152612184926001600160a01b0390921691635d14926a9161210a9187918791339101613c02565b5f60405180830381865afa158015612124573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f1916820160405261214b9190810190613c36565b6040805160208082019092525f905281519101207fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4701490565b6121f65760405162461bcd60e51b815260206004820152603a60248201527f596f75206861766520616c7265616479207075626c69736865642061206d6f6460448201527f656c202d2063616e6e6f74207075626c69736820616761696e21000000000000606482015260840161069e565b6001600160a01b0382165f90815260146020526040808220905161221b908490613658565b9081526040805160209281900383019020335f908152925290205460ff169050806122c05760405162461bcd60e51b815260206004820152604960248201527f596f752063616e6e6f74207375626d69742061206d6f64656c20746f2074686960448201527f7320746f706963207768656e20796f7520617265206e6f742073756273637269606482015268189959081d1bc81a5d60ba1b608482015260a40161069e565b600480546040516319fb580360e11b81526001600160a01b03909116916333f6b006916122f591889133918991899101613ca7565b6020604051808303815f875af1158015612311573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190612335919061382b565b506001600160a01b0383165f908152600a6020526040808220905161235b908590613658565b908152602001604051809103902090506001816002015f82825461237f9190613881565b925050819055505f816001018054806020026020016040519081016040528092919081815260200182805480156123dd57602002820191905f5260205f20905b81546001600160a01b031681526001909101906020018083116123bf575b505050505090505f81515f14806123f957508260020154825114155b90505f6124055f612bce565b84600801546124149190613881565b42111590508180156124235750805b15612432575050505050505050565b7ff7e2a6109d1c061bfecbea32c29709ab398588a2d2ad965c461d536d086e14e08787604051612463929190613714565b60405180910390a15050505050505050565b600354604051631143fd4d60e31b81526001600160a01b0390911690638a1fea68906124a79085908590600401613714565b5f604051808303815f87803b1580156124be575f80fd5b505af11580156124d0573d5f803e3d5ffd5b5050506001600160a01b0383165f908152600a6020526040908190209051600392506124fd908490613658565b908152604051908190036020019020600a01805460ff191660018360038111156125295761252961329e565b02179055507f6205595390a0753e195fad731e2a21fe32900e9e6a00f2be0fbd7bf038147a1b8282604051612085929190613714565b600d81815481106116a5575f80fd5b5f546001600160a01b031633146125975760405162461bcd60e51b815260040161069e90613613565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b600f81815481106116a5575f80fd5b60408051602081019091525f808252606091906125e684600a613687565b600d54126125fe576125f984600a613687565b612602565b600d545b9050835b818112156126725782612625600d8381548110610797576107976136ae565b6040516020016126369291906136c2565b60405160208183030381529060405292508260405160200161265891906136f0565b60408051601f198184030181529190529250600101612606565b50909392505050565b5f60016001600160a01b0384165f908152600a60205260409081902090516126a4908590613658565b908152604051908190036020019020600a015460ff1660038111156126cb576126cb61329e565b149392505050565b6126e0600f600e33612d54565b6126ed6011601033612d54565b335f818152600960205260409020805460ff191660011790556119cf90600d90600c90612e67565b60408051602081019091525f8082526060919061273384600a613687565b6001600160a01b0386165f908152600b6020526040902054126127605761275b84600a613687565b612779565b6001600160a01b0385165f908152600b60205260409020545b9050835b81811215612806576001600160a01b0386165f908152600b602052604090208054849190839081106127b1576127b16136ae565b905f5260205f20016040516020016127ca929190613ced565b6040516020818303038152906040529250826040516020016127ec91906136f0565b60408051601f19818403018152919052925060010161277d565b5090949350505050565b60126020525f90815260409020805461190e90613894565b60605f612836836002613a05565b612841906002613881565b6001600160401b0381111561285857612858613084565b6040519080825280601f01601f191660200182016040528015612882576020820181803683370190505b509050600360fc1b815f8151811061289c5761289c6136ae565b60200101906001600160f81b03191690815f1a905350600f60fb1b816001815181106128ca576128ca6136ae565b60200101906001600160f81b03191690815f1a9053505f6128ec846002613a05565b6128f7906001613881565b90505b600181111561296e576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811061292b5761292b6136ae565b1a60f81b828281518110612941576129416136ae565b60200101906001600160f81b03191690815f1a90535060049490941c9361296781613d77565b90506128fa565b5083156129bd5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604482015260640161069e565b9392505050565b6001600160a01b0382165f908152600a602052604080822090518291906129ec908590613658565b9081526040805191829003602090810183206001018054808302850183019093528284529190830182828015612a4957602002820191905f5260205f20905b81546001600160a01b03168152600190910190602001808311612a2b575b505050505090505f600a5f866001600160a01b03166001600160a01b031681526020019081526020015f2084604051612a829190613658565b90815260405190819003602001902060020154915190911491505092915050565b604051637e720f6d60e01b81525f9081903090637e720f6d90612acc9087908790600401613714565b5f60405180830381865afa158015612ae6573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f19168201604052612b0d9190810190613d8c565b60405163289a278f60e01b81529091505f90309063289a278f90612b379088908890600401613714565b5f60405180830381865afa158015612b51573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f19168201604052612b789190810190613d8c565b6001600160a01b0386165f908152600a602052604080822090519293509091612ba2908790613658565b908152602001604051809103902060070154905081518351612bc49190613a05565b1495945050505050565b5f80826001811115612be257612be261329e565b03612bf157506213c680919050565b6001826001811115612c0557612c0561329e565b03612c14575062278d00919050565b505f919050565b60605f8213612c385750604080515f815260208101909152611240565b8251821115612ca45760405162461bcd60e51b815260206004820152603260248201527f436f756e742073686f756c64206265206c657373207468616e206f72206571756044820152710c2d840e8de40c2e4e4c2f240d8cadccee8d60731b606482015260840161069e565b5f612cae84612ecb565b90505f836001600160401b03811115612cc957612cc9613084565b604051908082528060200260200182016040528015612cf2578160200160208202803683370190505b5090505f5b84811015612d4b57828181518110612d1157612d116136ae565b6020026020010151828281518110612d2b57612d2b6136ae565b6001600160a01b0390921660209283029190910190910152600101612cf7565b50949350505050565b6001600160a01b0381165f9081526020839052604081205490819003612d7a5750505050565b5f612d86600183613e38565b90505f8560018780549050612d9b9190613e38565b81548110612dab57612dab6136ae565b905f5260205f20015f9054906101000a90046001600160a01b0316905080868381548110612ddb57612ddb6136ae565b5f91825260208083209190910180546001600160a01b0319166001600160a01b03948516179055918316815290869052604090208390558554869080612e2357612e23613e4b565b5f828152602080822083015f1990810180546001600160a01b03191690559092019092556001600160a01b0395909516815294909352505060408220919091555050565b6001600160a01b0381165f9081526020839052604090205415612e8957505050565b82546001810184555f848152602080822090920180546001600160a01b039094166001600160a01b031990941684179055935491845291909152604090912055565b805160609082905f612ede600183613e38565b90505b8015612672575f612ef3826001613881565b612efb612f93565b612f059190613e5f565b9050838181518110612f1957612f196136ae565b6020026020010151848381518110612f3357612f336136ae565b6020026020010151858481518110612f4d57612f4d6136ae565b60200260200101868481518110612f6657612f666136ae565b6001600160a01b039384166020918202929092010152911690525080612f8b81613d77565b915050612ee1565b601880545f9182612fa383613e72565b9091555050601854604051612fc19144914291601191602001613e8a565b604051602081830303815290604052805190602001205f1c905090565b828054828255905f5260205f20908101928215613031579160200282015b8281111561303157825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190612ffc565b5061303d929150613041565b5090565b5b8082111561303d575f8155600101613042565b6001600160a01b0381168114611693575f80fd5b5f60208284031215613079575f80fd5b81356129bd81613055565b634e487b7160e01b5f52604160045260245ffd5b604051601f8201601f191681016001600160401b03811182821017156130c0576130c0613084565b604052919050565b5f6001600160401b038211156130e0576130e0613084565b50601f01601f191660200190565b5f82601f8301126130fd575f80fd5b813561311061310b826130c8565b613098565b818152846020838601011115613124575f80fd5b816020850160208301375f918101602001919091529392505050565b5f805f60608486031215613152575f80fd5b833561315d81613055565b925060208401356001600160401b03811115613177575f80fd5b613183868287016130ee565b925050604084013590509250925092565b5f5b838110156131ae578181015183820152602001613196565b50505f910152565b5f81518084526131cd816020860160208601613194565b601f01601f19169290920160200192915050565b602081525f6129bd60208301846131b6565b5f805f60608486031215613205575f80fd5b833561321081613055565b925060208401356001600160401b0381111561322a575f80fd5b613236868287016130ee565b925050604084013561324781613055565b809150509250925092565b5f8060408385031215613263575f80fd5b823561326e81613055565b915060208301356001600160401b03811115613288575f80fd5b613294858286016130ee565b9150509250929050565b634e487b7160e01b5f52602160045260245ffd5b60208101600583106132c6576132c661329e565b91905290565b5f805f805f60a086880312156132e0575f80fd5b85356001600160401b03808211156132f6575f80fd5b61330289838a016130ee565b96506020880135915080821115613317575f80fd5b61332389838a016130ee565b95506040880135915080821115613338575f80fd5b50613345888289016130ee565b9598949750949560608101359550608001359392505050565b5f6101408083526133718184018e6131b6565b90508b60208401528a60408401528281036060840152613391818b6131b6565b905082810360808401526133a5818a6131b6565b9150508660a08301528560c08301528460e083015283610100830152600483106133d1576133d161329e565b826101208301529b9a5050505050505050505050565b602080825282518282018190525f9190848201906040850190845b818110156134275783516001600160a01b031683529284019291840191600101613402565b50909695505050505050565b5f60208284031215613443575f80fd5b81356001600160401b03811115613458575f80fd5b613464848285016130ee565b949350505050565b5f6020828403121561347c575f80fd5b5035919050565b5f805f8060808587031215613496575f80fd5b84356134a181613055565b935060208501356001600160401b038111156134bb575f80fd5b6134c7878288016130ee565b93505060408501356134d881613055565b9396929550929360600135925050565b5f80604083850312156134f9575f80fd5b823561350481613055565b9150602083013560058110613517575f80fd5b809150509250929050565b5f8060408385031215613533575f80fd5b823561353e81613055565b946020939093013593505050565b5f806040838503121561355d575f80fd5b82356001600160401b0380821115613573575f80fd5b61357f868387016130ee565b93506020850135915080821115613594575f80fd5b50613294858286016130ee565b5f805f606084860312156135b3575f80fd5b83356001600160401b03808211156135c9575f80fd5b6135d5878388016130ee565b9450602086013591506135e782613055565b909250604085013590808211156135fc575f80fd5b50613609868287016130ee565b9150509250925092565b60208082526025908201527f4f6e6c7920746865206f776e65722063616e2063616c6c20746869732066756e60408201526431ba34b7b760d91b606082015260800190565b5f8251613669818460208701613194565b9190910192915050565b634e487b7160e01b5f52601160045260245ffd5b8082018281125f8312801582168215821617156136a6576136a6613673565b505092915050565b634e487b7160e01b5f52603260045260245ffd5b5f83516136d3818460208801613194565b8351908301906136e7818360208801613194565b01949350505050565b5f8251613701818460208701613194565b600560f91b920191825250600101919050565b6001600160a01b03831681526040602082018190525f90613464908301846131b6565b6020808252603c908201527f54686973206d6574686f642063616e206f6e6c792062652063616c6c6564206260408201527f7920746865207363617474657220746f6b656e20636f6e747261637400000000606082015260800190565b60208082526048908201527f596f75206d757374206368616e676520796f7572206e6f6465277320726f6c6560408201527f20746f20726571756573746f72206265666f72652063616c6c696e67207468696060820152671cc81b595d1a1bd960c21b608082015260a00190565b604081525f61381460408301856131b6565b905060018060a01b03831660208301529392505050565b5f6020828403121561383b575f80fd5b5051919050565b6001600160a01b03841681526060602082018190525f90613865908301856131b6565b828103604084015261387781856131b6565b9695505050505050565b8082018082111561124057611240613673565b600181811c908216806138a857607f821691505b6020821081036138c657634e487b7160e01b5f52602260045260245ffd5b50919050565b601f821115611c7657805f5260205f20601f840160051c810160208510156138f15750805b601f840160051c820191505b81811015613910575f81556001016138fd565b5050505050565b81516001600160401b0381111561393057613930613084565b6139448161393e8454613894565b846138cc565b602080601f831160018114613977575f84156139605750858301515b5f19600386901b1c1916600185901b178555610bd0565b5f85815260208120601f198616915b828110156139a557888601518255948401946001909101908401613986565b50858210156139c257878501515f19600388901b60f8161c191681555b5050505050600190811b01905550565b6001600160a01b03841681526060602082018190525f906139f5908301856131b6565b9050826040830152949350505050565b808202811582820484141761124057611240613673565b634e487b7160e01b5f52601260045260245ffd5b5f82613a3e57613a3e613a1c565b500490565b5f60208284031215613a53575f80fd5b815180151581146129bd575f80fd5b5f60018060a01b03808816835260a06020840152613a8360a08401886131b6565b9581166040840152939093166060820152608001525092915050565b60208082526046908201527f596f75206d757374206368616e676520796f7572206e6f6465277320726f6c6560408201527f20746f20747261696e6572206265666f72652063616c6c696e672074686973206060820152651b595d1a1bd960d21b608082015260a00190565b6001600160a01b038581168252841660208201526080604082018190525f90613b36908301856131b6565b905082606083015295945050505050565b6001600160a01b0385168152608060208083018290525f91613b6b908401876131b6565b83810360408501525f8654613b7f81613894565b80845260018281168015613b9a5760018114613bb457613bdf565b60ff1984168688015282151560051b860187019450613bdf565b8a5f52865f205f5b84811015613bd75781548882018a0152908301908801613bbc565b870188019550505b505050508481036060860152613bf581876131b6565b9998505050505050505050565b5f60018060a01b03808616835260606020840152613c2360608401866131b6565b9150808416604084015250949350505050565b5f60208284031215613c46575f80fd5b81516001600160401b03811115613c5b575f80fd5b8201601f81018413613c6b575f80fd5b8051613c7961310b826130c8565b818152856020838501011115613c8d575f80fd5b613c9e826020830160208601613194565b95945050505050565b608081525f613cb960808301876131b6565b6001600160a01b038681166020850152851660408401528281036060840152613ce281856131b6565b979650505050505050565b5f83516020613d00828560208901613194565b81840191505f8554613d1181613894565b60018281168015613d295760018114613d3e57613d68565b60ff1984168752821515830287019450613d68565b895f5260205f205f5b84811015613d6057815489820152908301908701613d47565b505082870194505b50929998505050505050505050565b5f81613d8557613d85613673565b505f190190565b5f6020808385031215613d9d575f80fd5b82516001600160401b0380821115613db3575f80fd5b818501915085601f830112613dc6575f80fd5b815181811115613dd857613dd8613084565b8060051b9150613de9848301613098565b8181529183018401918481019088841115613e02575f80fd5b938501935b83851015613e2c5784519250613e1c83613055565b8282529385019390850190613e07565b98975050505050505050565b8181038181111561124057611240613673565b634e487b7160e01b5f52603160045260245ffd5b5f82613e6d57613e6d613a1c565b500690565b5f60018201613e8357613e83613673565b5060010190565b8481525f6020856020840152604083018554865f5260205f205f5b82811015613eca5781546001600160a01b031684529284019260019182019101613ea5565b5050509384525050602090910194935050505056fea2646970667358221220861d8c36e01784ea3a7f28c7f747ae958298d2e38f3292bae4a61ddf44b2de2e64736f6c63430008170033",
}

// ScatterprotocolABI is the input ABI used to generate the binding from.
// Deprecated: Use ScatterprotocolMetaData.ABI instead.
var ScatterprotocolABI = ScatterprotocolMetaData.ABI

// ScatterprotocolBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use ScatterprotocolMetaData.Bin instead.
var ScatterprotocolBin = ScatterprotocolMetaData.Bin

// DeployScatterprotocol deploys a new Ethereum contract, binding an instance of Scatterprotocol to it.
func DeployScatterprotocol(auth *bind.TransactOpts, backend bind.ContractBackend, trainingTokenContractAddress common.Address, evaluationTokenContractAddress common.Address, scatterTokenContractAddress common.Address, modelTokenContractAddress common.Address, reputationManagerAddress common.Address, voteManagerAddress common.Address) (common.Address, *types.Transaction, *Scatterprotocol, error) {
	parsed, err := ScatterprotocolMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(ScatterprotocolBin), backend, trainingTokenContractAddress, evaluationTokenContractAddress, scatterTokenContractAddress, modelTokenContractAddress, reputationManagerAddress, voteManagerAddress)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &Scatterprotocol{ScatterprotocolCaller: ScatterprotocolCaller{contract: contract}, ScatterprotocolTransactor: ScatterprotocolTransactor{contract: contract}, ScatterprotocolFilterer: ScatterprotocolFilterer{contract: contract}}, nil
}

// Scatterprotocol is an auto generated Go binding around an Ethereum contract.
type Scatterprotocol struct {
	ScatterprotocolCaller     // Read-only binding to the contract
	ScatterprotocolTransactor // Write-only binding to the contract
	ScatterprotocolFilterer   // Log filterer for contract events
}

// ScatterprotocolCaller is an auto generated read-only Go binding around an Ethereum contract.
type ScatterprotocolCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ScatterprotocolTransactor is an auto generated write-only Go binding around an Ethereum contract.
type ScatterprotocolTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ScatterprotocolFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type ScatterprotocolFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ScatterprotocolSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type ScatterprotocolSession struct {
	Contract     *Scatterprotocol  // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// ScatterprotocolCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type ScatterprotocolCallerSession struct {
	Contract *ScatterprotocolCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts          // Call options to use throughout this session
}

// ScatterprotocolTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type ScatterprotocolTransactorSession struct {
	Contract     *ScatterprotocolTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts          // Transaction auth options to use throughout this session
}

// ScatterprotocolRaw is an auto generated low-level Go binding around an Ethereum contract.
type ScatterprotocolRaw struct {
	Contract *Scatterprotocol // Generic contract binding to access the raw methods on
}

// ScatterprotocolCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type ScatterprotocolCallerRaw struct {
	Contract *ScatterprotocolCaller // Generic read-only contract binding to access the raw methods on
}

// ScatterprotocolTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type ScatterprotocolTransactorRaw struct {
	Contract *ScatterprotocolTransactor // Generic write-only contract binding to access the raw methods on
}

// NewScatterprotocol creates a new instance of Scatterprotocol, bound to a specific deployed contract.
func NewScatterprotocol(address common.Address, backend bind.ContractBackend) (*Scatterprotocol, error) {
	contract, err := bindScatterprotocol(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &Scatterprotocol{ScatterprotocolCaller: ScatterprotocolCaller{contract: contract}, ScatterprotocolTransactor: ScatterprotocolTransactor{contract: contract}, ScatterprotocolFilterer: ScatterprotocolFilterer{contract: contract}}, nil
}

// NewScatterprotocolCaller creates a new read-only instance of Scatterprotocol, bound to a specific deployed contract.
func NewScatterprotocolCaller(address common.Address, caller bind.ContractCaller) (*ScatterprotocolCaller, error) {
	contract, err := bindScatterprotocol(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &ScatterprotocolCaller{contract: contract}, nil
}

// NewScatterprotocolTransactor creates a new write-only instance of Scatterprotocol, bound to a specific deployed contract.
func NewScatterprotocolTransactor(address common.Address, transactor bind.ContractTransactor) (*ScatterprotocolTransactor, error) {
	contract, err := bindScatterprotocol(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &ScatterprotocolTransactor{contract: contract}, nil
}

// NewScatterprotocolFilterer creates a new log filterer instance of Scatterprotocol, bound to a specific deployed contract.
func NewScatterprotocolFilterer(address common.Address, filterer bind.ContractFilterer) (*ScatterprotocolFilterer, error) {
	contract, err := bindScatterprotocol(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &ScatterprotocolFilterer{contract: contract}, nil
}

// bindScatterprotocol binds a generic wrapper to an already deployed contract.
func bindScatterprotocol(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := ScatterprotocolMetaData.GetAbi()
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, *parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Scatterprotocol *ScatterprotocolRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Scatterprotocol.Contract.ScatterprotocolCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Scatterprotocol *ScatterprotocolRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.ScatterprotocolTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Scatterprotocol *ScatterprotocolRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.ScatterprotocolTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Scatterprotocol *ScatterprotocolCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Scatterprotocol.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Scatterprotocol *ScatterprotocolTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Scatterprotocol *ScatterprotocolTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.contract.Transact(opts, method, params...)
}

// AddressToFederatedJob is a free data retrieval call binding the contract method 0x240ae095.
//
// Solidity: function addressToFederatedJob(address , string ) view returns(string trainingJobCid, uint256 publishedTrainerCount, uint256 pooledReward, string evaluationJobCid, string evaluationJobDataCid, uint256 jobTerminationDate, uint256 validatorValidationCount, uint256 jobStartDate, uint256 validationThresholdScore, uint8 status)
func (_Scatterprotocol *ScatterprotocolCaller) AddressToFederatedJob(opts *bind.CallOpts, arg0 common.Address, arg1 string) (struct {
	TrainingJobCid           string
	PublishedTrainerCount    *big.Int
	PooledReward             *big.Int
	EvaluationJobCid         string
	EvaluationJobDataCid     string
	JobTerminationDate       *big.Int
	ValidatorValidationCount *big.Int
	JobStartDate             *big.Int
	ValidationThresholdScore *big.Int
	Status                   uint8
}, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "addressToFederatedJob", arg0, arg1)

	outstruct := new(struct {
		TrainingJobCid           string
		PublishedTrainerCount    *big.Int
		PooledReward             *big.Int
		EvaluationJobCid         string
		EvaluationJobDataCid     string
		JobTerminationDate       *big.Int
		ValidatorValidationCount *big.Int
		JobStartDate             *big.Int
		ValidationThresholdScore *big.Int
		Status                   uint8
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.TrainingJobCid = *abi.ConvertType(out[0], new(string)).(*string)
	outstruct.PublishedTrainerCount = *abi.ConvertType(out[1], new(*big.Int)).(**big.Int)
	outstruct.PooledReward = *abi.ConvertType(out[2], new(*big.Int)).(**big.Int)
	outstruct.EvaluationJobCid = *abi.ConvertType(out[3], new(string)).(*string)
	outstruct.EvaluationJobDataCid = *abi.ConvertType(out[4], new(string)).(*string)
	outstruct.JobTerminationDate = *abi.ConvertType(out[5], new(*big.Int)).(**big.Int)
	outstruct.ValidatorValidationCount = *abi.ConvertType(out[6], new(*big.Int)).(**big.Int)
	outstruct.JobStartDate = *abi.ConvertType(out[7], new(*big.Int)).(**big.Int)
	outstruct.ValidationThresholdScore = *abi.ConvertType(out[8], new(*big.Int)).(**big.Int)
	outstruct.Status = *abi.ConvertType(out[9], new(uint8)).(*uint8)

	return *outstruct, err

}

// AddressToFederatedJob is a free data retrieval call binding the contract method 0x240ae095.
//
// Solidity: function addressToFederatedJob(address , string ) view returns(string trainingJobCid, uint256 publishedTrainerCount, uint256 pooledReward, string evaluationJobCid, string evaluationJobDataCid, uint256 jobTerminationDate, uint256 validatorValidationCount, uint256 jobStartDate, uint256 validationThresholdScore, uint8 status)
func (_Scatterprotocol *ScatterprotocolSession) AddressToFederatedJob(arg0 common.Address, arg1 string) (struct {
	TrainingJobCid           string
	PublishedTrainerCount    *big.Int
	PooledReward             *big.Int
	EvaluationJobCid         string
	EvaluationJobDataCid     string
	JobTerminationDate       *big.Int
	ValidatorValidationCount *big.Int
	JobStartDate             *big.Int
	ValidationThresholdScore *big.Int
	Status                   uint8
}, error) {
	return _Scatterprotocol.Contract.AddressToFederatedJob(&_Scatterprotocol.CallOpts, arg0, arg1)
}

// AddressToFederatedJob is a free data retrieval call binding the contract method 0x240ae095.
//
// Solidity: function addressToFederatedJob(address , string ) view returns(string trainingJobCid, uint256 publishedTrainerCount, uint256 pooledReward, string evaluationJobCid, string evaluationJobDataCid, uint256 jobTerminationDate, uint256 validatorValidationCount, uint256 jobStartDate, uint256 validationThresholdScore, uint8 status)
func (_Scatterprotocol *ScatterprotocolCallerSession) AddressToFederatedJob(arg0 common.Address, arg1 string) (struct {
	TrainingJobCid           string
	PublishedTrainerCount    *big.Int
	PooledReward             *big.Int
	EvaluationJobCid         string
	EvaluationJobDataCid     string
	JobTerminationDate       *big.Int
	ValidatorValidationCount *big.Int
	JobStartDate             *big.Int
	ValidationThresholdScore *big.Int
	Status                   uint8
}, error) {
	return _Scatterprotocol.Contract.AddressToFederatedJob(&_Scatterprotocol.CallOpts, arg0, arg1)
}

// AddressToNodeId is a free data retrieval call binding the contract method 0xef36d16a.
//
// Solidity: function addressToNodeId(address ) view returns(string)
func (_Scatterprotocol *ScatterprotocolCaller) AddressToNodeId(opts *bind.CallOpts, arg0 common.Address) (string, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "addressToNodeId", arg0)

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// AddressToNodeId is a free data retrieval call binding the contract method 0xef36d16a.
//
// Solidity: function addressToNodeId(address ) view returns(string)
func (_Scatterprotocol *ScatterprotocolSession) AddressToNodeId(arg0 common.Address) (string, error) {
	return _Scatterprotocol.Contract.AddressToNodeId(&_Scatterprotocol.CallOpts, arg0)
}

// AddressToNodeId is a free data retrieval call binding the contract method 0xef36d16a.
//
// Solidity: function addressToNodeId(address ) view returns(string)
func (_Scatterprotocol *ScatterprotocolCallerSession) AddressToNodeId(arg0 common.Address) (string, error) {
	return _Scatterprotocol.Contract.AddressToNodeId(&_Scatterprotocol.CallOpts, arg0)
}

// AddressToRoles is a free data retrieval call binding the contract method 0xf629ad71.
//
// Solidity: function addressToRoles(address ) view returns(uint8)
func (_Scatterprotocol *ScatterprotocolCaller) AddressToRoles(opts *bind.CallOpts, arg0 common.Address) (uint8, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "addressToRoles", arg0)

	if err != nil {
		return *new(uint8), err
	}

	out0 := *abi.ConvertType(out[0], new(uint8)).(*uint8)

	return out0, err

}

// AddressToRoles is a free data retrieval call binding the contract method 0xf629ad71.
//
// Solidity: function addressToRoles(address ) view returns(uint8)
func (_Scatterprotocol *ScatterprotocolSession) AddressToRoles(arg0 common.Address) (uint8, error) {
	return _Scatterprotocol.Contract.AddressToRoles(&_Scatterprotocol.CallOpts, arg0)
}

// AddressToRoles is a free data retrieval call binding the contract method 0xf629ad71.
//
// Solidity: function addressToRoles(address ) view returns(uint8)
func (_Scatterprotocol *ScatterprotocolCallerSession) AddressToRoles(arg0 common.Address) (uint8, error) {
	return _Scatterprotocol.Contract.AddressToRoles(&_Scatterprotocol.CallOpts, arg0)
}

// AddressToTopics is a free data retrieval call binding the contract method 0x624c45ea.
//
// Solidity: function addressToTopics(address , uint256 ) view returns(string)
func (_Scatterprotocol *ScatterprotocolCaller) AddressToTopics(opts *bind.CallOpts, arg0 common.Address, arg1 *big.Int) (string, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "addressToTopics", arg0, arg1)

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// AddressToTopics is a free data retrieval call binding the contract method 0x624c45ea.
//
// Solidity: function addressToTopics(address , uint256 ) view returns(string)
func (_Scatterprotocol *ScatterprotocolSession) AddressToTopics(arg0 common.Address, arg1 *big.Int) (string, error) {
	return _Scatterprotocol.Contract.AddressToTopics(&_Scatterprotocol.CallOpts, arg0, arg1)
}

// AddressToTopics is a free data retrieval call binding the contract method 0x624c45ea.
//
// Solidity: function addressToTopics(address , uint256 ) view returns(string)
func (_Scatterprotocol *ScatterprotocolCallerSession) AddressToTopics(arg0 common.Address, arg1 *big.Int) (string, error) {
	return _Scatterprotocol.Contract.AddressToTopics(&_Scatterprotocol.CallOpts, arg0, arg1)
}

// CheckIfTopicExistsForRequestor is a free data retrieval call binding the contract method 0x35b40e60.
//
// Solidity: function checkIfTopicExistsForRequestor(address nodeAddress, string topicName) view returns(bool)
func (_Scatterprotocol *ScatterprotocolCaller) CheckIfTopicExistsForRequestor(opts *bind.CallOpts, nodeAddress common.Address, topicName string) (bool, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "checkIfTopicExistsForRequestor", nodeAddress, topicName)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// CheckIfTopicExistsForRequestor is a free data retrieval call binding the contract method 0x35b40e60.
//
// Solidity: function checkIfTopicExistsForRequestor(address nodeAddress, string topicName) view returns(bool)
func (_Scatterprotocol *ScatterprotocolSession) CheckIfTopicExistsForRequestor(nodeAddress common.Address, topicName string) (bool, error) {
	return _Scatterprotocol.Contract.CheckIfTopicExistsForRequestor(&_Scatterprotocol.CallOpts, nodeAddress, topicName)
}

// CheckIfTopicExistsForRequestor is a free data retrieval call binding the contract method 0x35b40e60.
//
// Solidity: function checkIfTopicExistsForRequestor(address nodeAddress, string topicName) view returns(bool)
func (_Scatterprotocol *ScatterprotocolCallerSession) CheckIfTopicExistsForRequestor(nodeAddress common.Address, topicName string) (bool, error) {
	return _Scatterprotocol.Contract.CheckIfTopicExistsForRequestor(&_Scatterprotocol.CallOpts, nodeAddress, topicName)
}

// EvaluationJobContract is a free data retrieval call binding the contract method 0xcff06d39.
//
// Solidity: function evaluationJobContract() view returns(address)
func (_Scatterprotocol *ScatterprotocolCaller) EvaluationJobContract(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "evaluationJobContract")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// EvaluationJobContract is a free data retrieval call binding the contract method 0xcff06d39.
//
// Solidity: function evaluationJobContract() view returns(address)
func (_Scatterprotocol *ScatterprotocolSession) EvaluationJobContract() (common.Address, error) {
	return _Scatterprotocol.Contract.EvaluationJobContract(&_Scatterprotocol.CallOpts)
}

// EvaluationJobContract is a free data retrieval call binding the contract method 0xcff06d39.
//
// Solidity: function evaluationJobContract() view returns(address)
func (_Scatterprotocol *ScatterprotocolCallerSession) EvaluationJobContract() (common.Address, error) {
	return _Scatterprotocol.Contract.EvaluationJobContract(&_Scatterprotocol.CallOpts)
}

// GetEnumRoleByAddress is a free data retrieval call binding the contract method 0x153a7b36.
//
// Solidity: function getEnumRoleByAddress(address addressToView) view returns(uint8)
func (_Scatterprotocol *ScatterprotocolCaller) GetEnumRoleByAddress(opts *bind.CallOpts, addressToView common.Address) (uint8, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "getEnumRoleByAddress", addressToView)

	if err != nil {
		return *new(uint8), err
	}

	out0 := *abi.ConvertType(out[0], new(uint8)).(*uint8)

	return out0, err

}

// GetEnumRoleByAddress is a free data retrieval call binding the contract method 0x153a7b36.
//
// Solidity: function getEnumRoleByAddress(address addressToView) view returns(uint8)
func (_Scatterprotocol *ScatterprotocolSession) GetEnumRoleByAddress(addressToView common.Address) (uint8, error) {
	return _Scatterprotocol.Contract.GetEnumRoleByAddress(&_Scatterprotocol.CallOpts, addressToView)
}

// GetEnumRoleByAddress is a free data retrieval call binding the contract method 0x153a7b36.
//
// Solidity: function getEnumRoleByAddress(address addressToView) view returns(uint8)
func (_Scatterprotocol *ScatterprotocolCallerSession) GetEnumRoleByAddress(addressToView common.Address) (uint8, error) {
	return _Scatterprotocol.Contract.GetEnumRoleByAddress(&_Scatterprotocol.CallOpts, addressToView)
}

// GetRequestorAddresses is a free data retrieval call binding the contract method 0xb4efe15f.
//
// Solidity: function getRequestorAddresses(int256 skip) view returns(string)
func (_Scatterprotocol *ScatterprotocolCaller) GetRequestorAddresses(opts *bind.CallOpts, skip *big.Int) (string, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "getRequestorAddresses", skip)

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// GetRequestorAddresses is a free data retrieval call binding the contract method 0xb4efe15f.
//
// Solidity: function getRequestorAddresses(int256 skip) view returns(string)
func (_Scatterprotocol *ScatterprotocolSession) GetRequestorAddresses(skip *big.Int) (string, error) {
	return _Scatterprotocol.Contract.GetRequestorAddresses(&_Scatterprotocol.CallOpts, skip)
}

// GetRequestorAddresses is a free data retrieval call binding the contract method 0xb4efe15f.
//
// Solidity: function getRequestorAddresses(int256 skip) view returns(string)
func (_Scatterprotocol *ScatterprotocolCallerSession) GetRequestorAddresses(skip *big.Int) (string, error) {
	return _Scatterprotocol.Contract.GetRequestorAddresses(&_Scatterprotocol.CallOpts, skip)
}

// GetRoleByAddress is a free data retrieval call binding the contract method 0x7bff77d4.
//
// Solidity: function getRoleByAddress(address addressToFind) view returns(string)
func (_Scatterprotocol *ScatterprotocolCaller) GetRoleByAddress(opts *bind.CallOpts, addressToFind common.Address) (string, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "getRoleByAddress", addressToFind)

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// GetRoleByAddress is a free data retrieval call binding the contract method 0x7bff77d4.
//
// Solidity: function getRoleByAddress(address addressToFind) view returns(string)
func (_Scatterprotocol *ScatterprotocolSession) GetRoleByAddress(addressToFind common.Address) (string, error) {
	return _Scatterprotocol.Contract.GetRoleByAddress(&_Scatterprotocol.CallOpts, addressToFind)
}

// GetRoleByAddress is a free data retrieval call binding the contract method 0x7bff77d4.
//
// Solidity: function getRoleByAddress(address addressToFind) view returns(string)
func (_Scatterprotocol *ScatterprotocolCallerSession) GetRoleByAddress(addressToFind common.Address) (string, error) {
	return _Scatterprotocol.Contract.GetRoleByAddress(&_Scatterprotocol.CallOpts, addressToFind)
}

// GetTopicsByRequestorAddress is a free data retrieval call binding the contract method 0xd8ecebed.
//
// Solidity: function getTopicsByRequestorAddress(address requestorAddress, int256 skip) view returns(string)
func (_Scatterprotocol *ScatterprotocolCaller) GetTopicsByRequestorAddress(opts *bind.CallOpts, requestorAddress common.Address, skip *big.Int) (string, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "getTopicsByRequestorAddress", requestorAddress, skip)

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// GetTopicsByRequestorAddress is a free data retrieval call binding the contract method 0xd8ecebed.
//
// Solidity: function getTopicsByRequestorAddress(address requestorAddress, int256 skip) view returns(string)
func (_Scatterprotocol *ScatterprotocolSession) GetTopicsByRequestorAddress(requestorAddress common.Address, skip *big.Int) (string, error) {
	return _Scatterprotocol.Contract.GetTopicsByRequestorAddress(&_Scatterprotocol.CallOpts, requestorAddress, skip)
}

// GetTopicsByRequestorAddress is a free data retrieval call binding the contract method 0xd8ecebed.
//
// Solidity: function getTopicsByRequestorAddress(address requestorAddress, int256 skip) view returns(string)
func (_Scatterprotocol *ScatterprotocolCallerSession) GetTopicsByRequestorAddress(requestorAddress common.Address, skip *big.Int) (string, error) {
	return _Scatterprotocol.Contract.GetTopicsByRequestorAddress(&_Scatterprotocol.CallOpts, requestorAddress, skip)
}

// GetTrainersByAddressAndTopic is a free data retrieval call binding the contract method 0x04aa1397.
//
// Solidity: function getTrainersByAddressAndTopic(address requestorAddress, string topicName, int256 skip) view returns(string)
func (_Scatterprotocol *ScatterprotocolCaller) GetTrainersByAddressAndTopic(opts *bind.CallOpts, requestorAddress common.Address, topicName string, skip *big.Int) (string, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "getTrainersByAddressAndTopic", requestorAddress, topicName, skip)

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// GetTrainersByAddressAndTopic is a free data retrieval call binding the contract method 0x04aa1397.
//
// Solidity: function getTrainersByAddressAndTopic(address requestorAddress, string topicName, int256 skip) view returns(string)
func (_Scatterprotocol *ScatterprotocolSession) GetTrainersByAddressAndTopic(requestorAddress common.Address, topicName string, skip *big.Int) (string, error) {
	return _Scatterprotocol.Contract.GetTrainersByAddressAndTopic(&_Scatterprotocol.CallOpts, requestorAddress, topicName, skip)
}

// GetTrainersByAddressAndTopic is a free data retrieval call binding the contract method 0x04aa1397.
//
// Solidity: function getTrainersByAddressAndTopic(address requestorAddress, string topicName, int256 skip) view returns(string)
func (_Scatterprotocol *ScatterprotocolCallerSession) GetTrainersByAddressAndTopic(requestorAddress common.Address, topicName string, skip *big.Int) (string, error) {
	return _Scatterprotocol.Contract.GetTrainersByAddressAndTopic(&_Scatterprotocol.CallOpts, requestorAddress, topicName, skip)
}

// GetTrainersForFederatedJob is a free data retrieval call binding the contract method 0x289a278f.
//
// Solidity: function getTrainersForFederatedJob(address requestorAddress, string topicName) view returns(address[])
func (_Scatterprotocol *ScatterprotocolCaller) GetTrainersForFederatedJob(opts *bind.CallOpts, requestorAddress common.Address, topicName string) ([]common.Address, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "getTrainersForFederatedJob", requestorAddress, topicName)

	if err != nil {
		return *new([]common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new([]common.Address)).(*[]common.Address)

	return out0, err

}

// GetTrainersForFederatedJob is a free data retrieval call binding the contract method 0x289a278f.
//
// Solidity: function getTrainersForFederatedJob(address requestorAddress, string topicName) view returns(address[])
func (_Scatterprotocol *ScatterprotocolSession) GetTrainersForFederatedJob(requestorAddress common.Address, topicName string) ([]common.Address, error) {
	return _Scatterprotocol.Contract.GetTrainersForFederatedJob(&_Scatterprotocol.CallOpts, requestorAddress, topicName)
}

// GetTrainersForFederatedJob is a free data retrieval call binding the contract method 0x289a278f.
//
// Solidity: function getTrainersForFederatedJob(address requestorAddress, string topicName) view returns(address[])
func (_Scatterprotocol *ScatterprotocolCallerSession) GetTrainersForFederatedJob(requestorAddress common.Address, topicName string) ([]common.Address, error) {
	return _Scatterprotocol.Contract.GetTrainersForFederatedJob(&_Scatterprotocol.CallOpts, requestorAddress, topicName)
}

// GetValidatorsForFederatedJob is a free data retrieval call binding the contract method 0x7e720f6d.
//
// Solidity: function getValidatorsForFederatedJob(address requestorAddress, string topicName) view returns(address[])
func (_Scatterprotocol *ScatterprotocolCaller) GetValidatorsForFederatedJob(opts *bind.CallOpts, requestorAddress common.Address, topicName string) ([]common.Address, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "getValidatorsForFederatedJob", requestorAddress, topicName)

	if err != nil {
		return *new([]common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new([]common.Address)).(*[]common.Address)

	return out0, err

}

// GetValidatorsForFederatedJob is a free data retrieval call binding the contract method 0x7e720f6d.
//
// Solidity: function getValidatorsForFederatedJob(address requestorAddress, string topicName) view returns(address[])
func (_Scatterprotocol *ScatterprotocolSession) GetValidatorsForFederatedJob(requestorAddress common.Address, topicName string) ([]common.Address, error) {
	return _Scatterprotocol.Contract.GetValidatorsForFederatedJob(&_Scatterprotocol.CallOpts, requestorAddress, topicName)
}

// GetValidatorsForFederatedJob is a free data retrieval call binding the contract method 0x7e720f6d.
//
// Solidity: function getValidatorsForFederatedJob(address requestorAddress, string topicName) view returns(address[])
func (_Scatterprotocol *ScatterprotocolCallerSession) GetValidatorsForFederatedJob(requestorAddress common.Address, topicName string) ([]common.Address, error) {
	return _Scatterprotocol.Contract.GetValidatorsForFederatedJob(&_Scatterprotocol.CallOpts, requestorAddress, topicName)
}

// IsJobInProgress is a free data retrieval call binding the contract method 0xc47557c3.
//
// Solidity: function isJobInProgress(address requestorAddress, string topicName) view returns(bool)
func (_Scatterprotocol *ScatterprotocolCaller) IsJobInProgress(opts *bind.CallOpts, requestorAddress common.Address, topicName string) (bool, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "isJobInProgress", requestorAddress, topicName)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// IsJobInProgress is a free data retrieval call binding the contract method 0xc47557c3.
//
// Solidity: function isJobInProgress(address requestorAddress, string topicName) view returns(bool)
func (_Scatterprotocol *ScatterprotocolSession) IsJobInProgress(requestorAddress common.Address, topicName string) (bool, error) {
	return _Scatterprotocol.Contract.IsJobInProgress(&_Scatterprotocol.CallOpts, requestorAddress, topicName)
}

// IsJobInProgress is a free data retrieval call binding the contract method 0xc47557c3.
//
// Solidity: function isJobInProgress(address requestorAddress, string topicName) view returns(bool)
func (_Scatterprotocol *ScatterprotocolCallerSession) IsJobInProgress(requestorAddress common.Address, topicName string) (bool, error) {
	return _Scatterprotocol.Contract.IsJobInProgress(&_Scatterprotocol.CallOpts, requestorAddress, topicName)
}

// IsValidatorForTrainingJob is a free data retrieval call binding the contract method 0x74241d60.
//
// Solidity: function isValidatorForTrainingJob(address requestorAddress, string topicName, address validatorAddress) view returns(bool)
func (_Scatterprotocol *ScatterprotocolCaller) IsValidatorForTrainingJob(opts *bind.CallOpts, requestorAddress common.Address, topicName string, validatorAddress common.Address) (bool, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "isValidatorForTrainingJob", requestorAddress, topicName, validatorAddress)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// IsValidatorForTrainingJob is a free data retrieval call binding the contract method 0x74241d60.
//
// Solidity: function isValidatorForTrainingJob(address requestorAddress, string topicName, address validatorAddress) view returns(bool)
func (_Scatterprotocol *ScatterprotocolSession) IsValidatorForTrainingJob(requestorAddress common.Address, topicName string, validatorAddress common.Address) (bool, error) {
	return _Scatterprotocol.Contract.IsValidatorForTrainingJob(&_Scatterprotocol.CallOpts, requestorAddress, topicName, validatorAddress)
}

// IsValidatorForTrainingJob is a free data retrieval call binding the contract method 0x74241d60.
//
// Solidity: function isValidatorForTrainingJob(address requestorAddress, string topicName, address validatorAddress) view returns(bool)
func (_Scatterprotocol *ScatterprotocolCallerSession) IsValidatorForTrainingJob(requestorAddress common.Address, topicName string, validatorAddress common.Address) (bool, error) {
	return _Scatterprotocol.Contract.IsValidatorForTrainingJob(&_Scatterprotocol.CallOpts, requestorAddress, topicName, validatorAddress)
}

// ModelTokenContract is a free data retrieval call binding the contract method 0x46747741.
//
// Solidity: function modelTokenContract() view returns(address)
func (_Scatterprotocol *ScatterprotocolCaller) ModelTokenContract(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "modelTokenContract")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// ModelTokenContract is a free data retrieval call binding the contract method 0x46747741.
//
// Solidity: function modelTokenContract() view returns(address)
func (_Scatterprotocol *ScatterprotocolSession) ModelTokenContract() (common.Address, error) {
	return _Scatterprotocol.Contract.ModelTokenContract(&_Scatterprotocol.CallOpts)
}

// ModelTokenContract is a free data retrieval call binding the contract method 0x46747741.
//
// Solidity: function modelTokenContract() view returns(address)
func (_Scatterprotocol *ScatterprotocolCallerSession) ModelTokenContract() (common.Address, error) {
	return _Scatterprotocol.Contract.ModelTokenContract(&_Scatterprotocol.CallOpts)
}

// NetworkRequestors is a free data retrieval call binding the contract method 0xa765d052.
//
// Solidity: function networkRequestors(uint256 ) view returns(address)
func (_Scatterprotocol *ScatterprotocolCaller) NetworkRequestors(opts *bind.CallOpts, arg0 *big.Int) (common.Address, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "networkRequestors", arg0)

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// NetworkRequestors is a free data retrieval call binding the contract method 0xa765d052.
//
// Solidity: function networkRequestors(uint256 ) view returns(address)
func (_Scatterprotocol *ScatterprotocolSession) NetworkRequestors(arg0 *big.Int) (common.Address, error) {
	return _Scatterprotocol.Contract.NetworkRequestors(&_Scatterprotocol.CallOpts, arg0)
}

// NetworkRequestors is a free data retrieval call binding the contract method 0xa765d052.
//
// Solidity: function networkRequestors(uint256 ) view returns(address)
func (_Scatterprotocol *ScatterprotocolCallerSession) NetworkRequestors(arg0 *big.Int) (common.Address, error) {
	return _Scatterprotocol.Contract.NetworkRequestors(&_Scatterprotocol.CallOpts, arg0)
}

// NetworkTrainers is a free data retrieval call binding the contract method 0xaa711be6.
//
// Solidity: function networkTrainers(uint256 ) view returns(address)
func (_Scatterprotocol *ScatterprotocolCaller) NetworkTrainers(opts *bind.CallOpts, arg0 *big.Int) (common.Address, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "networkTrainers", arg0)

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// NetworkTrainers is a free data retrieval call binding the contract method 0xaa711be6.
//
// Solidity: function networkTrainers(uint256 ) view returns(address)
func (_Scatterprotocol *ScatterprotocolSession) NetworkTrainers(arg0 *big.Int) (common.Address, error) {
	return _Scatterprotocol.Contract.NetworkTrainers(&_Scatterprotocol.CallOpts, arg0)
}

// NetworkTrainers is a free data retrieval call binding the contract method 0xaa711be6.
//
// Solidity: function networkTrainers(uint256 ) view returns(address)
func (_Scatterprotocol *ScatterprotocolCallerSession) NetworkTrainers(arg0 *big.Int) (common.Address, error) {
	return _Scatterprotocol.Contract.NetworkTrainers(&_Scatterprotocol.CallOpts, arg0)
}

// NetworkValidators is a free data retrieval call binding the contract method 0x4be0be0d.
//
// Solidity: function networkValidators(uint256 ) view returns(address)
func (_Scatterprotocol *ScatterprotocolCaller) NetworkValidators(opts *bind.CallOpts, arg0 *big.Int) (common.Address, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "networkValidators", arg0)

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// NetworkValidators is a free data retrieval call binding the contract method 0x4be0be0d.
//
// Solidity: function networkValidators(uint256 ) view returns(address)
func (_Scatterprotocol *ScatterprotocolSession) NetworkValidators(arg0 *big.Int) (common.Address, error) {
	return _Scatterprotocol.Contract.NetworkValidators(&_Scatterprotocol.CallOpts, arg0)
}

// NetworkValidators is a free data retrieval call binding the contract method 0x4be0be0d.
//
// Solidity: function networkValidators(uint256 ) view returns(address)
func (_Scatterprotocol *ScatterprotocolCallerSession) NetworkValidators(arg0 *big.Int) (common.Address, error) {
	return _Scatterprotocol.Contract.NetworkValidators(&_Scatterprotocol.CallOpts, arg0)
}

// NodeIdToAddress is a free data retrieval call binding the contract method 0xc27f66a6.
//
// Solidity: function nodeIdToAddress(string ) view returns(address)
func (_Scatterprotocol *ScatterprotocolCaller) NodeIdToAddress(opts *bind.CallOpts, arg0 string) (common.Address, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "nodeIdToAddress", arg0)

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// NodeIdToAddress is a free data retrieval call binding the contract method 0xc27f66a6.
//
// Solidity: function nodeIdToAddress(string ) view returns(address)
func (_Scatterprotocol *ScatterprotocolSession) NodeIdToAddress(arg0 string) (common.Address, error) {
	return _Scatterprotocol.Contract.NodeIdToAddress(&_Scatterprotocol.CallOpts, arg0)
}

// NodeIdToAddress is a free data retrieval call binding the contract method 0xc27f66a6.
//
// Solidity: function nodeIdToAddress(string ) view returns(address)
func (_Scatterprotocol *ScatterprotocolCallerSession) NodeIdToAddress(arg0 string) (common.Address, error) {
	return _Scatterprotocol.Contract.NodeIdToAddress(&_Scatterprotocol.CallOpts, arg0)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_Scatterprotocol *ScatterprotocolCaller) Owner(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "owner")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_Scatterprotocol *ScatterprotocolSession) Owner() (common.Address, error) {
	return _Scatterprotocol.Contract.Owner(&_Scatterprotocol.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_Scatterprotocol *ScatterprotocolCallerSession) Owner() (common.Address, error) {
	return _Scatterprotocol.Contract.Owner(&_Scatterprotocol.CallOpts)
}

// ReputationManagerContract is a free data retrieval call binding the contract method 0x67e98e1c.
//
// Solidity: function reputationManagerContract() view returns(address)
func (_Scatterprotocol *ScatterprotocolCaller) ReputationManagerContract(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "reputationManagerContract")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// ReputationManagerContract is a free data retrieval call binding the contract method 0x67e98e1c.
//
// Solidity: function reputationManagerContract() view returns(address)
func (_Scatterprotocol *ScatterprotocolSession) ReputationManagerContract() (common.Address, error) {
	return _Scatterprotocol.Contract.ReputationManagerContract(&_Scatterprotocol.CallOpts)
}

// ReputationManagerContract is a free data retrieval call binding the contract method 0x67e98e1c.
//
// Solidity: function reputationManagerContract() view returns(address)
func (_Scatterprotocol *ScatterprotocolCallerSession) ReputationManagerContract() (common.Address, error) {
	return _Scatterprotocol.Contract.ReputationManagerContract(&_Scatterprotocol.CallOpts)
}

// ScatterTokenContract is a free data retrieval call binding the contract method 0x594de850.
//
// Solidity: function scatterTokenContract() view returns(address)
func (_Scatterprotocol *ScatterprotocolCaller) ScatterTokenContract(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "scatterTokenContract")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// ScatterTokenContract is a free data retrieval call binding the contract method 0x594de850.
//
// Solidity: function scatterTokenContract() view returns(address)
func (_Scatterprotocol *ScatterprotocolSession) ScatterTokenContract() (common.Address, error) {
	return _Scatterprotocol.Contract.ScatterTokenContract(&_Scatterprotocol.CallOpts)
}

// ScatterTokenContract is a free data retrieval call binding the contract method 0x594de850.
//
// Solidity: function scatterTokenContract() view returns(address)
func (_Scatterprotocol *ScatterprotocolCallerSession) ScatterTokenContract() (common.Address, error) {
	return _Scatterprotocol.Contract.ScatterTokenContract(&_Scatterprotocol.CallOpts)
}

// TrainerTrainingMap is a free data retrieval call binding the contract method 0x67fa5840.
//
// Solidity: function trainerTrainingMap(address , string , address ) view returns(bool)
func (_Scatterprotocol *ScatterprotocolCaller) TrainerTrainingMap(opts *bind.CallOpts, arg0 common.Address, arg1 string, arg2 common.Address) (bool, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "trainerTrainingMap", arg0, arg1, arg2)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// TrainerTrainingMap is a free data retrieval call binding the contract method 0x67fa5840.
//
// Solidity: function trainerTrainingMap(address , string , address ) view returns(bool)
func (_Scatterprotocol *ScatterprotocolSession) TrainerTrainingMap(arg0 common.Address, arg1 string, arg2 common.Address) (bool, error) {
	return _Scatterprotocol.Contract.TrainerTrainingMap(&_Scatterprotocol.CallOpts, arg0, arg1, arg2)
}

// TrainerTrainingMap is a free data retrieval call binding the contract method 0x67fa5840.
//
// Solidity: function trainerTrainingMap(address , string , address ) view returns(bool)
func (_Scatterprotocol *ScatterprotocolCallerSession) TrainerTrainingMap(arg0 common.Address, arg1 string, arg2 common.Address) (bool, error) {
	return _Scatterprotocol.Contract.TrainerTrainingMap(&_Scatterprotocol.CallOpts, arg0, arg1, arg2)
}

// TrainingJobContract is a free data retrieval call binding the contract method 0xb3f5b280.
//
// Solidity: function trainingJobContract() view returns(address)
func (_Scatterprotocol *ScatterprotocolCaller) TrainingJobContract(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "trainingJobContract")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// TrainingJobContract is a free data retrieval call binding the contract method 0xb3f5b280.
//
// Solidity: function trainingJobContract() view returns(address)
func (_Scatterprotocol *ScatterprotocolSession) TrainingJobContract() (common.Address, error) {
	return _Scatterprotocol.Contract.TrainingJobContract(&_Scatterprotocol.CallOpts)
}

// TrainingJobContract is a free data retrieval call binding the contract method 0xb3f5b280.
//
// Solidity: function trainingJobContract() view returns(address)
func (_Scatterprotocol *ScatterprotocolCallerSession) TrainingJobContract() (common.Address, error) {
	return _Scatterprotocol.Contract.TrainingJobContract(&_Scatterprotocol.CallOpts)
}

// ValidatorTrainingMap is a free data retrieval call binding the contract method 0x0b680f76.
//
// Solidity: function validatorTrainingMap(address , string , address ) view returns(bool)
func (_Scatterprotocol *ScatterprotocolCaller) ValidatorTrainingMap(opts *bind.CallOpts, arg0 common.Address, arg1 string, arg2 common.Address) (bool, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "validatorTrainingMap", arg0, arg1, arg2)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// ValidatorTrainingMap is a free data retrieval call binding the contract method 0x0b680f76.
//
// Solidity: function validatorTrainingMap(address , string , address ) view returns(bool)
func (_Scatterprotocol *ScatterprotocolSession) ValidatorTrainingMap(arg0 common.Address, arg1 string, arg2 common.Address) (bool, error) {
	return _Scatterprotocol.Contract.ValidatorTrainingMap(&_Scatterprotocol.CallOpts, arg0, arg1, arg2)
}

// ValidatorTrainingMap is a free data retrieval call binding the contract method 0x0b680f76.
//
// Solidity: function validatorTrainingMap(address , string , address ) view returns(bool)
func (_Scatterprotocol *ScatterprotocolCallerSession) ValidatorTrainingMap(arg0 common.Address, arg1 string, arg2 common.Address) (bool, error) {
	return _Scatterprotocol.Contract.ValidatorTrainingMap(&_Scatterprotocol.CallOpts, arg0, arg1, arg2)
}

// VoteManagerContract is a free data retrieval call binding the contract method 0x38fcb3b2.
//
// Solidity: function voteManagerContract() view returns(address)
func (_Scatterprotocol *ScatterprotocolCaller) VoteManagerContract(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "voteManagerContract")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// VoteManagerContract is a free data retrieval call binding the contract method 0x38fcb3b2.
//
// Solidity: function voteManagerContract() view returns(address)
func (_Scatterprotocol *ScatterprotocolSession) VoteManagerContract() (common.Address, error) {
	return _Scatterprotocol.Contract.VoteManagerContract(&_Scatterprotocol.CallOpts)
}

// VoteManagerContract is a free data retrieval call binding the contract method 0x38fcb3b2.
//
// Solidity: function voteManagerContract() view returns(address)
func (_Scatterprotocol *ScatterprotocolCallerSession) VoteManagerContract() (common.Address, error) {
	return _Scatterprotocol.Contract.VoteManagerContract(&_Scatterprotocol.CallOpts)
}

// FederatedJobCleanUp is a paid mutator transaction binding the contract method 0x973e5814.
//
// Solidity: function federatedJobCleanUp(address requestorAddress, string topicName) returns()
func (_Scatterprotocol *ScatterprotocolTransactor) FederatedJobCleanUp(opts *bind.TransactOpts, requestorAddress common.Address, topicName string) (*types.Transaction, error) {
	return _Scatterprotocol.contract.Transact(opts, "federatedJobCleanUp", requestorAddress, topicName)
}

// FederatedJobCleanUp is a paid mutator transaction binding the contract method 0x973e5814.
//
// Solidity: function federatedJobCleanUp(address requestorAddress, string topicName) returns()
func (_Scatterprotocol *ScatterprotocolSession) FederatedJobCleanUp(requestorAddress common.Address, topicName string) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.FederatedJobCleanUp(&_Scatterprotocol.TransactOpts, requestorAddress, topicName)
}

// FederatedJobCleanUp is a paid mutator transaction binding the contract method 0x973e5814.
//
// Solidity: function federatedJobCleanUp(address requestorAddress, string topicName) returns()
func (_Scatterprotocol *ScatterprotocolTransactorSession) FederatedJobCleanUp(requestorAddress common.Address, topicName string) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.FederatedJobCleanUp(&_Scatterprotocol.TransactOpts, requestorAddress, topicName)
}

// InitRequestorNode is a paid mutator transaction binding the contract method 0xcb30bfc3.
//
// Solidity: function initRequestorNode() returns()
func (_Scatterprotocol *ScatterprotocolTransactor) InitRequestorNode(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Scatterprotocol.contract.Transact(opts, "initRequestorNode")
}

// InitRequestorNode is a paid mutator transaction binding the contract method 0xcb30bfc3.
//
// Solidity: function initRequestorNode() returns()
func (_Scatterprotocol *ScatterprotocolSession) InitRequestorNode() (*types.Transaction, error) {
	return _Scatterprotocol.Contract.InitRequestorNode(&_Scatterprotocol.TransactOpts)
}

// InitRequestorNode is a paid mutator transaction binding the contract method 0xcb30bfc3.
//
// Solidity: function initRequestorNode() returns()
func (_Scatterprotocol *ScatterprotocolTransactorSession) InitRequestorNode() (*types.Transaction, error) {
	return _Scatterprotocol.Contract.InitRequestorNode(&_Scatterprotocol.TransactOpts)
}

// InitTrainerNode is a paid mutator transaction binding the contract method 0x6949f907.
//
// Solidity: function initTrainerNode() returns()
func (_Scatterprotocol *ScatterprotocolTransactor) InitTrainerNode(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Scatterprotocol.contract.Transact(opts, "initTrainerNode")
}

// InitTrainerNode is a paid mutator transaction binding the contract method 0x6949f907.
//
// Solidity: function initTrainerNode() returns()
func (_Scatterprotocol *ScatterprotocolSession) InitTrainerNode() (*types.Transaction, error) {
	return _Scatterprotocol.Contract.InitTrainerNode(&_Scatterprotocol.TransactOpts)
}

// InitTrainerNode is a paid mutator transaction binding the contract method 0x6949f907.
//
// Solidity: function initTrainerNode() returns()
func (_Scatterprotocol *ScatterprotocolTransactorSession) InitTrainerNode() (*types.Transaction, error) {
	return _Scatterprotocol.Contract.InitTrainerNode(&_Scatterprotocol.TransactOpts)
}

// InitValidatorNode is a paid mutator transaction binding the contract method 0x45e2e030.
//
// Solidity: function initValidatorNode() returns()
func (_Scatterprotocol *ScatterprotocolTransactor) InitValidatorNode(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Scatterprotocol.contract.Transact(opts, "initValidatorNode")
}

// InitValidatorNode is a paid mutator transaction binding the contract method 0x45e2e030.
//
// Solidity: function initValidatorNode() returns()
func (_Scatterprotocol *ScatterprotocolSession) InitValidatorNode() (*types.Transaction, error) {
	return _Scatterprotocol.Contract.InitValidatorNode(&_Scatterprotocol.TransactOpts)
}

// InitValidatorNode is a paid mutator transaction binding the contract method 0x45e2e030.
//
// Solidity: function initValidatorNode() returns()
func (_Scatterprotocol *ScatterprotocolTransactorSession) InitValidatorNode() (*types.Transaction, error) {
	return _Scatterprotocol.Contract.InitValidatorNode(&_Scatterprotocol.TransactOpts)
}

// PublishModelToProtocol is a paid mutator transaction binding the contract method 0x9294be12.
//
// Solidity: function publishModelToProtocol(string modelURI, address requestorAddress, string topicName) returns()
func (_Scatterprotocol *ScatterprotocolTransactor) PublishModelToProtocol(opts *bind.TransactOpts, modelURI string, requestorAddress common.Address, topicName string) (*types.Transaction, error) {
	return _Scatterprotocol.contract.Transact(opts, "publishModelToProtocol", modelURI, requestorAddress, topicName)
}

// PublishModelToProtocol is a paid mutator transaction binding the contract method 0x9294be12.
//
// Solidity: function publishModelToProtocol(string modelURI, address requestorAddress, string topicName) returns()
func (_Scatterprotocol *ScatterprotocolSession) PublishModelToProtocol(modelURI string, requestorAddress common.Address, topicName string) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.PublishModelToProtocol(&_Scatterprotocol.TransactOpts, modelURI, requestorAddress, topicName)
}

// PublishModelToProtocol is a paid mutator transaction binding the contract method 0x9294be12.
//
// Solidity: function publishModelToProtocol(string modelURI, address requestorAddress, string topicName) returns()
func (_Scatterprotocol *ScatterprotocolTransactorSession) PublishModelToProtocol(modelURI string, requestorAddress common.Address, topicName string) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.PublishModelToProtocol(&_Scatterprotocol.TransactOpts, modelURI, requestorAddress, topicName)
}

// RequestorAddTopic is a paid mutator transaction binding the contract method 0x22e44f0c.
//
// Solidity: function requestorAddTopic(string trainingTokenURI, string evaluationTokenURI, string topicName, uint256 pooledReward, uint256 validationThresholdScore) returns()
func (_Scatterprotocol *ScatterprotocolTransactor) RequestorAddTopic(opts *bind.TransactOpts, trainingTokenURI string, evaluationTokenURI string, topicName string, pooledReward *big.Int, validationThresholdScore *big.Int) (*types.Transaction, error) {
	return _Scatterprotocol.contract.Transact(opts, "requestorAddTopic", trainingTokenURI, evaluationTokenURI, topicName, pooledReward, validationThresholdScore)
}

// RequestorAddTopic is a paid mutator transaction binding the contract method 0x22e44f0c.
//
// Solidity: function requestorAddTopic(string trainingTokenURI, string evaluationTokenURI, string topicName, uint256 pooledReward, uint256 validationThresholdScore) returns()
func (_Scatterprotocol *ScatterprotocolSession) RequestorAddTopic(trainingTokenURI string, evaluationTokenURI string, topicName string, pooledReward *big.Int, validationThresholdScore *big.Int) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.RequestorAddTopic(&_Scatterprotocol.TransactOpts, trainingTokenURI, evaluationTokenURI, topicName, pooledReward, validationThresholdScore)
}

// RequestorAddTopic is a paid mutator transaction binding the contract method 0x22e44f0c.
//
// Solidity: function requestorAddTopic(string trainingTokenURI, string evaluationTokenURI, string topicName, uint256 pooledReward, uint256 validationThresholdScore) returns()
func (_Scatterprotocol *ScatterprotocolTransactorSession) RequestorAddTopic(trainingTokenURI string, evaluationTokenURI string, topicName string, pooledReward *big.Int, validationThresholdScore *big.Int) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.RequestorAddTopic(&_Scatterprotocol.TransactOpts, trainingTokenURI, evaluationTokenURI, topicName, pooledReward, validationThresholdScore)
}

// RewardDistributor is a paid mutator transaction binding the contract method 0x0ef186a3.
//
// Solidity: function rewardDistributor(address requestorAddress, string topicName) returns()
func (_Scatterprotocol *ScatterprotocolTransactor) RewardDistributor(opts *bind.TransactOpts, requestorAddress common.Address, topicName string) (*types.Transaction, error) {
	return _Scatterprotocol.contract.Transact(opts, "rewardDistributor", requestorAddress, topicName)
}

// RewardDistributor is a paid mutator transaction binding the contract method 0x0ef186a3.
//
// Solidity: function rewardDistributor(address requestorAddress, string topicName) returns()
func (_Scatterprotocol *ScatterprotocolSession) RewardDistributor(requestorAddress common.Address, topicName string) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.RewardDistributor(&_Scatterprotocol.TransactOpts, requestorAddress, topicName)
}

// RewardDistributor is a paid mutator transaction binding the contract method 0x0ef186a3.
//
// Solidity: function rewardDistributor(address requestorAddress, string topicName) returns()
func (_Scatterprotocol *ScatterprotocolTransactorSession) RewardDistributor(requestorAddress common.Address, topicName string) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.RewardDistributor(&_Scatterprotocol.TransactOpts, requestorAddress, topicName)
}

// SetEvaluationJobContractAddress is a paid mutator transaction binding the contract method 0x039e09b1.
//
// Solidity: function setEvaluationJobContractAddress(address newAddress) returns()
func (_Scatterprotocol *ScatterprotocolTransactor) SetEvaluationJobContractAddress(opts *bind.TransactOpts, newAddress common.Address) (*types.Transaction, error) {
	return _Scatterprotocol.contract.Transact(opts, "setEvaluationJobContractAddress", newAddress)
}

// SetEvaluationJobContractAddress is a paid mutator transaction binding the contract method 0x039e09b1.
//
// Solidity: function setEvaluationJobContractAddress(address newAddress) returns()
func (_Scatterprotocol *ScatterprotocolSession) SetEvaluationJobContractAddress(newAddress common.Address) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.SetEvaluationJobContractAddress(&_Scatterprotocol.TransactOpts, newAddress)
}

// SetEvaluationJobContractAddress is a paid mutator transaction binding the contract method 0x039e09b1.
//
// Solidity: function setEvaluationJobContractAddress(address newAddress) returns()
func (_Scatterprotocol *ScatterprotocolTransactorSession) SetEvaluationJobContractAddress(newAddress common.Address) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.SetEvaluationJobContractAddress(&_Scatterprotocol.TransactOpts, newAddress)
}

// SetNodeId is a paid mutator transaction binding the contract method 0x7d9011ec.
//
// Solidity: function setNodeId(string nodeId) returns()
func (_Scatterprotocol *ScatterprotocolTransactor) SetNodeId(opts *bind.TransactOpts, nodeId string) (*types.Transaction, error) {
	return _Scatterprotocol.contract.Transact(opts, "setNodeId", nodeId)
}

// SetNodeId is a paid mutator transaction binding the contract method 0x7d9011ec.
//
// Solidity: function setNodeId(string nodeId) returns()
func (_Scatterprotocol *ScatterprotocolSession) SetNodeId(nodeId string) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.SetNodeId(&_Scatterprotocol.TransactOpts, nodeId)
}

// SetNodeId is a paid mutator transaction binding the contract method 0x7d9011ec.
//
// Solidity: function setNodeId(string nodeId) returns()
func (_Scatterprotocol *ScatterprotocolTransactorSession) SetNodeId(nodeId string) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.SetNodeId(&_Scatterprotocol.TransactOpts, nodeId)
}

// SetRole is a paid mutator transaction binding the contract method 0x571c3e60.
//
// Solidity: function setRole(address addressToUpdate, uint8 newRole) returns()
func (_Scatterprotocol *ScatterprotocolTransactor) SetRole(opts *bind.TransactOpts, addressToUpdate common.Address, newRole uint8) (*types.Transaction, error) {
	return _Scatterprotocol.contract.Transact(opts, "setRole", addressToUpdate, newRole)
}

// SetRole is a paid mutator transaction binding the contract method 0x571c3e60.
//
// Solidity: function setRole(address addressToUpdate, uint8 newRole) returns()
func (_Scatterprotocol *ScatterprotocolSession) SetRole(addressToUpdate common.Address, newRole uint8) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.SetRole(&_Scatterprotocol.TransactOpts, addressToUpdate, newRole)
}

// SetRole is a paid mutator transaction binding the contract method 0x571c3e60.
//
// Solidity: function setRole(address addressToUpdate, uint8 newRole) returns()
func (_Scatterprotocol *ScatterprotocolTransactorSession) SetRole(addressToUpdate common.Address, newRole uint8) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.SetRole(&_Scatterprotocol.TransactOpts, addressToUpdate, newRole)
}

// SetScatterTokenContractAddress is a paid mutator transaction binding the contract method 0xa9de0ae9.
//
// Solidity: function setScatterTokenContractAddress(address newAddress) returns()
func (_Scatterprotocol *ScatterprotocolTransactor) SetScatterTokenContractAddress(opts *bind.TransactOpts, newAddress common.Address) (*types.Transaction, error) {
	return _Scatterprotocol.contract.Transact(opts, "setScatterTokenContractAddress", newAddress)
}

// SetScatterTokenContractAddress is a paid mutator transaction binding the contract method 0xa9de0ae9.
//
// Solidity: function setScatterTokenContractAddress(address newAddress) returns()
func (_Scatterprotocol *ScatterprotocolSession) SetScatterTokenContractAddress(newAddress common.Address) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.SetScatterTokenContractAddress(&_Scatterprotocol.TransactOpts, newAddress)
}

// SetScatterTokenContractAddress is a paid mutator transaction binding the contract method 0xa9de0ae9.
//
// Solidity: function setScatterTokenContractAddress(address newAddress) returns()
func (_Scatterprotocol *ScatterprotocolTransactorSession) SetScatterTokenContractAddress(newAddress common.Address) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.SetScatterTokenContractAddress(&_Scatterprotocol.TransactOpts, newAddress)
}

// SetTrainingJobContractAddress is a paid mutator transaction binding the contract method 0x5aff6e77.
//
// Solidity: function setTrainingJobContractAddress(address newAddress) returns()
func (_Scatterprotocol *ScatterprotocolTransactor) SetTrainingJobContractAddress(opts *bind.TransactOpts, newAddress common.Address) (*types.Transaction, error) {
	return _Scatterprotocol.contract.Transact(opts, "setTrainingJobContractAddress", newAddress)
}

// SetTrainingJobContractAddress is a paid mutator transaction binding the contract method 0x5aff6e77.
//
// Solidity: function setTrainingJobContractAddress(address newAddress) returns()
func (_Scatterprotocol *ScatterprotocolSession) SetTrainingJobContractAddress(newAddress common.Address) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.SetTrainingJobContractAddress(&_Scatterprotocol.TransactOpts, newAddress)
}

// SetTrainingJobContractAddress is a paid mutator transaction binding the contract method 0x5aff6e77.
//
// Solidity: function setTrainingJobContractAddress(address newAddress) returns()
func (_Scatterprotocol *ScatterprotocolTransactorSession) SetTrainingJobContractAddress(newAddress common.Address) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.SetTrainingJobContractAddress(&_Scatterprotocol.TransactOpts, newAddress)
}

// StartTraining is a paid mutator transaction binding the contract method 0x300c7315.
//
// Solidity: function startTraining(string topicName) returns()
func (_Scatterprotocol *ScatterprotocolTransactor) StartTraining(opts *bind.TransactOpts, topicName string) (*types.Transaction, error) {
	return _Scatterprotocol.contract.Transact(opts, "startTraining", topicName)
}

// StartTraining is a paid mutator transaction binding the contract method 0x300c7315.
//
// Solidity: function startTraining(string topicName) returns()
func (_Scatterprotocol *ScatterprotocolSession) StartTraining(topicName string) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.StartTraining(&_Scatterprotocol.TransactOpts, topicName)
}

// StartTraining is a paid mutator transaction binding the contract method 0x300c7315.
//
// Solidity: function startTraining(string topicName) returns()
func (_Scatterprotocol *ScatterprotocolTransactorSession) StartTraining(topicName string) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.StartTraining(&_Scatterprotocol.TransactOpts, topicName)
}

// SubmitEvaluationScore is a paid mutator transaction binding the contract method 0x51ba5ab6.
//
// Solidity: function submitEvaluationScore(address requestorAddress, string topicName, address trainerAddress, uint256 score) returns()
func (_Scatterprotocol *ScatterprotocolTransactor) SubmitEvaluationScore(opts *bind.TransactOpts, requestorAddress common.Address, topicName string, trainerAddress common.Address, score *big.Int) (*types.Transaction, error) {
	return _Scatterprotocol.contract.Transact(opts, "submitEvaluationScore", requestorAddress, topicName, trainerAddress, score)
}

// SubmitEvaluationScore is a paid mutator transaction binding the contract method 0x51ba5ab6.
//
// Solidity: function submitEvaluationScore(address requestorAddress, string topicName, address trainerAddress, uint256 score) returns()
func (_Scatterprotocol *ScatterprotocolSession) SubmitEvaluationScore(requestorAddress common.Address, topicName string, trainerAddress common.Address, score *big.Int) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.SubmitEvaluationScore(&_Scatterprotocol.TransactOpts, requestorAddress, topicName, trainerAddress, score)
}

// SubmitEvaluationScore is a paid mutator transaction binding the contract method 0x51ba5ab6.
//
// Solidity: function submitEvaluationScore(address requestorAddress, string topicName, address trainerAddress, uint256 score) returns()
func (_Scatterprotocol *ScatterprotocolTransactorSession) SubmitEvaluationScore(requestorAddress common.Address, topicName string, trainerAddress common.Address, score *big.Int) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.SubmitEvaluationScore(&_Scatterprotocol.TransactOpts, requestorAddress, topicName, trainerAddress, score)
}

// SubmitEvaluationSet is a paid mutator transaction binding the contract method 0x8017c3e1.
//
// Solidity: function submitEvaluationSet(string topicName, string evaluationDataURI) returns()
func (_Scatterprotocol *ScatterprotocolTransactor) SubmitEvaluationSet(opts *bind.TransactOpts, topicName string, evaluationDataURI string) (*types.Transaction, error) {
	return _Scatterprotocol.contract.Transact(opts, "submitEvaluationSet", topicName, evaluationDataURI)
}

// SubmitEvaluationSet is a paid mutator transaction binding the contract method 0x8017c3e1.
//
// Solidity: function submitEvaluationSet(string topicName, string evaluationDataURI) returns()
func (_Scatterprotocol *ScatterprotocolSession) SubmitEvaluationSet(topicName string, evaluationDataURI string) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.SubmitEvaluationSet(&_Scatterprotocol.TransactOpts, topicName, evaluationDataURI)
}

// SubmitEvaluationSet is a paid mutator transaction binding the contract method 0x8017c3e1.
//
// Solidity: function submitEvaluationSet(string topicName, string evaluationDataURI) returns()
func (_Scatterprotocol *ScatterprotocolTransactorSession) SubmitEvaluationSet(topicName string, evaluationDataURI string) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.SubmitEvaluationSet(&_Scatterprotocol.TransactOpts, topicName, evaluationDataURI)
}

// TrainerAddTopic is a paid mutator transaction binding the contract method 0x6fb3337e.
//
// Solidity: function trainerAddTopic(address requestorAddress, string topicName, uint256 stakeAmount) returns()
func (_Scatterprotocol *ScatterprotocolTransactor) TrainerAddTopic(opts *bind.TransactOpts, requestorAddress common.Address, topicName string, stakeAmount *big.Int) (*types.Transaction, error) {
	return _Scatterprotocol.contract.Transact(opts, "trainerAddTopic", requestorAddress, topicName, stakeAmount)
}

// TrainerAddTopic is a paid mutator transaction binding the contract method 0x6fb3337e.
//
// Solidity: function trainerAddTopic(address requestorAddress, string topicName, uint256 stakeAmount) returns()
func (_Scatterprotocol *ScatterprotocolSession) TrainerAddTopic(requestorAddress common.Address, topicName string, stakeAmount *big.Int) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.TrainerAddTopic(&_Scatterprotocol.TransactOpts, requestorAddress, topicName, stakeAmount)
}

// TrainerAddTopic is a paid mutator transaction binding the contract method 0x6fb3337e.
//
// Solidity: function trainerAddTopic(address requestorAddress, string topicName, uint256 stakeAmount) returns()
func (_Scatterprotocol *ScatterprotocolTransactorSession) TrainerAddTopic(requestorAddress common.Address, topicName string, stakeAmount *big.Int) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.TrainerAddTopic(&_Scatterprotocol.TransactOpts, requestorAddress, topicName, stakeAmount)
}

// ScatterprotocolDebugEventIterator is returned from FilterDebugEvent and is used to iterate over the raw logs and unpacked data for DebugEvent events raised by the Scatterprotocol contract.
type ScatterprotocolDebugEventIterator struct {
	Event *ScatterprotocolDebugEvent // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ScatterprotocolDebugEventIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ScatterprotocolDebugEvent)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ScatterprotocolDebugEvent)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ScatterprotocolDebugEventIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ScatterprotocolDebugEventIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ScatterprotocolDebugEvent represents a DebugEvent event raised by the Scatterprotocol contract.
type ScatterprotocolDebugEvent struct {
	Message string
	Raw     types.Log // Blockchain specific contextual infos
}

// FilterDebugEvent is a free log retrieval operation binding the contract event 0x56f074d292557f2e3c567d982816e0fb5b72100ff196892f8fbd23b8a9073679.
//
// Solidity: event DebugEvent(string message)
func (_Scatterprotocol *ScatterprotocolFilterer) FilterDebugEvent(opts *bind.FilterOpts) (*ScatterprotocolDebugEventIterator, error) {

	logs, sub, err := _Scatterprotocol.contract.FilterLogs(opts, "DebugEvent")
	if err != nil {
		return nil, err
	}
	return &ScatterprotocolDebugEventIterator{contract: _Scatterprotocol.contract, event: "DebugEvent", logs: logs, sub: sub}, nil
}

// WatchDebugEvent is a free log subscription operation binding the contract event 0x56f074d292557f2e3c567d982816e0fb5b72100ff196892f8fbd23b8a9073679.
//
// Solidity: event DebugEvent(string message)
func (_Scatterprotocol *ScatterprotocolFilterer) WatchDebugEvent(opts *bind.WatchOpts, sink chan<- *ScatterprotocolDebugEvent) (event.Subscription, error) {

	logs, sub, err := _Scatterprotocol.contract.WatchLogs(opts, "DebugEvent")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ScatterprotocolDebugEvent)
				if err := _Scatterprotocol.contract.UnpackLog(event, "DebugEvent", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseDebugEvent is a log parse operation binding the contract event 0x56f074d292557f2e3c567d982816e0fb5b72100ff196892f8fbd23b8a9073679.
//
// Solidity: event DebugEvent(string message)
func (_Scatterprotocol *ScatterprotocolFilterer) ParseDebugEvent(log types.Log) (*ScatterprotocolDebugEvent, error) {
	event := new(ScatterprotocolDebugEvent)
	if err := _Scatterprotocol.contract.UnpackLog(event, "DebugEvent", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ScatterprotocolJobCompleteIterator is returned from FilterJobComplete and is used to iterate over the raw logs and unpacked data for JobComplete events raised by the Scatterprotocol contract.
type ScatterprotocolJobCompleteIterator struct {
	Event *ScatterprotocolJobComplete // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ScatterprotocolJobCompleteIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ScatterprotocolJobComplete)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ScatterprotocolJobComplete)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ScatterprotocolJobCompleteIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ScatterprotocolJobCompleteIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ScatterprotocolJobComplete represents a JobComplete event raised by the Scatterprotocol contract.
type ScatterprotocolJobComplete struct {
	Requestor common.Address
	TopicName string
	Raw       types.Log // Blockchain specific contextual infos
}

// FilterJobComplete is a free log retrieval operation binding the contract event 0x6205595390a0753e195fad731e2a21fe32900e9e6a00f2be0fbd7bf038147a1b.
//
// Solidity: event JobComplete(address requestor, string topicName)
func (_Scatterprotocol *ScatterprotocolFilterer) FilterJobComplete(opts *bind.FilterOpts) (*ScatterprotocolJobCompleteIterator, error) {

	logs, sub, err := _Scatterprotocol.contract.FilterLogs(opts, "JobComplete")
	if err != nil {
		return nil, err
	}
	return &ScatterprotocolJobCompleteIterator{contract: _Scatterprotocol.contract, event: "JobComplete", logs: logs, sub: sub}, nil
}

// WatchJobComplete is a free log subscription operation binding the contract event 0x6205595390a0753e195fad731e2a21fe32900e9e6a00f2be0fbd7bf038147a1b.
//
// Solidity: event JobComplete(address requestor, string topicName)
func (_Scatterprotocol *ScatterprotocolFilterer) WatchJobComplete(opts *bind.WatchOpts, sink chan<- *ScatterprotocolJobComplete) (event.Subscription, error) {

	logs, sub, err := _Scatterprotocol.contract.WatchLogs(opts, "JobComplete")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ScatterprotocolJobComplete)
				if err := _Scatterprotocol.contract.UnpackLog(event, "JobComplete", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseJobComplete is a log parse operation binding the contract event 0x6205595390a0753e195fad731e2a21fe32900e9e6a00f2be0fbd7bf038147a1b.
//
// Solidity: event JobComplete(address requestor, string topicName)
func (_Scatterprotocol *ScatterprotocolFilterer) ParseJobComplete(log types.Log) (*ScatterprotocolJobComplete, error) {
	event := new(ScatterprotocolJobComplete)
	if err := _Scatterprotocol.contract.UnpackLog(event, "JobComplete", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ScatterprotocolModelReadyToValidateIterator is returned from FilterModelReadyToValidate and is used to iterate over the raw logs and unpacked data for ModelReadyToValidate events raised by the Scatterprotocol contract.
type ScatterprotocolModelReadyToValidateIterator struct {
	Event *ScatterprotocolModelReadyToValidate // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ScatterprotocolModelReadyToValidateIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ScatterprotocolModelReadyToValidate)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ScatterprotocolModelReadyToValidate)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ScatterprotocolModelReadyToValidateIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ScatterprotocolModelReadyToValidateIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ScatterprotocolModelReadyToValidate represents a ModelReadyToValidate event raised by the Scatterprotocol contract.
type ScatterprotocolModelReadyToValidate struct {
	Requestor common.Address
	TopicName string
	Raw       types.Log // Blockchain specific contextual infos
}

// FilterModelReadyToValidate is a free log retrieval operation binding the contract event 0x81ebde127b98dac35c03a4eec2d7d67042cbb737d00846b2cb0fa3f4e33f159a.
//
// Solidity: event ModelReadyToValidate(address requestor, string topicName)
func (_Scatterprotocol *ScatterprotocolFilterer) FilterModelReadyToValidate(opts *bind.FilterOpts) (*ScatterprotocolModelReadyToValidateIterator, error) {

	logs, sub, err := _Scatterprotocol.contract.FilterLogs(opts, "ModelReadyToValidate")
	if err != nil {
		return nil, err
	}
	return &ScatterprotocolModelReadyToValidateIterator{contract: _Scatterprotocol.contract, event: "ModelReadyToValidate", logs: logs, sub: sub}, nil
}

// WatchModelReadyToValidate is a free log subscription operation binding the contract event 0x81ebde127b98dac35c03a4eec2d7d67042cbb737d00846b2cb0fa3f4e33f159a.
//
// Solidity: event ModelReadyToValidate(address requestor, string topicName)
func (_Scatterprotocol *ScatterprotocolFilterer) WatchModelReadyToValidate(opts *bind.WatchOpts, sink chan<- *ScatterprotocolModelReadyToValidate) (event.Subscription, error) {

	logs, sub, err := _Scatterprotocol.contract.WatchLogs(opts, "ModelReadyToValidate")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ScatterprotocolModelReadyToValidate)
				if err := _Scatterprotocol.contract.UnpackLog(event, "ModelReadyToValidate", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseModelReadyToValidate is a log parse operation binding the contract event 0x81ebde127b98dac35c03a4eec2d7d67042cbb737d00846b2cb0fa3f4e33f159a.
//
// Solidity: event ModelReadyToValidate(address requestor, string topicName)
func (_Scatterprotocol *ScatterprotocolFilterer) ParseModelReadyToValidate(log types.Log) (*ScatterprotocolModelReadyToValidate, error) {
	event := new(ScatterprotocolModelReadyToValidate)
	if err := _Scatterprotocol.contract.UnpackLog(event, "ModelReadyToValidate", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ScatterprotocolRequestForEvaluationSetIterator is returned from FilterRequestForEvaluationSet and is used to iterate over the raw logs and unpacked data for RequestForEvaluationSet events raised by the Scatterprotocol contract.
type ScatterprotocolRequestForEvaluationSetIterator struct {
	Event *ScatterprotocolRequestForEvaluationSet // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ScatterprotocolRequestForEvaluationSetIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ScatterprotocolRequestForEvaluationSet)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ScatterprotocolRequestForEvaluationSet)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ScatterprotocolRequestForEvaluationSetIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ScatterprotocolRequestForEvaluationSetIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ScatterprotocolRequestForEvaluationSet represents a RequestForEvaluationSet event raised by the Scatterprotocol contract.
type ScatterprotocolRequestForEvaluationSet struct {
	Requestor common.Address
	TopicName string
	Raw       types.Log // Blockchain specific contextual infos
}

// FilterRequestForEvaluationSet is a free log retrieval operation binding the contract event 0xf7e2a6109d1c061bfecbea32c29709ab398588a2d2ad965c461d536d086e14e0.
//
// Solidity: event RequestForEvaluationSet(address requestor, string topicName)
func (_Scatterprotocol *ScatterprotocolFilterer) FilterRequestForEvaluationSet(opts *bind.FilterOpts) (*ScatterprotocolRequestForEvaluationSetIterator, error) {

	logs, sub, err := _Scatterprotocol.contract.FilterLogs(opts, "RequestForEvaluationSet")
	if err != nil {
		return nil, err
	}
	return &ScatterprotocolRequestForEvaluationSetIterator{contract: _Scatterprotocol.contract, event: "RequestForEvaluationSet", logs: logs, sub: sub}, nil
}

// WatchRequestForEvaluationSet is a free log subscription operation binding the contract event 0xf7e2a6109d1c061bfecbea32c29709ab398588a2d2ad965c461d536d086e14e0.
//
// Solidity: event RequestForEvaluationSet(address requestor, string topicName)
func (_Scatterprotocol *ScatterprotocolFilterer) WatchRequestForEvaluationSet(opts *bind.WatchOpts, sink chan<- *ScatterprotocolRequestForEvaluationSet) (event.Subscription, error) {

	logs, sub, err := _Scatterprotocol.contract.WatchLogs(opts, "RequestForEvaluationSet")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ScatterprotocolRequestForEvaluationSet)
				if err := _Scatterprotocol.contract.UnpackLog(event, "RequestForEvaluationSet", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseRequestForEvaluationSet is a log parse operation binding the contract event 0xf7e2a6109d1c061bfecbea32c29709ab398588a2d2ad965c461d536d086e14e0.
//
// Solidity: event RequestForEvaluationSet(address requestor, string topicName)
func (_Scatterprotocol *ScatterprotocolFilterer) ParseRequestForEvaluationSet(log types.Log) (*ScatterprotocolRequestForEvaluationSet, error) {
	event := new(ScatterprotocolRequestForEvaluationSet)
	if err := _Scatterprotocol.contract.UnpackLog(event, "RequestForEvaluationSet", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ScatterprotocolTrainingInitializedIterator is returned from FilterTrainingInitialized and is used to iterate over the raw logs and unpacked data for TrainingInitialized events raised by the Scatterprotocol contract.
type ScatterprotocolTrainingInitializedIterator struct {
	Event *ScatterprotocolTrainingInitialized // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ScatterprotocolTrainingInitializedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ScatterprotocolTrainingInitialized)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ScatterprotocolTrainingInitialized)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ScatterprotocolTrainingInitializedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ScatterprotocolTrainingInitializedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ScatterprotocolTrainingInitialized represents a TrainingInitialized event raised by the Scatterprotocol contract.
type ScatterprotocolTrainingInitialized struct {
	Requestor common.Address
	TopicName string
	Raw       types.Log // Blockchain specific contextual infos
}

// FilterTrainingInitialized is a free log retrieval operation binding the contract event 0xccf83a8b6b0e84145342e27b95fb2db4f9485912b03ae9e14666580c72ef2b3d.
//
// Solidity: event TrainingInitialized(address requestor, string topicName)
func (_Scatterprotocol *ScatterprotocolFilterer) FilterTrainingInitialized(opts *bind.FilterOpts) (*ScatterprotocolTrainingInitializedIterator, error) {

	logs, sub, err := _Scatterprotocol.contract.FilterLogs(opts, "TrainingInitialized")
	if err != nil {
		return nil, err
	}
	return &ScatterprotocolTrainingInitializedIterator{contract: _Scatterprotocol.contract, event: "TrainingInitialized", logs: logs, sub: sub}, nil
}

// WatchTrainingInitialized is a free log subscription operation binding the contract event 0xccf83a8b6b0e84145342e27b95fb2db4f9485912b03ae9e14666580c72ef2b3d.
//
// Solidity: event TrainingInitialized(address requestor, string topicName)
func (_Scatterprotocol *ScatterprotocolFilterer) WatchTrainingInitialized(opts *bind.WatchOpts, sink chan<- *ScatterprotocolTrainingInitialized) (event.Subscription, error) {

	logs, sub, err := _Scatterprotocol.contract.WatchLogs(opts, "TrainingInitialized")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ScatterprotocolTrainingInitialized)
				if err := _Scatterprotocol.contract.UnpackLog(event, "TrainingInitialized", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseTrainingInitialized is a log parse operation binding the contract event 0xccf83a8b6b0e84145342e27b95fb2db4f9485912b03ae9e14666580c72ef2b3d.
//
// Solidity: event TrainingInitialized(address requestor, string topicName)
func (_Scatterprotocol *ScatterprotocolFilterer) ParseTrainingInitialized(log types.Log) (*ScatterprotocolTrainingInitialized, error) {
	event := new(ScatterprotocolTrainingInitialized)
	if err := _Scatterprotocol.contract.UnpackLog(event, "TrainingInitialized", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}
