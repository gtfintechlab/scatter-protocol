// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package scattertoken

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
	_ = abi.ConvertType
)

// ScattertokenMetaData contains all meta data concerning the Scattertoken contract.
var ScattertokenMetaData = &bind.MetaData{
	ABI: "[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"cap\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensStaked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensUnstaked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToStake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"canBecomeChallenger\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"canBecomeValidator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"requestorAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"topicName\",\"type\":\"string\"}],\"name\":\"donateToLottery\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getAccountStake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLotteryPool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLotteryPoolExternal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwnStake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"addresspayable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"requestorAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"topicName\",\"type\":\"string\"}],\"name\":\"punishRogueTrainers\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"requestorAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"topicName\",\"type\":\"string\"}],\"name\":\"punishRogueValidators\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"removeStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"requestorAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"topicName\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"requestorLockToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"requiredModelChallengerStake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"requiredModelValidatorStake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"requestorAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"topicName\",\"type\":\"string\"}],\"name\":\"returnTokensToRequestor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"requestorAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"topicName\",\"type\":\"string\"}],\"name\":\"returnTokensToTrainers\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"requestorAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"topicName\",\"type\":\"string\"}],\"name\":\"rewardBenevolentTrainers\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"requestorAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"topicName\",\"type\":\"string\"}],\"name\":\"rewardBenevolentValidators\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"requestorAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"topicName\",\"type\":\"string\"}],\"name\":\"rewardChallengers\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"setEvaluationJobTokenContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"setReputationManagerContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"setScatterProtocolAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"setVoteManagerContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stakeToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"trainerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"requestorAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"topicName\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"trainerLockToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]",
	Bin: "0x60a06040525f600d55600a600e556046600f55601460105560c860115560026012553480156200002d575f80fd5b5060405162003be538038062003be58339810160408190526200005091620002f9565b806040518060400160405280600c81526020016b29b1b0ba3a32b92a37b5b2b760a11b8152506040518060400160405280600281526020016114d560f21b8152508160039081620000a29190620003ae565b506004620000b18282620003ae565b5050505f8111620001095760405162461bcd60e51b815260206004820152601560248201527f45524332304361707065643a206361702069732030000000000000000000000060448201526064015b60405180910390fd5b6080526001600555600880546001600160a01b0319163390811790915562000132908262000145565b506161a8600655614e20600755620004a0565b608051816200015360025490565b6200015f91906200047a565b1115620001af5760405162461bcd60e51b815260206004820152601960248201527f45524332304361707065643a2063617020657863656564656400000000000000604482015260640162000100565b620001bb8282620001bf565b5050565b60805181620001cd60025490565b620001d991906200047a565b1115620002295760405162461bcd60e51b815260206004820152601960248201527f45524332304361707065643a2063617020657863656564656400000000000000604482015260640162000100565b620001bb82826001600160a01b038216620002875760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640162000100565b8060025f8282546200029a91906200047a565b90915550506001600160a01b0382165f81815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3620001bb5f83835b505050565b5f602082840312156200030a575f80fd5b5051919050565b634e487b7160e01b5f52604160045260245ffd5b600181811c908216806200033a57607f821691505b6020821081036200035957634e487b7160e01b5f52602260045260245ffd5b50919050565b601f821115620002f457805f5260205f20601f840160051c81016020851015620003865750805b601f840160051c820191505b81811015620003a7575f815560010162000392565b5050505050565b81516001600160401b03811115620003ca57620003ca62000311565b620003e281620003db845462000325565b846200035f565b602080601f83116001811462000418575f8415620004005750858301515b5f19600386901b1c1916600185901b17855562000472565b5f85815260208120601f198616915b82811015620004485788860151825594840194600190910190840162000427565b50858210156200046657878501515f19600388901b60f8161c191681555b505060018460011b0185555b505050505050565b808201808211156200049a57634e487b7160e01b5f52601160045260245ffd5b92915050565b608051613710620004d55f395f81816102f5015281816114d201528181611520015281816129400152612dee01526137105ff3fe608060405234801561000f575f80fd5b506004361061023f575f3560e01c806379cc679011610135578063a9059cbb116100b4578063da0e3f1311610079578063da0e3f1314610550578063dd62ed3e14610563578063f5fc44c714610576578063f9d79c6814610589578063fb7ba5821461059c575f80fd5b8063a9059cbb14610504578063bd8d86b714610377578063bea55db914610517578063ccd712d51461052a578063cda6b8471461053d575f80fd5b806395d89b41116100fa57806395d89b4114610488578063968c2000146104905780639dacf42d146104a3578063a1a33f44146104d2578063a457c2d7146104f1575f80fd5b806379cc679014610411578063824205d1146104245780638a1fea68146104375780638da5cb5b1461044a578063939624ab14610475575f80fd5b8063379a7e8e116101c15780634ee2b2ee116101865780634ee2b2ee146103775780635e30913f1461037f57806370a08231146103a7578063711ac775146103cf57806371f65bd7146103fe575f80fd5b8063379a7e8e14610322578063395093511461032b57806342966c681461033e57806342a0f9bf1461035157806342d098e514610364575f80fd5b806323b872dd1161020757806323b872dd146102be5780632ca23869146102d1578063313ce567146102e4578063355274ea146102f357806336cb7f8014610319575f80fd5b806306fdde0314610243578063095ea7b3146102615780630b15127b1461028457806317ede4b41461029957806318160ddd146102ac575b5f80fd5b61024b6105b0565b6040516102589190612f7a565b60405180910390f35b61027461026f366004612fa0565b610640565b6040519015158152602001610258565b610297610292366004612fca565b610659565b005b6102976102a7366004613096565b6106ae565b6002545b604051908152602001610258565b6102746102cc3660046130e3565b610c73565b6102976102df366004613096565b610c96565b60405160128152602001610258565b7f00000000000000000000000000000000000000000000000000000000000000006102b0565b6102b060065481565b6102b060075481565b610274610339366004612fa0565b611111565b61029761034c366004613121565b611132565b61029761035f366004613138565b61113f565b610297610372366004612fca565b611236565b600d546102b0565b6102b061038d366004612fca565b6001600160a01b03165f9081526009602052604090205490565b6102b06103b5366004612fca565b6001600160a01b03165f9081526020819052604090205490565b6102746103dd366004612fca565b6007546001600160a01b039091165f90815260096020526040902054101590565b61029761040c366004612fca565b611282565b61029761041f366004612fa0565b6112ce565b610297610432366004613096565b6112e7565b610297610445366004613096565b611380565b60085461045d906001600160a01b031681565b6040516001600160a01b039091168152602001610258565b610297610483366004613121565b6115f2565b61024b611823565b61029761049e366004613096565b611832565b6102746104b1366004612fca565b6006546001600160a01b039091165f90815260096020526040902054101590565b6102b06104e0366004612fca565b60096020525f908152604090205481565b6102746104ff366004612fa0565b611cac565b610274610512366004612fa0565b611d26565b610297610525366004612fca565b611d33565b61029761053836600461318d565b611d7f565b61029761054b366004613121565b611eed565b61029761055e366004613096565b612040565b6102b06105713660046131f3565b61232a565b610297610584366004613096565b612354565b610297610597366004613096565b612648565b335f908152600960205260409020546102b0565b6060600380546105bf9061322a565b80601f01602080910402602001604051908101604052809291908181526020018280546105eb9061322a565b80156106365780601f1061060d57610100808354040283529160200191610636565b820191905f5260205f20905b81548152906001019060200180831161061957829003601f168201915b5050505050905090565b5f3361064d81858561281a565b60019150505b92915050565b6008546001600160a01b0316331461068c5760405162461bcd60e51b815260040161068390613262565b60405180910390fd5b601580546001600160a01b0319166001600160a01b0392909216919091179055565b6014546001600160a01b031633146106d85760405162461bcd60e51b8152600401610683906132a7565b60155460405163042f845360e51b81525f916001600160a01b0316906385f08a609061070a9086908690600401613304565b5f60405180830381865afa158015610724573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f1916820160405261074b919081019061332f565b601554604051630d8e144560e41b81529192505f916001600160a01b039091169063d8e14450906107829087908790600401613304565b5f60405180830381865afa15801561079c573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f191682016040526107c3919081019061332f565b90505f815183516107d491906133f0565b67ffffffffffffffff8111156107ec576107ec612fe5565b604051908082528060200260200182016040528015610815578160200160208202803683370190505b5090505f805b8451811015610a77575f6001600160a01b031685828151811061084057610840613403565b60200260200101516001600160a01b03160315610a775760175485515f916001600160a01b0316906343faf37f908a908a908a908790811061088457610884613403565b60200260200101516040518463ffffffff1660e01b81526004016108aa93929190613417565b602060405180830381865afa1580156108c5573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108e9919061344b565b90505f8060175488516001600160a01b0390911690631aed680e908c908c908c908990811061091a5761091a613403565b60200260200101516040518463ffffffff1660e01b815260040161094093929190613417565b602060405180830381865afa15801561095b573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061097f919061347e565b60028111156109905761099061346a565b14905081801561099e575080155b15610a6d5760145487516001600160a01b039091169063ce586a1e908b908b908b90889081106109d0576109d0613403565b60200260200101516040518463ffffffff1660e01b81526004016109f693929190613417565b602060405180830381865afa158015610a11573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610a35919061349c565b858581518110610a4757610a47613403565b6001600160a01b0390921660209283029190910190910152610a6a6001856133f0565b93505b505060010161081b565b505f5b8351811015610c23575f6001600160a01b0316848281518110610a9f57610a9f613403565b60200260200101516001600160a01b03160315610c235760175484515f916001600160a01b03169063ca88ae24908a908a90899087908110610ae357610ae3613403565b60200260200101516040518463ffffffff1660e01b8152600401610b0993929190613417565b602060405180830381865afa158015610b24573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b48919061344b565b90508015610c1a5760145485516001600160a01b039091169063ce586a1e908a908a90899087908110610b7d57610b7d613403565b60200260200101516040518463ffffffff1660e01b8152600401610ba393929190613417565b602060405180830381865afa158015610bbe573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610be2919061349c565b848481518110610bf457610bf4613403565b6001600160a01b0390921660209283029190910190910152610c176001846133f0565b92505b50600101610a7a565b505f5b81811015610c6657610c5e838281518110610c4357610c43613403565b602002602001015183600d54610c5991906134cb565b61293e565b600101610c26565b50505f600d555050505050565b5f33610c808582856129c7565b610c8b858585612a39565b506001949350505050565b6014546001600160a01b03163314610cc05760405162461bcd60e51b8152600401610683906132a7565b6015546040516328882e8160e01b81525f916001600160a01b0316906328882e8190610cf29086908690600401613304565b5f60405180830381865afa158015610d0c573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f19168201604052610d33919081019061332f565b90505f815167ffffffffffffffff811115610d5057610d50612fe5565b604051908082528060200260200182016040528015610d79578160200160208202803683370190505b506017546040516395faa05760e01b81529192505f916001600160a01b03909116906395faa05790610db19088908890600401613304565b602060405180830381865afa158015610dcc573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610df0919061344b565b90508015610e55575f5b8351811015610e4f57838181518110610e1557610e15613403565b6020026020010151838281518110610e2f57610e2f613403565b6001600160a01b0390921660209283029190910190910152600101610dfa565b50610f4d565b5f5b8351811015610f4b5760175484516001600160a01b03909116906397e12c369088908890889086908110610e8d57610e8d613403565b60200260200101516040518463ffffffff1660e01b8152600401610eb393929190613417565b602060405180830381865afa158015610ece573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610ef2919061344b565b610f4357838181518110610f0857610f08613403565b6020026020010151838281518110610f2257610f22613403565b60200260200101906001600160a01b031690816001600160a01b0316815250505b600101610e57565b505b5f805b8351811015610fdf575f6001600160a01b0316848281518110610f7557610f75613403565b60200260200101516001600160a01b03160315610fd75760095f858381518110610fa157610fa1613403565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020015f205482610fd491906133f0565b91505b600101610f50565b505f6064601054600c5f8a6001600160a01b03166001600160a01b031681526020019081526020015f208860405161101791906134ea565b9081526020016040518091039020546110309190613505565b61103a91906134cb565b90505f5b8451811015611107575f6001600160a01b031685828151811061106357611063613403565b60200260200101516001600160a01b031603156110ff575f6110868460016133f0565b8360095f89868151811061109c5761109c613403565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020015f20546110ce9190613505565b6110d891906134cb565b90506110fd8683815181106110ef576110ef613403565b60200260200101518261293e565b505b60010161103e565b5050505050505050565b5f3361064d818585611123838361232a565b61112d91906133f0565b61281a565b61113c3382612bdb565b50565b6014546001600160a01b031633146111695760405162461bcd60e51b8152600401610683906132a7565b6040516370a0823160e01b81526001600160a01b038416600482015230906370a0823190602401602060405180830381865afa1580156111ab573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906111cf919061351c565b8111156111ee5760405162461bcd60e51b815260040161068390613533565b6111f88382612bdb565b6001600160a01b0383165f908152600c60205260409081902090518291906112219085906134ea565b90815260405190819003602001902055505050565b6008546001600160a01b031633146112605760405162461bcd60e51b815260040161068390613262565b601780546001600160a01b0319166001600160a01b0392909216919091179055565b6008546001600160a01b031633146112ac5760405162461bcd60e51b815260040161068390613262565b601680546001600160a01b0319166001600160a01b0392909216919091179055565b6112d98233836129c7565b6112e38282612bdb565b5050565b6014546001600160a01b031633146113115760405162461bcd60e51b8152600401610683906132a7565b6001600160a01b0382165f908152600c602052604080822090516113369084906134ea565b90815260200160405180910390205490505f6064600e54836113589190613505565b61136291906134cb565b905080600d5f82825461137591906133f0565b909155505050505050565b6014546001600160a01b031633146113aa5760405162461bcd60e51b8152600401610683906132a7565b6015546040516355cb365d60e11b81525f916001600160a01b03169063ab966cba906113dc9086908690600401613304565b5f60405180830381865afa1580156113f6573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f1916820160405261141d919081019061332f565b90505f5b81518110156115ec575f6001600160a01b031682828151811061144657611446613403565b60200260200101516001600160a01b031603156115ec576001600160a01b0384165f908152600b602052604080822090516114829086906134ea565b90815260200160405180910390205f8484815181106114a3576114a3613403565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020015f205490506114f47f000000000000000000000000000000000000000000000000000000000000000090565b816114fe60025490565b61150891906133f0565b111561156257600854611562906001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000008361154960025490565b61155391906133f0565b61155d9190613577565b612bdb565b6115778383815181106110ef576110ef613403565b6001600160a01b0385165f908152600b602052604090819020905161159d9086906134ea565b90815260200160405180910390205f8484815181106115be576115be613403565b6020908102919091018101516001600160a01b031682528101919091526040015f9081205550600101611421565b50505050565b6115fa612d03565b335f908152600a602052604090205442111561167e5760405162461bcd60e51b815260206004820152603860248201527f596f75206d7573742077616974206265666f7265206265696e672061626c652060448201527f746f20756e7374616b65205363617474657220546f6b656e00000000000000006064820152608401610683565b335f9081526009602052604090205481106116ea5760405162461bcd60e51b815260206004820152602660248201527f416d6f756e74206d757374206265206c657373207468616e207374616b656420604482015265185b5bdd5b9d60d21b6064820152608401610683565b6116f4338261293e565b335f9081526009602052604081208054839290611712908490613577565b9091555050601454604051630a9d3d9b60e11b81523360048201525f916001600160a01b03169063153a7b3690602401602060405180830381865afa15801561175d573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611781919061358a565b905060038160048111156117975761179761346a565b1480156117b35750600654335f90815260096020526040902054105b15611818576014546040516302b8e1f360e51b81526001600160a01b039091169063571c3e60906117ea9033905f906004016135a8565b5f604051808303815f87803b158015611801575f80fd5b505af1158015611813573d5f803e3d5ffd5b505050505b5061113c6001600555565b6060600480546105bf9061322a565b6014546001600160a01b0316331461185c5760405162461bcd60e51b8152600401610683906132a7565b6015546040516355cb365d60e11b81525f916001600160a01b03169063ab966cba9061188e9086908690600401613304565b5f60405180830381865afa1580156118a8573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f191682016040526118cf919081019061332f565b90505f6064600f54600c5f876001600160a01b03166001600160a01b031681526020019081526020015f208560405161190891906134ea565b9081526020016040518091039020546119219190613505565b61192b91906134cb565b90505f805b8351811015611abb575f6001600160a01b031684828151811061195557611955613403565b60200260200101516001600160a01b03160315611abb575f600260165f9054906101000a90046001600160a01b03166001600160a01b031663d7287ff789898987815181106119a6576119a6613403565b60200260200101516040518463ffffffff1660e01b81526004016119cc93929190613417565b602060405180830381865afa1580156119e7573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611a0b919061351c565b611a1591906136c1565b6001600160a01b0388165f908152600b602052604080822090519293509091611a3f9089906134ea565b90815260200160405180910390205f878581518110611a6057611a60613403565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020015f205490505f611a9482612d5c565b9050611aa08184613505565b611aaa90866133f0565b945050600190920191506119309050565b505f5b8351811015611ca4575f6001600160a01b0316848281518110611ae357611ae3613403565b60200260200101516001600160a01b03160315611ca4575f600260165f9054906101000a90046001600160a01b03166001600160a01b031663d7287ff78989898781518110611b3457611b34613403565b60200260200101516040518463ffffffff1660e01b8152600401611b5a93929190613417565b602060405180830381865afa158015611b75573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611b99919061351c565b611ba391906136c1565b6001600160a01b0388165f908152600b602052604080822090519293509091611bcd9089906134ea565b90815260200160405180910390205f878581518110611bee57611bee613403565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020015f205490505f611c2282612d5c565b90505f8587611c318487613505565b611c3b9190613505565b611c4591906134cb565b90505f6001600160a01b0316888681518110611c6357611c63613403565b60200260200101516001600160a01b031603611c825750505050611c9c565b611c978886815181106110ef576110ef613403565b505050505b600101611abe565b505050505050565b5f3381611cb9828661232a565b905083811015611d195760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610683565b610c8b828686840361281a565b5f3361064d818585612a39565b6008546001600160a01b03163314611d5d5760405162461bcd60e51b815260040161068390613262565b601480546001600160a01b0319166001600160a01b0392909216919091179055565b6014546001600160a01b03163314611da95760405162461bcd60e51b8152600401610683906132a7565b6040516370a0823160e01b81526001600160a01b038516600482015230906370a0823190602401602060405180830381865afa158015611deb573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611e0f919061351c565b811115611e2e5760405162461bcd60e51b815260040161068390613533565b5f8111611e7d5760405162461bcd60e51b815260206004820152601f60248201527f4d757374206c6f636b20736f6d6520616d6f756e74206f6620746f6b656e73006044820152606401610683565b611e878482612bdb565b6001600160a01b0383165f908152600b6020526040908190209051829190611eb09085906134ea565b90815260200160405180910390205f866001600160a01b03166001600160a01b031681526020019081526020015f205f82825461137591906133f0565b611ef5612d03565b6040516370a0823160e01b815233600482015230906370a0823190602401602060405180830381865afa158015611f2e573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611f52919061351c565b811115611faf5760405162461bcd60e51b815260206004820152602560248201527f43616e6e6f74207374616b65206d6f726520746f6b656e73207468616e20796f6044820152643a9037bbb760d91b6064820152608401610683565b611fb93382612bdb565b335f9081526009602052604081208054839290611fd79084906133f0565b90915550611fea90504262278d006133f0565b335f818152600a60209081526040918290209390935580519182529181018390527fb539ca1e5c8d398ddf1c41c30166f33404941683be4683319b57669a93dad4ef910160405180910390a161113c6001600555565b6014546001600160a01b0316331461206a5760405162461bcd60e51b8152600401610683906132a7565b601554604051630d8e144560e41b81525f916001600160a01b03169063d8e144509061209c9086908690600401613304565b5f60405180830381865afa1580156120b6573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f191682016040526120dd919081019061332f565b90505f5b81518110156115ec575f6001600160a01b031682828151811061210657612106613403565b60200260200101516001600160a01b031603156115ec575f60135f84848151811061213357612133613403565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020015f205460125461216891906136cf565b6011546121759190613505565b90505f6121be60095f86868151811061219057612190613403565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020015f205483612dd5565b905080600d5f8282546121d191906133f0565b925050819055508060095f8686815181106121ee576121ee613403565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020015f205f8282546122239190613577565b92505081905550600160135f86868151811061224157612241613403565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020015f205f82825461227691906133f0565b925050819055505f60095f86868151811061229357612293613403565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020015f205411612320576014546040516302b8e1f360e51b81526001600160a01b039091169063571c3e60906122f29033905f906004016135a8565b5f604051808303815f87803b158015612309575f80fd5b505af115801561231b573d5f803e3d5ffd5b505050505b50506001016120e1565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b6014546001600160a01b0316331461237e5760405162461bcd60e51b8152600401610683906132a7565b6017546040516395faa05760e01b81526001600160a01b03909116906395faa057906123b09085908590600401613304565b602060405180830381865afa1580156123cb573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906123ef919061344b565b6112e3576015546040516355cb365d60e11b81525f916001600160a01b03169063ab966cba906124259086908690600401613304565b5f60405180830381865afa15801561243f573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f19168201604052612466919081019061332f565b6015546040516328882e8160e01b81529192505f916001600160a01b03909116906328882e819061249d9087908790600401613304565b5f60405180830381865afa1580156124b7573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f191682016040526124de919081019061332f565b90505f805f5b8451811015612535575f6001600160a01b031685828151811061250957612509613403565b60200260200101516001600160a01b031603156125355761252b6001846133f0565b92506001016124e4565b505f5b8351811015612589575f6001600160a01b031684828151811061255d5761255d613403565b60200260200101516001600160a01b031603156125895761257f6001836133f0565b9150600101612538565b50815f036125ee576125ee866064600c5f8a6001600160a01b03166001600160a01b031681526020019081526020015f20886040516125c891906134ea565b908152602001604051809103902054600f546125e49190613505565b610c5991906134cb565b805f03611ca457611ca4866064600c5f8a6001600160a01b03166001600160a01b031681526020019081526020015f208860405161262c91906134ea565b9081526020016040518091039020546010546125e49190613505565b6014546001600160a01b031633146126725760405162461bcd60e51b8152600401610683906132a7565b60155460405163042f845360e51b81525f916001600160a01b0316906385f08a60906126a49086908690600401613304565b5f60405180830381865afa1580156126be573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f191682016040526126e5919081019061332f565b90505f5b81518110156115ec575f6001600160a01b031682828151811061270e5761270e613403565b60200260200101516001600160a01b031603156115ec576001600160a01b0384165f908152600b602052604090819020905161274b9085906134ea565b90815260200160405180910390205f83838151811061276c5761276c613403565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020015f2054600d5f8282546127a491906133f0565b90915550506001600160a01b0384165f908152600b602052604080822090516127ce9086906134ea565b90815260200160405180910390205f8484815181106127ef576127ef613403565b6020908102919091018101516001600160a01b031682528101919091526040015f20556001016126e9565b6001600160a01b03831661287c5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610683565b6001600160a01b0382166128dd5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610683565b6001600160a01b038381165f8181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b7f00000000000000000000000000000000000000000000000000000000000000008161296960025490565b61297391906133f0565b11156129bd5760405162461bcd60e51b8152602060048201526019602482015278115490cc8c10d85c1c19590e8818d85c08195e18d959591959603a1b6044820152606401610683565b6112e38282612dec565b5f6129d2848461232a565b90505f1981146115ec5781811015612a2c5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610683565b6115ec848484840361281a565b6001600160a01b038316612a9d5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610683565b6001600160a01b038216612aff5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610683565b6001600160a01b0383165f9081526020819052604090205481811015612b765760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610683565b6001600160a01b038481165f81815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36115ec565b6001600160a01b038216612c3b5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610683565b6001600160a01b0382165f9081526020819052604090205481811015612cae5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610683565b6001600160a01b0383165f818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9101612931565b600260055403612d555760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610683565b6002600555565b5f8115612dce575f6002830460010190505f6002828581612d7f57612d7f6134b7565b04830181612d8f57612d8f6134b7565b0490505b80821115612dc7578091506002828581612daf57612daf6134b7565b04830181612dbf57612dbf6134b7565b049050612d93565b5092915050565b505f919050565b5f818310612de35781612de5565b825b9392505050565b7f000000000000000000000000000000000000000000000000000000000000000081612e1760025490565b612e2191906133f0565b1115612e6b5760405162461bcd60e51b8152602060048201526019602482015278115490cc8c10d85c1c19590e8818d85c08195e18d959591959603a1b6044820152606401610683565b6112e382826001600160a01b038216612ec65760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610683565b8060025f828254612ed791906133f0565b90915550506001600160a01b0382165f81815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b5f5b83811015612f47578181015183820152602001612f2f565b50505f910152565b5f8151808452612f66816020860160208601612f2d565b601f01601f19169290920160200192915050565b602081525f612de56020830184612f4f565b6001600160a01b038116811461113c575f80fd5b5f8060408385031215612fb1575f80fd5b8235612fbc81612f8c565b946020939093013593505050565b5f60208284031215612fda575f80fd5b8135612de581612f8c565b634e487b7160e01b5f52604160045260245ffd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561302257613022612fe5565b604052919050565b5f82601f830112613039575f80fd5b813567ffffffffffffffff81111561305357613053612fe5565b613066601f8201601f1916602001612ff9565b81815284602083860101111561307a575f80fd5b816020850160208301375f918101602001919091529392505050565b5f80604083850312156130a7575f80fd5b82356130b281612f8c565b9150602083013567ffffffffffffffff8111156130cd575f80fd5b6130d98582860161302a565b9150509250929050565b5f805f606084860312156130f5575f80fd5b833561310081612f8c565b9250602084013561311081612f8c565b929592945050506040919091013590565b5f60208284031215613131575f80fd5b5035919050565b5f805f6060848603121561314a575f80fd5b833561315581612f8c565b9250602084013567ffffffffffffffff811115613170575f80fd5b61317c8682870161302a565b925050604084013590509250925092565b5f805f80608085870312156131a0575f80fd5b84356131ab81612f8c565b935060208501356131bb81612f8c565b9250604085013567ffffffffffffffff8111156131d6575f80fd5b6131e28782880161302a565b949793965093946060013593505050565b5f8060408385031215613204575f80fd5b823561320f81612f8c565b9150602083013561321f81612f8c565b809150509250929050565b600181811c9082168061323e57607f821691505b60208210810361325c57634e487b7160e01b5f52602260045260245ffd5b50919050565b60208082526025908201527f4f6e6c7920746865206f776e65722063616e2063616c6c20746869732066756e60408201526431ba34b7b760d91b606082015260800190565b6020808252603f908201527f54686973206d6574686f642063616e206f6e6c792062652063616c6c6564206260408201527f792074686520736361747465722070726f746f636f6c20636f6e747261637400606082015260800190565b6001600160a01b03831681526040602082018190525f9061332790830184612f4f565b949350505050565b5f6020808385031215613340575f80fd5b825167ffffffffffffffff80821115613357575f80fd5b818501915085601f83011261336a575f80fd5b81518181111561337c5761337c612fe5565b8060051b915061338d848301612ff9565b81815291830184019184810190888411156133a6575f80fd5b938501935b838510156133d057845192506133c083612f8c565b82825293850193908501906133ab565b98975050505050505050565b634e487b7160e01b5f52601160045260245ffd5b80820180821115610653576106536133dc565b634e487b7160e01b5f52603260045260245ffd5b5f60018060a01b038086168352606060208401526134386060840186612f4f565b9150808416604084015250949350505050565b5f6020828403121561345b575f80fd5b81518015158114612de5575f80fd5b634e487b7160e01b5f52602160045260245ffd5b5f6020828403121561348e575f80fd5b815160038110612de5575f80fd5b5f602082840312156134ac575f80fd5b8151612de581612f8c565b634e487b7160e01b5f52601260045260245ffd5b5f826134e557634e487b7160e01b5f52601260045260245ffd5b500490565b5f82516134fb818460208701612f2d565b9190910192915050565b8082028115828204841417610653576106536133dc565b5f6020828403121561352c575f80fd5b5051919050565b60208082526024908201527f43616e6e6f74206c6f636b206d6f726520746f6b656e73207468616e20796f756040820152631037bbb760e11b606082015260800190565b81810381811115610653576106536133dc565b5f6020828403121561359a575f80fd5b815160058110612de5575f80fd5b6001600160a01b038316815260408101600583106135d457634e487b7160e01b5f52602160045260245ffd5b8260208301529392505050565b600181815b8085111561361b57815f1904821115613601576136016133dc565b8085161561360e57918102915b93841c93908002906135e6565b509250929050565b5f8261363157506001610653565b8161363d57505f610653565b8160018114613653576002811461365d57613679565b6001915050610653565b60ff84111561366e5761366e6133dc565b50506001821b610653565b5060208310610133831016604e8410600b841016171561369c575081810a610653565b6136a683836135e1565b805f19048211156136b9576136b96133dc565b029392505050565b5f612de560ff841683613623565b5f612de5838361362356fea26469706673582212207772444fe63369dda48ab6703c09e048257a95a54e6b36c486d857b8d66d8cd864736f6c63430008170033",
}

// ScattertokenABI is the input ABI used to generate the binding from.
// Deprecated: Use ScattertokenMetaData.ABI instead.
var ScattertokenABI = ScattertokenMetaData.ABI

// ScattertokenBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use ScattertokenMetaData.Bin instead.
var ScattertokenBin = ScattertokenMetaData.Bin

// DeployScattertoken deploys a new Ethereum contract, binding an instance of Scattertoken to it.
func DeployScattertoken(auth *bind.TransactOpts, backend bind.ContractBackend, cap *big.Int) (common.Address, *types.Transaction, *Scattertoken, error) {
	parsed, err := ScattertokenMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(ScattertokenBin), backend, cap)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &Scattertoken{ScattertokenCaller: ScattertokenCaller{contract: contract}, ScattertokenTransactor: ScattertokenTransactor{contract: contract}, ScattertokenFilterer: ScattertokenFilterer{contract: contract}}, nil
}

// Scattertoken is an auto generated Go binding around an Ethereum contract.
type Scattertoken struct {
	ScattertokenCaller     // Read-only binding to the contract
	ScattertokenTransactor // Write-only binding to the contract
	ScattertokenFilterer   // Log filterer for contract events
}

// ScattertokenCaller is an auto generated read-only Go binding around an Ethereum contract.
type ScattertokenCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ScattertokenTransactor is an auto generated write-only Go binding around an Ethereum contract.
type ScattertokenTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ScattertokenFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type ScattertokenFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ScattertokenSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type ScattertokenSession struct {
	Contract     *Scattertoken     // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// ScattertokenCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type ScattertokenCallerSession struct {
	Contract *ScattertokenCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts       // Call options to use throughout this session
}

// ScattertokenTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type ScattertokenTransactorSession struct {
	Contract     *ScattertokenTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts       // Transaction auth options to use throughout this session
}

// ScattertokenRaw is an auto generated low-level Go binding around an Ethereum contract.
type ScattertokenRaw struct {
	Contract *Scattertoken // Generic contract binding to access the raw methods on
}

// ScattertokenCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type ScattertokenCallerRaw struct {
	Contract *ScattertokenCaller // Generic read-only contract binding to access the raw methods on
}

// ScattertokenTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type ScattertokenTransactorRaw struct {
	Contract *ScattertokenTransactor // Generic write-only contract binding to access the raw methods on
}

// NewScattertoken creates a new instance of Scattertoken, bound to a specific deployed contract.
func NewScattertoken(address common.Address, backend bind.ContractBackend) (*Scattertoken, error) {
	contract, err := bindScattertoken(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &Scattertoken{ScattertokenCaller: ScattertokenCaller{contract: contract}, ScattertokenTransactor: ScattertokenTransactor{contract: contract}, ScattertokenFilterer: ScattertokenFilterer{contract: contract}}, nil
}

// NewScattertokenCaller creates a new read-only instance of Scattertoken, bound to a specific deployed contract.
func NewScattertokenCaller(address common.Address, caller bind.ContractCaller) (*ScattertokenCaller, error) {
	contract, err := bindScattertoken(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &ScattertokenCaller{contract: contract}, nil
}

// NewScattertokenTransactor creates a new write-only instance of Scattertoken, bound to a specific deployed contract.
func NewScattertokenTransactor(address common.Address, transactor bind.ContractTransactor) (*ScattertokenTransactor, error) {
	contract, err := bindScattertoken(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &ScattertokenTransactor{contract: contract}, nil
}

// NewScattertokenFilterer creates a new log filterer instance of Scattertoken, bound to a specific deployed contract.
func NewScattertokenFilterer(address common.Address, filterer bind.ContractFilterer) (*ScattertokenFilterer, error) {
	contract, err := bindScattertoken(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &ScattertokenFilterer{contract: contract}, nil
}

// bindScattertoken binds a generic wrapper to an already deployed contract.
func bindScattertoken(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := ScattertokenMetaData.GetAbi()
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, *parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Scattertoken *ScattertokenRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Scattertoken.Contract.ScattertokenCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Scattertoken *ScattertokenRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Scattertoken.Contract.ScattertokenTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Scattertoken *ScattertokenRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Scattertoken.Contract.ScattertokenTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Scattertoken *ScattertokenCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Scattertoken.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Scattertoken *ScattertokenTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Scattertoken.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Scattertoken *ScattertokenTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Scattertoken.Contract.contract.Transact(opts, method, params...)
}

// AddressToStake is a free data retrieval call binding the contract method 0xa1a33f44.
//
// Solidity: function addressToStake(address ) view returns(uint256)
func (_Scattertoken *ScattertokenCaller) AddressToStake(opts *bind.CallOpts, arg0 common.Address) (*big.Int, error) {
	var out []interface{}
	err := _Scattertoken.contract.Call(opts, &out, "addressToStake", arg0)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// AddressToStake is a free data retrieval call binding the contract method 0xa1a33f44.
//
// Solidity: function addressToStake(address ) view returns(uint256)
func (_Scattertoken *ScattertokenSession) AddressToStake(arg0 common.Address) (*big.Int, error) {
	return _Scattertoken.Contract.AddressToStake(&_Scattertoken.CallOpts, arg0)
}

// AddressToStake is a free data retrieval call binding the contract method 0xa1a33f44.
//
// Solidity: function addressToStake(address ) view returns(uint256)
func (_Scattertoken *ScattertokenCallerSession) AddressToStake(arg0 common.Address) (*big.Int, error) {
	return _Scattertoken.Contract.AddressToStake(&_Scattertoken.CallOpts, arg0)
}

// Allowance is a free data retrieval call binding the contract method 0xdd62ed3e.
//
// Solidity: function allowance(address owner, address spender) view returns(uint256)
func (_Scattertoken *ScattertokenCaller) Allowance(opts *bind.CallOpts, owner common.Address, spender common.Address) (*big.Int, error) {
	var out []interface{}
	err := _Scattertoken.contract.Call(opts, &out, "allowance", owner, spender)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// Allowance is a free data retrieval call binding the contract method 0xdd62ed3e.
//
// Solidity: function allowance(address owner, address spender) view returns(uint256)
func (_Scattertoken *ScattertokenSession) Allowance(owner common.Address, spender common.Address) (*big.Int, error) {
	return _Scattertoken.Contract.Allowance(&_Scattertoken.CallOpts, owner, spender)
}

// Allowance is a free data retrieval call binding the contract method 0xdd62ed3e.
//
// Solidity: function allowance(address owner, address spender) view returns(uint256)
func (_Scattertoken *ScattertokenCallerSession) Allowance(owner common.Address, spender common.Address) (*big.Int, error) {
	return _Scattertoken.Contract.Allowance(&_Scattertoken.CallOpts, owner, spender)
}

// BalanceOf is a free data retrieval call binding the contract method 0x70a08231.
//
// Solidity: function balanceOf(address account) view returns(uint256)
func (_Scattertoken *ScattertokenCaller) BalanceOf(opts *bind.CallOpts, account common.Address) (*big.Int, error) {
	var out []interface{}
	err := _Scattertoken.contract.Call(opts, &out, "balanceOf", account)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// BalanceOf is a free data retrieval call binding the contract method 0x70a08231.
//
// Solidity: function balanceOf(address account) view returns(uint256)
func (_Scattertoken *ScattertokenSession) BalanceOf(account common.Address) (*big.Int, error) {
	return _Scattertoken.Contract.BalanceOf(&_Scattertoken.CallOpts, account)
}

// BalanceOf is a free data retrieval call binding the contract method 0x70a08231.
//
// Solidity: function balanceOf(address account) view returns(uint256)
func (_Scattertoken *ScattertokenCallerSession) BalanceOf(account common.Address) (*big.Int, error) {
	return _Scattertoken.Contract.BalanceOf(&_Scattertoken.CallOpts, account)
}

// CanBecomeChallenger is a free data retrieval call binding the contract method 0x711ac775.
//
// Solidity: function canBecomeChallenger(address account) view returns(bool)
func (_Scattertoken *ScattertokenCaller) CanBecomeChallenger(opts *bind.CallOpts, account common.Address) (bool, error) {
	var out []interface{}
	err := _Scattertoken.contract.Call(opts, &out, "canBecomeChallenger", account)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// CanBecomeChallenger is a free data retrieval call binding the contract method 0x711ac775.
//
// Solidity: function canBecomeChallenger(address account) view returns(bool)
func (_Scattertoken *ScattertokenSession) CanBecomeChallenger(account common.Address) (bool, error) {
	return _Scattertoken.Contract.CanBecomeChallenger(&_Scattertoken.CallOpts, account)
}

// CanBecomeChallenger is a free data retrieval call binding the contract method 0x711ac775.
//
// Solidity: function canBecomeChallenger(address account) view returns(bool)
func (_Scattertoken *ScattertokenCallerSession) CanBecomeChallenger(account common.Address) (bool, error) {
	return _Scattertoken.Contract.CanBecomeChallenger(&_Scattertoken.CallOpts, account)
}

// CanBecomeValidator is a free data retrieval call binding the contract method 0x9dacf42d.
//
// Solidity: function canBecomeValidator(address account) view returns(bool)
func (_Scattertoken *ScattertokenCaller) CanBecomeValidator(opts *bind.CallOpts, account common.Address) (bool, error) {
	var out []interface{}
	err := _Scattertoken.contract.Call(opts, &out, "canBecomeValidator", account)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// CanBecomeValidator is a free data retrieval call binding the contract method 0x9dacf42d.
//
// Solidity: function canBecomeValidator(address account) view returns(bool)
func (_Scattertoken *ScattertokenSession) CanBecomeValidator(account common.Address) (bool, error) {
	return _Scattertoken.Contract.CanBecomeValidator(&_Scattertoken.CallOpts, account)
}

// CanBecomeValidator is a free data retrieval call binding the contract method 0x9dacf42d.
//
// Solidity: function canBecomeValidator(address account) view returns(bool)
func (_Scattertoken *ScattertokenCallerSession) CanBecomeValidator(account common.Address) (bool, error) {
	return _Scattertoken.Contract.CanBecomeValidator(&_Scattertoken.CallOpts, account)
}

// Cap is a free data retrieval call binding the contract method 0x355274ea.
//
// Solidity: function cap() view returns(uint256)
func (_Scattertoken *ScattertokenCaller) Cap(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Scattertoken.contract.Call(opts, &out, "cap")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// Cap is a free data retrieval call binding the contract method 0x355274ea.
//
// Solidity: function cap() view returns(uint256)
func (_Scattertoken *ScattertokenSession) Cap() (*big.Int, error) {
	return _Scattertoken.Contract.Cap(&_Scattertoken.CallOpts)
}

// Cap is a free data retrieval call binding the contract method 0x355274ea.
//
// Solidity: function cap() view returns(uint256)
func (_Scattertoken *ScattertokenCallerSession) Cap() (*big.Int, error) {
	return _Scattertoken.Contract.Cap(&_Scattertoken.CallOpts)
}

// Decimals is a free data retrieval call binding the contract method 0x313ce567.
//
// Solidity: function decimals() view returns(uint8)
func (_Scattertoken *ScattertokenCaller) Decimals(opts *bind.CallOpts) (uint8, error) {
	var out []interface{}
	err := _Scattertoken.contract.Call(opts, &out, "decimals")

	if err != nil {
		return *new(uint8), err
	}

	out0 := *abi.ConvertType(out[0], new(uint8)).(*uint8)

	return out0, err

}

// Decimals is a free data retrieval call binding the contract method 0x313ce567.
//
// Solidity: function decimals() view returns(uint8)
func (_Scattertoken *ScattertokenSession) Decimals() (uint8, error) {
	return _Scattertoken.Contract.Decimals(&_Scattertoken.CallOpts)
}

// Decimals is a free data retrieval call binding the contract method 0x313ce567.
//
// Solidity: function decimals() view returns(uint8)
func (_Scattertoken *ScattertokenCallerSession) Decimals() (uint8, error) {
	return _Scattertoken.Contract.Decimals(&_Scattertoken.CallOpts)
}

// GetAccountStake is a free data retrieval call binding the contract method 0x5e30913f.
//
// Solidity: function getAccountStake(address account) view returns(uint256)
func (_Scattertoken *ScattertokenCaller) GetAccountStake(opts *bind.CallOpts, account common.Address) (*big.Int, error) {
	var out []interface{}
	err := _Scattertoken.contract.Call(opts, &out, "getAccountStake", account)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetAccountStake is a free data retrieval call binding the contract method 0x5e30913f.
//
// Solidity: function getAccountStake(address account) view returns(uint256)
func (_Scattertoken *ScattertokenSession) GetAccountStake(account common.Address) (*big.Int, error) {
	return _Scattertoken.Contract.GetAccountStake(&_Scattertoken.CallOpts, account)
}

// GetAccountStake is a free data retrieval call binding the contract method 0x5e30913f.
//
// Solidity: function getAccountStake(address account) view returns(uint256)
func (_Scattertoken *ScattertokenCallerSession) GetAccountStake(account common.Address) (*big.Int, error) {
	return _Scattertoken.Contract.GetAccountStake(&_Scattertoken.CallOpts, account)
}

// GetLotteryPool is a free data retrieval call binding the contract method 0xbd8d86b7.
//
// Solidity: function getLotteryPool() view returns(uint256)
func (_Scattertoken *ScattertokenCaller) GetLotteryPool(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Scattertoken.contract.Call(opts, &out, "getLotteryPool")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetLotteryPool is a free data retrieval call binding the contract method 0xbd8d86b7.
//
// Solidity: function getLotteryPool() view returns(uint256)
func (_Scattertoken *ScattertokenSession) GetLotteryPool() (*big.Int, error) {
	return _Scattertoken.Contract.GetLotteryPool(&_Scattertoken.CallOpts)
}

// GetLotteryPool is a free data retrieval call binding the contract method 0xbd8d86b7.
//
// Solidity: function getLotteryPool() view returns(uint256)
func (_Scattertoken *ScattertokenCallerSession) GetLotteryPool() (*big.Int, error) {
	return _Scattertoken.Contract.GetLotteryPool(&_Scattertoken.CallOpts)
}

// GetLotteryPoolExternal is a free data retrieval call binding the contract method 0x4ee2b2ee.
//
// Solidity: function getLotteryPoolExternal() view returns(uint256)
func (_Scattertoken *ScattertokenCaller) GetLotteryPoolExternal(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Scattertoken.contract.Call(opts, &out, "getLotteryPoolExternal")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetLotteryPoolExternal is a free data retrieval call binding the contract method 0x4ee2b2ee.
//
// Solidity: function getLotteryPoolExternal() view returns(uint256)
func (_Scattertoken *ScattertokenSession) GetLotteryPoolExternal() (*big.Int, error) {
	return _Scattertoken.Contract.GetLotteryPoolExternal(&_Scattertoken.CallOpts)
}

// GetLotteryPoolExternal is a free data retrieval call binding the contract method 0x4ee2b2ee.
//
// Solidity: function getLotteryPoolExternal() view returns(uint256)
func (_Scattertoken *ScattertokenCallerSession) GetLotteryPoolExternal() (*big.Int, error) {
	return _Scattertoken.Contract.GetLotteryPoolExternal(&_Scattertoken.CallOpts)
}

// GetOwnStake is a free data retrieval call binding the contract method 0xfb7ba582.
//
// Solidity: function getOwnStake() view returns(uint256)
func (_Scattertoken *ScattertokenCaller) GetOwnStake(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Scattertoken.contract.Call(opts, &out, "getOwnStake")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetOwnStake is a free data retrieval call binding the contract method 0xfb7ba582.
//
// Solidity: function getOwnStake() view returns(uint256)
func (_Scattertoken *ScattertokenSession) GetOwnStake() (*big.Int, error) {
	return _Scattertoken.Contract.GetOwnStake(&_Scattertoken.CallOpts)
}

// GetOwnStake is a free data retrieval call binding the contract method 0xfb7ba582.
//
// Solidity: function getOwnStake() view returns(uint256)
func (_Scattertoken *ScattertokenCallerSession) GetOwnStake() (*big.Int, error) {
	return _Scattertoken.Contract.GetOwnStake(&_Scattertoken.CallOpts)
}

// Name is a free data retrieval call binding the contract method 0x06fdde03.
//
// Solidity: function name() view returns(string)
func (_Scattertoken *ScattertokenCaller) Name(opts *bind.CallOpts) (string, error) {
	var out []interface{}
	err := _Scattertoken.contract.Call(opts, &out, "name")

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// Name is a free data retrieval call binding the contract method 0x06fdde03.
//
// Solidity: function name() view returns(string)
func (_Scattertoken *ScattertokenSession) Name() (string, error) {
	return _Scattertoken.Contract.Name(&_Scattertoken.CallOpts)
}

// Name is a free data retrieval call binding the contract method 0x06fdde03.
//
// Solidity: function name() view returns(string)
func (_Scattertoken *ScattertokenCallerSession) Name() (string, error) {
	return _Scattertoken.Contract.Name(&_Scattertoken.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_Scattertoken *ScattertokenCaller) Owner(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Scattertoken.contract.Call(opts, &out, "owner")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_Scattertoken *ScattertokenSession) Owner() (common.Address, error) {
	return _Scattertoken.Contract.Owner(&_Scattertoken.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_Scattertoken *ScattertokenCallerSession) Owner() (common.Address, error) {
	return _Scattertoken.Contract.Owner(&_Scattertoken.CallOpts)
}

// RequiredModelChallengerStake is a free data retrieval call binding the contract method 0x379a7e8e.
//
// Solidity: function requiredModelChallengerStake() view returns(uint256)
func (_Scattertoken *ScattertokenCaller) RequiredModelChallengerStake(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Scattertoken.contract.Call(opts, &out, "requiredModelChallengerStake")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// RequiredModelChallengerStake is a free data retrieval call binding the contract method 0x379a7e8e.
//
// Solidity: function requiredModelChallengerStake() view returns(uint256)
func (_Scattertoken *ScattertokenSession) RequiredModelChallengerStake() (*big.Int, error) {
	return _Scattertoken.Contract.RequiredModelChallengerStake(&_Scattertoken.CallOpts)
}

// RequiredModelChallengerStake is a free data retrieval call binding the contract method 0x379a7e8e.
//
// Solidity: function requiredModelChallengerStake() view returns(uint256)
func (_Scattertoken *ScattertokenCallerSession) RequiredModelChallengerStake() (*big.Int, error) {
	return _Scattertoken.Contract.RequiredModelChallengerStake(&_Scattertoken.CallOpts)
}

// RequiredModelValidatorStake is a free data retrieval call binding the contract method 0x36cb7f80.
//
// Solidity: function requiredModelValidatorStake() view returns(uint256)
func (_Scattertoken *ScattertokenCaller) RequiredModelValidatorStake(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Scattertoken.contract.Call(opts, &out, "requiredModelValidatorStake")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// RequiredModelValidatorStake is a free data retrieval call binding the contract method 0x36cb7f80.
//
// Solidity: function requiredModelValidatorStake() view returns(uint256)
func (_Scattertoken *ScattertokenSession) RequiredModelValidatorStake() (*big.Int, error) {
	return _Scattertoken.Contract.RequiredModelValidatorStake(&_Scattertoken.CallOpts)
}

// RequiredModelValidatorStake is a free data retrieval call binding the contract method 0x36cb7f80.
//
// Solidity: function requiredModelValidatorStake() view returns(uint256)
func (_Scattertoken *ScattertokenCallerSession) RequiredModelValidatorStake() (*big.Int, error) {
	return _Scattertoken.Contract.RequiredModelValidatorStake(&_Scattertoken.CallOpts)
}

// Symbol is a free data retrieval call binding the contract method 0x95d89b41.
//
// Solidity: function symbol() view returns(string)
func (_Scattertoken *ScattertokenCaller) Symbol(opts *bind.CallOpts) (string, error) {
	var out []interface{}
	err := _Scattertoken.contract.Call(opts, &out, "symbol")

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// Symbol is a free data retrieval call binding the contract method 0x95d89b41.
//
// Solidity: function symbol() view returns(string)
func (_Scattertoken *ScattertokenSession) Symbol() (string, error) {
	return _Scattertoken.Contract.Symbol(&_Scattertoken.CallOpts)
}

// Symbol is a free data retrieval call binding the contract method 0x95d89b41.
//
// Solidity: function symbol() view returns(string)
func (_Scattertoken *ScattertokenCallerSession) Symbol() (string, error) {
	return _Scattertoken.Contract.Symbol(&_Scattertoken.CallOpts)
}

// TotalSupply is a free data retrieval call binding the contract method 0x18160ddd.
//
// Solidity: function totalSupply() view returns(uint256)
func (_Scattertoken *ScattertokenCaller) TotalSupply(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Scattertoken.contract.Call(opts, &out, "totalSupply")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// TotalSupply is a free data retrieval call binding the contract method 0x18160ddd.
//
// Solidity: function totalSupply() view returns(uint256)
func (_Scattertoken *ScattertokenSession) TotalSupply() (*big.Int, error) {
	return _Scattertoken.Contract.TotalSupply(&_Scattertoken.CallOpts)
}

// TotalSupply is a free data retrieval call binding the contract method 0x18160ddd.
//
// Solidity: function totalSupply() view returns(uint256)
func (_Scattertoken *ScattertokenCallerSession) TotalSupply() (*big.Int, error) {
	return _Scattertoken.Contract.TotalSupply(&_Scattertoken.CallOpts)
}

// Approve is a paid mutator transaction binding the contract method 0x095ea7b3.
//
// Solidity: function approve(address spender, uint256 amount) returns(bool)
func (_Scattertoken *ScattertokenTransactor) Approve(opts *bind.TransactOpts, spender common.Address, amount *big.Int) (*types.Transaction, error) {
	return _Scattertoken.contract.Transact(opts, "approve", spender, amount)
}

// Approve is a paid mutator transaction binding the contract method 0x095ea7b3.
//
// Solidity: function approve(address spender, uint256 amount) returns(bool)
func (_Scattertoken *ScattertokenSession) Approve(spender common.Address, amount *big.Int) (*types.Transaction, error) {
	return _Scattertoken.Contract.Approve(&_Scattertoken.TransactOpts, spender, amount)
}

// Approve is a paid mutator transaction binding the contract method 0x095ea7b3.
//
// Solidity: function approve(address spender, uint256 amount) returns(bool)
func (_Scattertoken *ScattertokenTransactorSession) Approve(spender common.Address, amount *big.Int) (*types.Transaction, error) {
	return _Scattertoken.Contract.Approve(&_Scattertoken.TransactOpts, spender, amount)
}

// Burn is a paid mutator transaction binding the contract method 0x42966c68.
//
// Solidity: function burn(uint256 amount) returns()
func (_Scattertoken *ScattertokenTransactor) Burn(opts *bind.TransactOpts, amount *big.Int) (*types.Transaction, error) {
	return _Scattertoken.contract.Transact(opts, "burn", amount)
}

// Burn is a paid mutator transaction binding the contract method 0x42966c68.
//
// Solidity: function burn(uint256 amount) returns()
func (_Scattertoken *ScattertokenSession) Burn(amount *big.Int) (*types.Transaction, error) {
	return _Scattertoken.Contract.Burn(&_Scattertoken.TransactOpts, amount)
}

// Burn is a paid mutator transaction binding the contract method 0x42966c68.
//
// Solidity: function burn(uint256 amount) returns()
func (_Scattertoken *ScattertokenTransactorSession) Burn(amount *big.Int) (*types.Transaction, error) {
	return _Scattertoken.Contract.Burn(&_Scattertoken.TransactOpts, amount)
}

// BurnFrom is a paid mutator transaction binding the contract method 0x79cc6790.
//
// Solidity: function burnFrom(address account, uint256 amount) returns()
func (_Scattertoken *ScattertokenTransactor) BurnFrom(opts *bind.TransactOpts, account common.Address, amount *big.Int) (*types.Transaction, error) {
	return _Scattertoken.contract.Transact(opts, "burnFrom", account, amount)
}

// BurnFrom is a paid mutator transaction binding the contract method 0x79cc6790.
//
// Solidity: function burnFrom(address account, uint256 amount) returns()
func (_Scattertoken *ScattertokenSession) BurnFrom(account common.Address, amount *big.Int) (*types.Transaction, error) {
	return _Scattertoken.Contract.BurnFrom(&_Scattertoken.TransactOpts, account, amount)
}

// BurnFrom is a paid mutator transaction binding the contract method 0x79cc6790.
//
// Solidity: function burnFrom(address account, uint256 amount) returns()
func (_Scattertoken *ScattertokenTransactorSession) BurnFrom(account common.Address, amount *big.Int) (*types.Transaction, error) {
	return _Scattertoken.Contract.BurnFrom(&_Scattertoken.TransactOpts, account, amount)
}

// DecreaseAllowance is a paid mutator transaction binding the contract method 0xa457c2d7.
//
// Solidity: function decreaseAllowance(address spender, uint256 subtractedValue) returns(bool)
func (_Scattertoken *ScattertokenTransactor) DecreaseAllowance(opts *bind.TransactOpts, spender common.Address, subtractedValue *big.Int) (*types.Transaction, error) {
	return _Scattertoken.contract.Transact(opts, "decreaseAllowance", spender, subtractedValue)
}

// DecreaseAllowance is a paid mutator transaction binding the contract method 0xa457c2d7.
//
// Solidity: function decreaseAllowance(address spender, uint256 subtractedValue) returns(bool)
func (_Scattertoken *ScattertokenSession) DecreaseAllowance(spender common.Address, subtractedValue *big.Int) (*types.Transaction, error) {
	return _Scattertoken.Contract.DecreaseAllowance(&_Scattertoken.TransactOpts, spender, subtractedValue)
}

// DecreaseAllowance is a paid mutator transaction binding the contract method 0xa457c2d7.
//
// Solidity: function decreaseAllowance(address spender, uint256 subtractedValue) returns(bool)
func (_Scattertoken *ScattertokenTransactorSession) DecreaseAllowance(spender common.Address, subtractedValue *big.Int) (*types.Transaction, error) {
	return _Scattertoken.Contract.DecreaseAllowance(&_Scattertoken.TransactOpts, spender, subtractedValue)
}

// DonateToLottery is a paid mutator transaction binding the contract method 0x824205d1.
//
// Solidity: function donateToLottery(address requestorAddress, string topicName) returns()
func (_Scattertoken *ScattertokenTransactor) DonateToLottery(opts *bind.TransactOpts, requestorAddress common.Address, topicName string) (*types.Transaction, error) {
	return _Scattertoken.contract.Transact(opts, "donateToLottery", requestorAddress, topicName)
}

// DonateToLottery is a paid mutator transaction binding the contract method 0x824205d1.
//
// Solidity: function donateToLottery(address requestorAddress, string topicName) returns()
func (_Scattertoken *ScattertokenSession) DonateToLottery(requestorAddress common.Address, topicName string) (*types.Transaction, error) {
	return _Scattertoken.Contract.DonateToLottery(&_Scattertoken.TransactOpts, requestorAddress, topicName)
}

// DonateToLottery is a paid mutator transaction binding the contract method 0x824205d1.
//
// Solidity: function donateToLottery(address requestorAddress, string topicName) returns()
func (_Scattertoken *ScattertokenTransactorSession) DonateToLottery(requestorAddress common.Address, topicName string) (*types.Transaction, error) {
	return _Scattertoken.Contract.DonateToLottery(&_Scattertoken.TransactOpts, requestorAddress, topicName)
}

// IncreaseAllowance is a paid mutator transaction binding the contract method 0x39509351.
//
// Solidity: function increaseAllowance(address spender, uint256 addedValue) returns(bool)
func (_Scattertoken *ScattertokenTransactor) IncreaseAllowance(opts *bind.TransactOpts, spender common.Address, addedValue *big.Int) (*types.Transaction, error) {
	return _Scattertoken.contract.Transact(opts, "increaseAllowance", spender, addedValue)
}

// IncreaseAllowance is a paid mutator transaction binding the contract method 0x39509351.
//
// Solidity: function increaseAllowance(address spender, uint256 addedValue) returns(bool)
func (_Scattertoken *ScattertokenSession) IncreaseAllowance(spender common.Address, addedValue *big.Int) (*types.Transaction, error) {
	return _Scattertoken.Contract.IncreaseAllowance(&_Scattertoken.TransactOpts, spender, addedValue)
}

// IncreaseAllowance is a paid mutator transaction binding the contract method 0x39509351.
//
// Solidity: function increaseAllowance(address spender, uint256 addedValue) returns(bool)
func (_Scattertoken *ScattertokenTransactorSession) IncreaseAllowance(spender common.Address, addedValue *big.Int) (*types.Transaction, error) {
	return _Scattertoken.Contract.IncreaseAllowance(&_Scattertoken.TransactOpts, spender, addedValue)
}

// PunishRogueTrainers is a paid mutator transaction binding the contract method 0xf9d79c68.
//
// Solidity: function punishRogueTrainers(address requestorAddress, string topicName) returns()
func (_Scattertoken *ScattertokenTransactor) PunishRogueTrainers(opts *bind.TransactOpts, requestorAddress common.Address, topicName string) (*types.Transaction, error) {
	return _Scattertoken.contract.Transact(opts, "punishRogueTrainers", requestorAddress, topicName)
}

// PunishRogueTrainers is a paid mutator transaction binding the contract method 0xf9d79c68.
//
// Solidity: function punishRogueTrainers(address requestorAddress, string topicName) returns()
func (_Scattertoken *ScattertokenSession) PunishRogueTrainers(requestorAddress common.Address, topicName string) (*types.Transaction, error) {
	return _Scattertoken.Contract.PunishRogueTrainers(&_Scattertoken.TransactOpts, requestorAddress, topicName)
}

// PunishRogueTrainers is a paid mutator transaction binding the contract method 0xf9d79c68.
//
// Solidity: function punishRogueTrainers(address requestorAddress, string topicName) returns()
func (_Scattertoken *ScattertokenTransactorSession) PunishRogueTrainers(requestorAddress common.Address, topicName string) (*types.Transaction, error) {
	return _Scattertoken.Contract.PunishRogueTrainers(&_Scattertoken.TransactOpts, requestorAddress, topicName)
}

// PunishRogueValidators is a paid mutator transaction binding the contract method 0xda0e3f13.
//
// Solidity: function punishRogueValidators(address requestorAddress, string topicName) returns()
func (_Scattertoken *ScattertokenTransactor) PunishRogueValidators(opts *bind.TransactOpts, requestorAddress common.Address, topicName string) (*types.Transaction, error) {
	return _Scattertoken.contract.Transact(opts, "punishRogueValidators", requestorAddress, topicName)
}

// PunishRogueValidators is a paid mutator transaction binding the contract method 0xda0e3f13.
//
// Solidity: function punishRogueValidators(address requestorAddress, string topicName) returns()
func (_Scattertoken *ScattertokenSession) PunishRogueValidators(requestorAddress common.Address, topicName string) (*types.Transaction, error) {
	return _Scattertoken.Contract.PunishRogueValidators(&_Scattertoken.TransactOpts, requestorAddress, topicName)
}

// PunishRogueValidators is a paid mutator transaction binding the contract method 0xda0e3f13.
//
// Solidity: function punishRogueValidators(address requestorAddress, string topicName) returns()
func (_Scattertoken *ScattertokenTransactorSession) PunishRogueValidators(requestorAddress common.Address, topicName string) (*types.Transaction, error) {
	return _Scattertoken.Contract.PunishRogueValidators(&_Scattertoken.TransactOpts, requestorAddress, topicName)
}

// RemoveStake is a paid mutator transaction binding the contract method 0x939624ab.
//
// Solidity: function removeStake(uint256 amount) returns()
func (_Scattertoken *ScattertokenTransactor) RemoveStake(opts *bind.TransactOpts, amount *big.Int) (*types.Transaction, error) {
	return _Scattertoken.contract.Transact(opts, "removeStake", amount)
}

// RemoveStake is a paid mutator transaction binding the contract method 0x939624ab.
//
// Solidity: function removeStake(uint256 amount) returns()
func (_Scattertoken *ScattertokenSession) RemoveStake(amount *big.Int) (*types.Transaction, error) {
	return _Scattertoken.Contract.RemoveStake(&_Scattertoken.TransactOpts, amount)
}

// RemoveStake is a paid mutator transaction binding the contract method 0x939624ab.
//
// Solidity: function removeStake(uint256 amount) returns()
func (_Scattertoken *ScattertokenTransactorSession) RemoveStake(amount *big.Int) (*types.Transaction, error) {
	return _Scattertoken.Contract.RemoveStake(&_Scattertoken.TransactOpts, amount)
}

// RequestorLockToken is a paid mutator transaction binding the contract method 0x42a0f9bf.
//
// Solidity: function requestorLockToken(address requestorAddress, string topicName, uint256 amount) returns()
func (_Scattertoken *ScattertokenTransactor) RequestorLockToken(opts *bind.TransactOpts, requestorAddress common.Address, topicName string, amount *big.Int) (*types.Transaction, error) {
	return _Scattertoken.contract.Transact(opts, "requestorLockToken", requestorAddress, topicName, amount)
}

// RequestorLockToken is a paid mutator transaction binding the contract method 0x42a0f9bf.
//
// Solidity: function requestorLockToken(address requestorAddress, string topicName, uint256 amount) returns()
func (_Scattertoken *ScattertokenSession) RequestorLockToken(requestorAddress common.Address, topicName string, amount *big.Int) (*types.Transaction, error) {
	return _Scattertoken.Contract.RequestorLockToken(&_Scattertoken.TransactOpts, requestorAddress, topicName, amount)
}

// RequestorLockToken is a paid mutator transaction binding the contract method 0x42a0f9bf.
//
// Solidity: function requestorLockToken(address requestorAddress, string topicName, uint256 amount) returns()
func (_Scattertoken *ScattertokenTransactorSession) RequestorLockToken(requestorAddress common.Address, topicName string, amount *big.Int) (*types.Transaction, error) {
	return _Scattertoken.Contract.RequestorLockToken(&_Scattertoken.TransactOpts, requestorAddress, topicName, amount)
}

// ReturnTokensToRequestor is a paid mutator transaction binding the contract method 0xf5fc44c7.
//
// Solidity: function returnTokensToRequestor(address requestorAddress, string topicName) returns()
func (_Scattertoken *ScattertokenTransactor) ReturnTokensToRequestor(opts *bind.TransactOpts, requestorAddress common.Address, topicName string) (*types.Transaction, error) {
	return _Scattertoken.contract.Transact(opts, "returnTokensToRequestor", requestorAddress, topicName)
}

// ReturnTokensToRequestor is a paid mutator transaction binding the contract method 0xf5fc44c7.
//
// Solidity: function returnTokensToRequestor(address requestorAddress, string topicName) returns()
func (_Scattertoken *ScattertokenSession) ReturnTokensToRequestor(requestorAddress common.Address, topicName string) (*types.Transaction, error) {
	return _Scattertoken.Contract.ReturnTokensToRequestor(&_Scattertoken.TransactOpts, requestorAddress, topicName)
}

// ReturnTokensToRequestor is a paid mutator transaction binding the contract method 0xf5fc44c7.
//
// Solidity: function returnTokensToRequestor(address requestorAddress, string topicName) returns()
func (_Scattertoken *ScattertokenTransactorSession) ReturnTokensToRequestor(requestorAddress common.Address, topicName string) (*types.Transaction, error) {
	return _Scattertoken.Contract.ReturnTokensToRequestor(&_Scattertoken.TransactOpts, requestorAddress, topicName)
}

// ReturnTokensToTrainers is a paid mutator transaction binding the contract method 0x8a1fea68.
//
// Solidity: function returnTokensToTrainers(address requestorAddress, string topicName) returns()
func (_Scattertoken *ScattertokenTransactor) ReturnTokensToTrainers(opts *bind.TransactOpts, requestorAddress common.Address, topicName string) (*types.Transaction, error) {
	return _Scattertoken.contract.Transact(opts, "returnTokensToTrainers", requestorAddress, topicName)
}

// ReturnTokensToTrainers is a paid mutator transaction binding the contract method 0x8a1fea68.
//
// Solidity: function returnTokensToTrainers(address requestorAddress, string topicName) returns()
func (_Scattertoken *ScattertokenSession) ReturnTokensToTrainers(requestorAddress common.Address, topicName string) (*types.Transaction, error) {
	return _Scattertoken.Contract.ReturnTokensToTrainers(&_Scattertoken.TransactOpts, requestorAddress, topicName)
}

// ReturnTokensToTrainers is a paid mutator transaction binding the contract method 0x8a1fea68.
//
// Solidity: function returnTokensToTrainers(address requestorAddress, string topicName) returns()
func (_Scattertoken *ScattertokenTransactorSession) ReturnTokensToTrainers(requestorAddress common.Address, topicName string) (*types.Transaction, error) {
	return _Scattertoken.Contract.ReturnTokensToTrainers(&_Scattertoken.TransactOpts, requestorAddress, topicName)
}

// RewardBenevolentTrainers is a paid mutator transaction binding the contract method 0x968c2000.
//
// Solidity: function rewardBenevolentTrainers(address requestorAddress, string topicName) returns()
func (_Scattertoken *ScattertokenTransactor) RewardBenevolentTrainers(opts *bind.TransactOpts, requestorAddress common.Address, topicName string) (*types.Transaction, error) {
	return _Scattertoken.contract.Transact(opts, "rewardBenevolentTrainers", requestorAddress, topicName)
}

// RewardBenevolentTrainers is a paid mutator transaction binding the contract method 0x968c2000.
//
// Solidity: function rewardBenevolentTrainers(address requestorAddress, string topicName) returns()
func (_Scattertoken *ScattertokenSession) RewardBenevolentTrainers(requestorAddress common.Address, topicName string) (*types.Transaction, error) {
	return _Scattertoken.Contract.RewardBenevolentTrainers(&_Scattertoken.TransactOpts, requestorAddress, topicName)
}

// RewardBenevolentTrainers is a paid mutator transaction binding the contract method 0x968c2000.
//
// Solidity: function rewardBenevolentTrainers(address requestorAddress, string topicName) returns()
func (_Scattertoken *ScattertokenTransactorSession) RewardBenevolentTrainers(requestorAddress common.Address, topicName string) (*types.Transaction, error) {
	return _Scattertoken.Contract.RewardBenevolentTrainers(&_Scattertoken.TransactOpts, requestorAddress, topicName)
}

// RewardBenevolentValidators is a paid mutator transaction binding the contract method 0x2ca23869.
//
// Solidity: function rewardBenevolentValidators(address requestorAddress, string topicName) returns()
func (_Scattertoken *ScattertokenTransactor) RewardBenevolentValidators(opts *bind.TransactOpts, requestorAddress common.Address, topicName string) (*types.Transaction, error) {
	return _Scattertoken.contract.Transact(opts, "rewardBenevolentValidators", requestorAddress, topicName)
}

// RewardBenevolentValidators is a paid mutator transaction binding the contract method 0x2ca23869.
//
// Solidity: function rewardBenevolentValidators(address requestorAddress, string topicName) returns()
func (_Scattertoken *ScattertokenSession) RewardBenevolentValidators(requestorAddress common.Address, topicName string) (*types.Transaction, error) {
	return _Scattertoken.Contract.RewardBenevolentValidators(&_Scattertoken.TransactOpts, requestorAddress, topicName)
}

// RewardBenevolentValidators is a paid mutator transaction binding the contract method 0x2ca23869.
//
// Solidity: function rewardBenevolentValidators(address requestorAddress, string topicName) returns()
func (_Scattertoken *ScattertokenTransactorSession) RewardBenevolentValidators(requestorAddress common.Address, topicName string) (*types.Transaction, error) {
	return _Scattertoken.Contract.RewardBenevolentValidators(&_Scattertoken.TransactOpts, requestorAddress, topicName)
}

// RewardChallengers is a paid mutator transaction binding the contract method 0x17ede4b4.
//
// Solidity: function rewardChallengers(address requestorAddress, string topicName) returns()
func (_Scattertoken *ScattertokenTransactor) RewardChallengers(opts *bind.TransactOpts, requestorAddress common.Address, topicName string) (*types.Transaction, error) {
	return _Scattertoken.contract.Transact(opts, "rewardChallengers", requestorAddress, topicName)
}

// RewardChallengers is a paid mutator transaction binding the contract method 0x17ede4b4.
//
// Solidity: function rewardChallengers(address requestorAddress, string topicName) returns()
func (_Scattertoken *ScattertokenSession) RewardChallengers(requestorAddress common.Address, topicName string) (*types.Transaction, error) {
	return _Scattertoken.Contract.RewardChallengers(&_Scattertoken.TransactOpts, requestorAddress, topicName)
}

// RewardChallengers is a paid mutator transaction binding the contract method 0x17ede4b4.
//
// Solidity: function rewardChallengers(address requestorAddress, string topicName) returns()
func (_Scattertoken *ScattertokenTransactorSession) RewardChallengers(requestorAddress common.Address, topicName string) (*types.Transaction, error) {
	return _Scattertoken.Contract.RewardChallengers(&_Scattertoken.TransactOpts, requestorAddress, topicName)
}

// SetEvaluationJobTokenContract is a paid mutator transaction binding the contract method 0x71f65bd7.
//
// Solidity: function setEvaluationJobTokenContract(address newAddress) returns()
func (_Scattertoken *ScattertokenTransactor) SetEvaluationJobTokenContract(opts *bind.TransactOpts, newAddress common.Address) (*types.Transaction, error) {
	return _Scattertoken.contract.Transact(opts, "setEvaluationJobTokenContract", newAddress)
}

// SetEvaluationJobTokenContract is a paid mutator transaction binding the contract method 0x71f65bd7.
//
// Solidity: function setEvaluationJobTokenContract(address newAddress) returns()
func (_Scattertoken *ScattertokenSession) SetEvaluationJobTokenContract(newAddress common.Address) (*types.Transaction, error) {
	return _Scattertoken.Contract.SetEvaluationJobTokenContract(&_Scattertoken.TransactOpts, newAddress)
}

// SetEvaluationJobTokenContract is a paid mutator transaction binding the contract method 0x71f65bd7.
//
// Solidity: function setEvaluationJobTokenContract(address newAddress) returns()
func (_Scattertoken *ScattertokenTransactorSession) SetEvaluationJobTokenContract(newAddress common.Address) (*types.Transaction, error) {
	return _Scattertoken.Contract.SetEvaluationJobTokenContract(&_Scattertoken.TransactOpts, newAddress)
}

// SetReputationManagerContract is a paid mutator transaction binding the contract method 0x0b15127b.
//
// Solidity: function setReputationManagerContract(address newAddress) returns()
func (_Scattertoken *ScattertokenTransactor) SetReputationManagerContract(opts *bind.TransactOpts, newAddress common.Address) (*types.Transaction, error) {
	return _Scattertoken.contract.Transact(opts, "setReputationManagerContract", newAddress)
}

// SetReputationManagerContract is a paid mutator transaction binding the contract method 0x0b15127b.
//
// Solidity: function setReputationManagerContract(address newAddress) returns()
func (_Scattertoken *ScattertokenSession) SetReputationManagerContract(newAddress common.Address) (*types.Transaction, error) {
	return _Scattertoken.Contract.SetReputationManagerContract(&_Scattertoken.TransactOpts, newAddress)
}

// SetReputationManagerContract is a paid mutator transaction binding the contract method 0x0b15127b.
//
// Solidity: function setReputationManagerContract(address newAddress) returns()
func (_Scattertoken *ScattertokenTransactorSession) SetReputationManagerContract(newAddress common.Address) (*types.Transaction, error) {
	return _Scattertoken.Contract.SetReputationManagerContract(&_Scattertoken.TransactOpts, newAddress)
}

// SetScatterProtocolAddress is a paid mutator transaction binding the contract method 0xbea55db9.
//
// Solidity: function setScatterProtocolAddress(address newAddress) returns()
func (_Scattertoken *ScattertokenTransactor) SetScatterProtocolAddress(opts *bind.TransactOpts, newAddress common.Address) (*types.Transaction, error) {
	return _Scattertoken.contract.Transact(opts, "setScatterProtocolAddress", newAddress)
}

// SetScatterProtocolAddress is a paid mutator transaction binding the contract method 0xbea55db9.
//
// Solidity: function setScatterProtocolAddress(address newAddress) returns()
func (_Scattertoken *ScattertokenSession) SetScatterProtocolAddress(newAddress common.Address) (*types.Transaction, error) {
	return _Scattertoken.Contract.SetScatterProtocolAddress(&_Scattertoken.TransactOpts, newAddress)
}

// SetScatterProtocolAddress is a paid mutator transaction binding the contract method 0xbea55db9.
//
// Solidity: function setScatterProtocolAddress(address newAddress) returns()
func (_Scattertoken *ScattertokenTransactorSession) SetScatterProtocolAddress(newAddress common.Address) (*types.Transaction, error) {
	return _Scattertoken.Contract.SetScatterProtocolAddress(&_Scattertoken.TransactOpts, newAddress)
}

// SetVoteManagerContract is a paid mutator transaction binding the contract method 0x42d098e5.
//
// Solidity: function setVoteManagerContract(address newAddress) returns()
func (_Scattertoken *ScattertokenTransactor) SetVoteManagerContract(opts *bind.TransactOpts, newAddress common.Address) (*types.Transaction, error) {
	return _Scattertoken.contract.Transact(opts, "setVoteManagerContract", newAddress)
}

// SetVoteManagerContract is a paid mutator transaction binding the contract method 0x42d098e5.
//
// Solidity: function setVoteManagerContract(address newAddress) returns()
func (_Scattertoken *ScattertokenSession) SetVoteManagerContract(newAddress common.Address) (*types.Transaction, error) {
	return _Scattertoken.Contract.SetVoteManagerContract(&_Scattertoken.TransactOpts, newAddress)
}

// SetVoteManagerContract is a paid mutator transaction binding the contract method 0x42d098e5.
//
// Solidity: function setVoteManagerContract(address newAddress) returns()
func (_Scattertoken *ScattertokenTransactorSession) SetVoteManagerContract(newAddress common.Address) (*types.Transaction, error) {
	return _Scattertoken.Contract.SetVoteManagerContract(&_Scattertoken.TransactOpts, newAddress)
}

// StakeToken is a paid mutator transaction binding the contract method 0xcda6b847.
//
// Solidity: function stakeToken(uint256 amount) returns()
func (_Scattertoken *ScattertokenTransactor) StakeToken(opts *bind.TransactOpts, amount *big.Int) (*types.Transaction, error) {
	return _Scattertoken.contract.Transact(opts, "stakeToken", amount)
}

// StakeToken is a paid mutator transaction binding the contract method 0xcda6b847.
//
// Solidity: function stakeToken(uint256 amount) returns()
func (_Scattertoken *ScattertokenSession) StakeToken(amount *big.Int) (*types.Transaction, error) {
	return _Scattertoken.Contract.StakeToken(&_Scattertoken.TransactOpts, amount)
}

// StakeToken is a paid mutator transaction binding the contract method 0xcda6b847.
//
// Solidity: function stakeToken(uint256 amount) returns()
func (_Scattertoken *ScattertokenTransactorSession) StakeToken(amount *big.Int) (*types.Transaction, error) {
	return _Scattertoken.Contract.StakeToken(&_Scattertoken.TransactOpts, amount)
}

// TrainerLockToken is a paid mutator transaction binding the contract method 0xccd712d5.
//
// Solidity: function trainerLockToken(address trainerAddress, address requestorAddress, string topicName, uint256 amount) returns()
func (_Scattertoken *ScattertokenTransactor) TrainerLockToken(opts *bind.TransactOpts, trainerAddress common.Address, requestorAddress common.Address, topicName string, amount *big.Int) (*types.Transaction, error) {
	return _Scattertoken.contract.Transact(opts, "trainerLockToken", trainerAddress, requestorAddress, topicName, amount)
}

// TrainerLockToken is a paid mutator transaction binding the contract method 0xccd712d5.
//
// Solidity: function trainerLockToken(address trainerAddress, address requestorAddress, string topicName, uint256 amount) returns()
func (_Scattertoken *ScattertokenSession) TrainerLockToken(trainerAddress common.Address, requestorAddress common.Address, topicName string, amount *big.Int) (*types.Transaction, error) {
	return _Scattertoken.Contract.TrainerLockToken(&_Scattertoken.TransactOpts, trainerAddress, requestorAddress, topicName, amount)
}

// TrainerLockToken is a paid mutator transaction binding the contract method 0xccd712d5.
//
// Solidity: function trainerLockToken(address trainerAddress, address requestorAddress, string topicName, uint256 amount) returns()
func (_Scattertoken *ScattertokenTransactorSession) TrainerLockToken(trainerAddress common.Address, requestorAddress common.Address, topicName string, amount *big.Int) (*types.Transaction, error) {
	return _Scattertoken.Contract.TrainerLockToken(&_Scattertoken.TransactOpts, trainerAddress, requestorAddress, topicName, amount)
}

// Transfer is a paid mutator transaction binding the contract method 0xa9059cbb.
//
// Solidity: function transfer(address to, uint256 amount) returns(bool)
func (_Scattertoken *ScattertokenTransactor) Transfer(opts *bind.TransactOpts, to common.Address, amount *big.Int) (*types.Transaction, error) {
	return _Scattertoken.contract.Transact(opts, "transfer", to, amount)
}

// Transfer is a paid mutator transaction binding the contract method 0xa9059cbb.
//
// Solidity: function transfer(address to, uint256 amount) returns(bool)
func (_Scattertoken *ScattertokenSession) Transfer(to common.Address, amount *big.Int) (*types.Transaction, error) {
	return _Scattertoken.Contract.Transfer(&_Scattertoken.TransactOpts, to, amount)
}

// Transfer is a paid mutator transaction binding the contract method 0xa9059cbb.
//
// Solidity: function transfer(address to, uint256 amount) returns(bool)
func (_Scattertoken *ScattertokenTransactorSession) Transfer(to common.Address, amount *big.Int) (*types.Transaction, error) {
	return _Scattertoken.Contract.Transfer(&_Scattertoken.TransactOpts, to, amount)
}

// TransferFrom is a paid mutator transaction binding the contract method 0x23b872dd.
//
// Solidity: function transferFrom(address from, address to, uint256 amount) returns(bool)
func (_Scattertoken *ScattertokenTransactor) TransferFrom(opts *bind.TransactOpts, from common.Address, to common.Address, amount *big.Int) (*types.Transaction, error) {
	return _Scattertoken.contract.Transact(opts, "transferFrom", from, to, amount)
}

// TransferFrom is a paid mutator transaction binding the contract method 0x23b872dd.
//
// Solidity: function transferFrom(address from, address to, uint256 amount) returns(bool)
func (_Scattertoken *ScattertokenSession) TransferFrom(from common.Address, to common.Address, amount *big.Int) (*types.Transaction, error) {
	return _Scattertoken.Contract.TransferFrom(&_Scattertoken.TransactOpts, from, to, amount)
}

// TransferFrom is a paid mutator transaction binding the contract method 0x23b872dd.
//
// Solidity: function transferFrom(address from, address to, uint256 amount) returns(bool)
func (_Scattertoken *ScattertokenTransactorSession) TransferFrom(from common.Address, to common.Address, amount *big.Int) (*types.Transaction, error) {
	return _Scattertoken.Contract.TransferFrom(&_Scattertoken.TransactOpts, from, to, amount)
}

// ScattertokenApprovalIterator is returned from FilterApproval and is used to iterate over the raw logs and unpacked data for Approval events raised by the Scattertoken contract.
type ScattertokenApprovalIterator struct {
	Event *ScattertokenApproval // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ScattertokenApprovalIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ScattertokenApproval)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ScattertokenApproval)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ScattertokenApprovalIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ScattertokenApprovalIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ScattertokenApproval represents a Approval event raised by the Scattertoken contract.
type ScattertokenApproval struct {
	Owner   common.Address
	Spender common.Address
	Value   *big.Int
	Raw     types.Log // Blockchain specific contextual infos
}

// FilterApproval is a free log retrieval operation binding the contract event 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925.
//
// Solidity: event Approval(address indexed owner, address indexed spender, uint256 value)
func (_Scattertoken *ScattertokenFilterer) FilterApproval(opts *bind.FilterOpts, owner []common.Address, spender []common.Address) (*ScattertokenApprovalIterator, error) {

	var ownerRule []interface{}
	for _, ownerItem := range owner {
		ownerRule = append(ownerRule, ownerItem)
	}
	var spenderRule []interface{}
	for _, spenderItem := range spender {
		spenderRule = append(spenderRule, spenderItem)
	}

	logs, sub, err := _Scattertoken.contract.FilterLogs(opts, "Approval", ownerRule, spenderRule)
	if err != nil {
		return nil, err
	}
	return &ScattertokenApprovalIterator{contract: _Scattertoken.contract, event: "Approval", logs: logs, sub: sub}, nil
}

// WatchApproval is a free log subscription operation binding the contract event 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925.
//
// Solidity: event Approval(address indexed owner, address indexed spender, uint256 value)
func (_Scattertoken *ScattertokenFilterer) WatchApproval(opts *bind.WatchOpts, sink chan<- *ScattertokenApproval, owner []common.Address, spender []common.Address) (event.Subscription, error) {

	var ownerRule []interface{}
	for _, ownerItem := range owner {
		ownerRule = append(ownerRule, ownerItem)
	}
	var spenderRule []interface{}
	for _, spenderItem := range spender {
		spenderRule = append(spenderRule, spenderItem)
	}

	logs, sub, err := _Scattertoken.contract.WatchLogs(opts, "Approval", ownerRule, spenderRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ScattertokenApproval)
				if err := _Scattertoken.contract.UnpackLog(event, "Approval", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseApproval is a log parse operation binding the contract event 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925.
//
// Solidity: event Approval(address indexed owner, address indexed spender, uint256 value)
func (_Scattertoken *ScattertokenFilterer) ParseApproval(log types.Log) (*ScattertokenApproval, error) {
	event := new(ScattertokenApproval)
	if err := _Scattertoken.contract.UnpackLog(event, "Approval", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ScattertokenTokensStakedIterator is returned from FilterTokensStaked and is used to iterate over the raw logs and unpacked data for TokensStaked events raised by the Scattertoken contract.
type ScattertokenTokensStakedIterator struct {
	Event *ScattertokenTokensStaked // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ScattertokenTokensStakedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ScattertokenTokensStaked)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ScattertokenTokensStaked)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ScattertokenTokensStakedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ScattertokenTokensStakedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ScattertokenTokensStaked represents a TokensStaked event raised by the Scattertoken contract.
type ScattertokenTokensStaked struct {
	From   common.Address
	Amount *big.Int
	Raw    types.Log // Blockchain specific contextual infos
}

// FilterTokensStaked is a free log retrieval operation binding the contract event 0xb539ca1e5c8d398ddf1c41c30166f33404941683be4683319b57669a93dad4ef.
//
// Solidity: event TokensStaked(address from, uint256 amount)
func (_Scattertoken *ScattertokenFilterer) FilterTokensStaked(opts *bind.FilterOpts) (*ScattertokenTokensStakedIterator, error) {

	logs, sub, err := _Scattertoken.contract.FilterLogs(opts, "TokensStaked")
	if err != nil {
		return nil, err
	}
	return &ScattertokenTokensStakedIterator{contract: _Scattertoken.contract, event: "TokensStaked", logs: logs, sub: sub}, nil
}

// WatchTokensStaked is a free log subscription operation binding the contract event 0xb539ca1e5c8d398ddf1c41c30166f33404941683be4683319b57669a93dad4ef.
//
// Solidity: event TokensStaked(address from, uint256 amount)
func (_Scattertoken *ScattertokenFilterer) WatchTokensStaked(opts *bind.WatchOpts, sink chan<- *ScattertokenTokensStaked) (event.Subscription, error) {

	logs, sub, err := _Scattertoken.contract.WatchLogs(opts, "TokensStaked")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ScattertokenTokensStaked)
				if err := _Scattertoken.contract.UnpackLog(event, "TokensStaked", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseTokensStaked is a log parse operation binding the contract event 0xb539ca1e5c8d398ddf1c41c30166f33404941683be4683319b57669a93dad4ef.
//
// Solidity: event TokensStaked(address from, uint256 amount)
func (_Scattertoken *ScattertokenFilterer) ParseTokensStaked(log types.Log) (*ScattertokenTokensStaked, error) {
	event := new(ScattertokenTokensStaked)
	if err := _Scattertoken.contract.UnpackLog(event, "TokensStaked", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ScattertokenTokensUnstakedIterator is returned from FilterTokensUnstaked and is used to iterate over the raw logs and unpacked data for TokensUnstaked events raised by the Scattertoken contract.
type ScattertokenTokensUnstakedIterator struct {
	Event *ScattertokenTokensUnstaked // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ScattertokenTokensUnstakedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ScattertokenTokensUnstaked)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ScattertokenTokensUnstaked)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ScattertokenTokensUnstakedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ScattertokenTokensUnstakedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ScattertokenTokensUnstaked represents a TokensUnstaked event raised by the Scattertoken contract.
type ScattertokenTokensUnstaked struct {
	To     common.Address
	Amount *big.Int
	Raw    types.Log // Blockchain specific contextual infos
}

// FilterTokensUnstaked is a free log retrieval operation binding the contract event 0x9845e367b683334e5c0b12d7b81721ac518e649376fa65e3d68324e8f34f2679.
//
// Solidity: event TokensUnstaked(address to, uint256 amount)
func (_Scattertoken *ScattertokenFilterer) FilterTokensUnstaked(opts *bind.FilterOpts) (*ScattertokenTokensUnstakedIterator, error) {

	logs, sub, err := _Scattertoken.contract.FilterLogs(opts, "TokensUnstaked")
	if err != nil {
		return nil, err
	}
	return &ScattertokenTokensUnstakedIterator{contract: _Scattertoken.contract, event: "TokensUnstaked", logs: logs, sub: sub}, nil
}

// WatchTokensUnstaked is a free log subscription operation binding the contract event 0x9845e367b683334e5c0b12d7b81721ac518e649376fa65e3d68324e8f34f2679.
//
// Solidity: event TokensUnstaked(address to, uint256 amount)
func (_Scattertoken *ScattertokenFilterer) WatchTokensUnstaked(opts *bind.WatchOpts, sink chan<- *ScattertokenTokensUnstaked) (event.Subscription, error) {

	logs, sub, err := _Scattertoken.contract.WatchLogs(opts, "TokensUnstaked")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ScattertokenTokensUnstaked)
				if err := _Scattertoken.contract.UnpackLog(event, "TokensUnstaked", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseTokensUnstaked is a log parse operation binding the contract event 0x9845e367b683334e5c0b12d7b81721ac518e649376fa65e3d68324e8f34f2679.
//
// Solidity: event TokensUnstaked(address to, uint256 amount)
func (_Scattertoken *ScattertokenFilterer) ParseTokensUnstaked(log types.Log) (*ScattertokenTokensUnstaked, error) {
	event := new(ScattertokenTokensUnstaked)
	if err := _Scattertoken.contract.UnpackLog(event, "TokensUnstaked", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ScattertokenTransferIterator is returned from FilterTransfer and is used to iterate over the raw logs and unpacked data for Transfer events raised by the Scattertoken contract.
type ScattertokenTransferIterator struct {
	Event *ScattertokenTransfer // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ScattertokenTransferIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ScattertokenTransfer)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ScattertokenTransfer)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ScattertokenTransferIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ScattertokenTransferIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ScattertokenTransfer represents a Transfer event raised by the Scattertoken contract.
type ScattertokenTransfer struct {
	From  common.Address
	To    common.Address
	Value *big.Int
	Raw   types.Log // Blockchain specific contextual infos
}

// FilterTransfer is a free log retrieval operation binding the contract event 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef.
//
// Solidity: event Transfer(address indexed from, address indexed to, uint256 value)
func (_Scattertoken *ScattertokenFilterer) FilterTransfer(opts *bind.FilterOpts, from []common.Address, to []common.Address) (*ScattertokenTransferIterator, error) {

	var fromRule []interface{}
	for _, fromItem := range from {
		fromRule = append(fromRule, fromItem)
	}
	var toRule []interface{}
	for _, toItem := range to {
		toRule = append(toRule, toItem)
	}

	logs, sub, err := _Scattertoken.contract.FilterLogs(opts, "Transfer", fromRule, toRule)
	if err != nil {
		return nil, err
	}
	return &ScattertokenTransferIterator{contract: _Scattertoken.contract, event: "Transfer", logs: logs, sub: sub}, nil
}

// WatchTransfer is a free log subscription operation binding the contract event 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef.
//
// Solidity: event Transfer(address indexed from, address indexed to, uint256 value)
func (_Scattertoken *ScattertokenFilterer) WatchTransfer(opts *bind.WatchOpts, sink chan<- *ScattertokenTransfer, from []common.Address, to []common.Address) (event.Subscription, error) {

	var fromRule []interface{}
	for _, fromItem := range from {
		fromRule = append(fromRule, fromItem)
	}
	var toRule []interface{}
	for _, toItem := range to {
		toRule = append(toRule, toItem)
	}

	logs, sub, err := _Scattertoken.contract.WatchLogs(opts, "Transfer", fromRule, toRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ScattertokenTransfer)
				if err := _Scattertoken.contract.UnpackLog(event, "Transfer", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseTransfer is a log parse operation binding the contract event 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef.
//
// Solidity: event Transfer(address indexed from, address indexed to, uint256 value)
func (_Scattertoken *ScattertokenFilterer) ParseTransfer(log types.Log) (*ScattertokenTransfer, error) {
	event := new(ScattertokenTransfer)
	if err := _Scattertoken.contract.UnpackLog(event, "Transfer", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}
