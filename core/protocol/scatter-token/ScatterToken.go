// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package scattertoken

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
	_ = abi.ConvertType
)

// ScattertokenMetaData contains all meta data concerning the Scattertoken contract.
var ScattertokenMetaData = &bind.MetaData{
	ABI: "[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"cap\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensStaked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensUnstaked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToStake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"canBecomeChallenger\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"canBecomeValidator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"requestorAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"topicName\",\"type\":\"string\"}],\"name\":\"donateToLottery\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getAccountStake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLotteryPool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLotteryPoolExternal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwnStake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"addresspayable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"requestorAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"topicName\",\"type\":\"string\"}],\"name\":\"punishRogueChallengers\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"requestorAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"topicName\",\"type\":\"string\"}],\"name\":\"punishRogueTrainers\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"requestorAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"topicName\",\"type\":\"string\"}],\"name\":\"punishRogueValidators\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"removeStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"requestorAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"topicName\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"requestorLockToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"requiredModelChallengerStake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"requiredModelValidatorStake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"requestorAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"topicName\",\"type\":\"string\"}],\"name\":\"returnTokensToRequestor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"requestorAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"topicName\",\"type\":\"string\"}],\"name\":\"returnTokensToTrainers\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"requestorAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"topicName\",\"type\":\"string\"}],\"name\":\"rewardBenevolentTrainers\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"requestorAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"topicName\",\"type\":\"string\"}],\"name\":\"rewardBenevolentValidators\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"requestorAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"topicName\",\"type\":\"string\"}],\"name\":\"rewardChallengers\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"setEvaluationJobTokenContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"setReputationManagerContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"setScatterProtocolAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"setVoteManagerContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stakeToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"trainerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"requestorAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"topicName\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"trainerLockToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]",
	Bin: "0x60a06040525f600d55600a600e556046600f55601460105560c8601155600260125560c8601455600260155534801562000037575f80fd5b506040516200405e3803806200405e8339810160408190526200005a9162000303565b806040518060400160405280600c81526020016b29b1b0ba3a32b92a37b5b2b760a11b8152506040518060400160405280600281526020016114d560f21b8152508160039081620000ac9190620003b8565b506004620000bb8282620003b8565b5050505f8111620001135760405162461bcd60e51b815260206004820152601560248201527f45524332304361707065643a206361702069732030000000000000000000000060448201526064015b60405180910390fd5b6080526001600555600880546001600160a01b031916339081179091556200013c90826200014f565b506161a8600655614e20600755620004aa565b608051816200015d60025490565b62000169919062000484565b1115620001b95760405162461bcd60e51b815260206004820152601960248201527f45524332304361707065643a206361702065786365656465640000000000000060448201526064016200010a565b620001c58282620001c9565b5050565b60805181620001d760025490565b620001e3919062000484565b1115620002335760405162461bcd60e51b815260206004820152601960248201527f45524332304361707065643a206361702065786365656465640000000000000060448201526064016200010a565b620001c582826001600160a01b038216620002915760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016200010a565b8060025f828254620002a4919062000484565b90915550506001600160a01b0382165f81815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3620001c55f83835b505050565b5f6020828403121562000314575f80fd5b5051919050565b634e487b7160e01b5f52604160045260245ffd5b600181811c908216806200034457607f821691505b6020821081036200036357634e487b7160e01b5f52602260045260245ffd5b50919050565b601f821115620002fe57805f5260205f20601f840160051c81016020851015620003905750805b601f840160051c820191505b81811015620003b1575f81556001016200039c565b5050505050565b81516001600160401b03811115620003d457620003d46200031b565b620003ec81620003e584546200032f565b8462000369565b602080601f83116001811462000422575f84156200040a5750858301515b5f19600386901b1c1916600185901b1785556200047c565b5f85815260208120601f198616915b82811015620004525788860151825594840194600190910190840162000431565b50858210156200047057878501515f19600388901b60f8161c191681555b505060018460011b0185555b505050505050565b80820180821115620004a457634e487b7160e01b5f52601160045260245ffd5b92915050565b608051613b7f620004df5f395f818161030001528181611975015281816119c301528181612daf015261325d0152613b7f5ff3fe608060405234801561000f575f80fd5b506004361061024a575f3560e01c806371f65bd711610140578063a457c2d7116100bf578063cda6b84711610084578063cda6b8471461055b578063da0e3f131461056e578063dd62ed3e14610581578063f5fc44c714610594578063f9d79c68146105a7578063fb7ba582146105ba575f80fd5b8063a457c2d71461050f578063a9059cbb14610522578063bd8d86b714610382578063bea55db914610535578063ccd712d514610548575f80fd5b8063939624ab11610105578063939624ab1461049357806395d89b41146104a6578063968c2000146104ae5780639dacf42d146104c1578063a1a33f44146104f0575f80fd5b806371f65bd71461041c57806379cc67901461042f578063824205d1146104425780638a1fea68146104555780638da5cb5b14610468575f80fd5b8063379a7e8e116101cc5780634ee2b2ee116101915780634ee2b2ee146103825780635e30913f1461038a5780636cd14793146103b257806370a08231146103c5578063711ac775146103ed575f80fd5b8063379a7e8e1461032d578063395093511461033657806342966c681461034957806342a0f9bf1461035c57806342d098e51461036f575f80fd5b806323b872dd1161021257806323b872dd146102c95780632ca23869146102dc578063313ce567146102ef578063355274ea146102fe57806336cb7f8014610324575f80fd5b806306fdde031461024e578063095ea7b31461026c5780630b15127b1461028f57806317ede4b4146102a457806318160ddd146102b7575b5f80fd5b6102566105ce565b60405161026391906133e9565b60405180910390f35b61027f61027a36600461340f565b61065e565b6040519015158152602001610263565b6102a261029d366004613439565b610677565b005b6102a26102b2366004613505565b6106cc565b6002545b604051908152602001610263565b61027f6102d7366004613552565b610e26565b6102a26102ea366004613505565b610e49565b60405160128152602001610263565b7f00000000000000000000000000000000000000000000000000000000000000006102bb565b6102bb60065481565b6102bb60075481565b61027f61034436600461340f565b6112c4565b6102a2610357366004613590565b6112e5565b6102a261036a3660046135a7565b6112f2565b6102a261037d366004613439565b6113e9565b600d546102bb565b6102bb610398366004613439565b6001600160a01b03165f9081526009602052604090205490565b6102a26103c0366004613505565b611435565b6102bb6103d3366004613439565b6001600160a01b03165f9081526020819052604090205490565b61027f6103fb366004613439565b6007546001600160a01b039091165f90815260096020526040902054101590565b6102a261042a366004613439565b611725565b6102a261043d36600461340f565b611771565b6102a2610450366004613505565b61178a565b6102a2610463366004613505565b611823565b60085461047b906001600160a01b031681565b6040516001600160a01b039091168152602001610263565b6102a26104a1366004613590565b611a8f565b610256611cc0565b6102a26104bc366004613505565b611ccf565b61027f6104cf366004613439565b6006546001600160a01b039091165f90815260096020526040902054101590565b6102bb6104fe366004613439565b60096020525f908152604090205481565b61027f61051d36600461340f565b612149565b61027f61053036600461340f565b6121c3565b6102a2610543366004613439565b6121d0565b6102a26105563660046135fc565b61221c565b6102a2610569366004613590565b61238a565b6102a261057c366004613505565b6124dd565b6102bb61058f366004613662565b612799565b6102a26105a2366004613505565b6127c3565b6102a26105b5366004613505565b612ab7565b335f908152600960205260409020546102bb565b6060600380546105dd90613699565b80601f016020809104026020016040519081016040528092919081815260200182805461060990613699565b80156106545780601f1061062b57610100808354040283529160200191610654565b820191905f5260205f20905b81548152906001019060200180831161063757829003601f168201915b5050505050905090565b5f3361066b818585612c89565b60019150505b92915050565b6008546001600160a01b031633146106aa5760405162461bcd60e51b81526004016106a1906136d1565b60405180910390fd5b601880546001600160a01b0319166001600160a01b0392909216919091179055565b6017546001600160a01b031633146106f65760405162461bcd60e51b81526004016106a190613716565b60185460405163042f845360e51b81525f916001600160a01b0316906385f08a60906107289086908690600401613773565b5f60405180830381865afa158015610742573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f19168201604052610769919081019061379e565b601854604051630d8e144560e41b81529192505f916001600160a01b039091169063d8e14450906107a09087908790600401613773565b5f60405180830381865afa1580156107ba573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f191682016040526107e1919081019061379e565b60185460405163c6c0ee9160e01b81529192505f916001600160a01b039091169063c6c0ee91906108189088908890600401613773565b5f60405180830381865afa158015610832573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f19168201604052610859919081019061379e565b90505f81518351855161086c919061385f565b610876919061385f565b67ffffffffffffffff81111561088e5761088e613454565b6040519080825280602002602001820160405280156108b7578160200160208202803683370190505b5090505f805b8551811015610b19575f6001600160a01b03168682815181106108e2576108e2613872565b60200260200101516001600160a01b03160315610b1957601a5486515f916001600160a01b0316906343faf37f908b908b908b908790811061092657610926613872565b60200260200101516040518463ffffffff1660e01b815260040161094c93929190613886565b602060405180830381865afa158015610967573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061098b91906138ba565b90505f80601a5489516001600160a01b0390911690631aed680e908d908d908d90899081106109bc576109bc613872565b60200260200101516040518463ffffffff1660e01b81526004016109e293929190613886565b602060405180830381865afa1580156109fd573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610a2191906138ed565b6002811115610a3257610a326138d9565b149050818015610a40575080155b15610b0f5760175488516001600160a01b039091169063ce586a1e908c908c908c9088908110610a7257610a72613872565b60200260200101516040518463ffffffff1660e01b8152600401610a9893929190613886565b602060405180830381865afa158015610ab3573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610ad7919061390b565b858581518110610ae957610ae9613872565b6001600160a01b0390921660209283029190910190910152610b0c60018561385f565b93505b50506001016108bd565b505f5b8451811015610cc5575f6001600160a01b0316858281518110610b4157610b41613872565b60200260200101516001600160a01b03160315610cc557601a5485515f916001600160a01b03169063ca88ae24908b908b908a9087908110610b8557610b85613872565b60200260200101516040518463ffffffff1660e01b8152600401610bab93929190613886565b602060405180830381865afa158015610bc6573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610bea91906138ba565b90508015610cbc5760175486516001600160a01b039091169063ce586a1e908b908b908a9087908110610c1f57610c1f613872565b60200260200101516040518463ffffffff1660e01b8152600401610c4593929190613886565b602060405180830381865afa158015610c60573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c84919061390b565b848481518110610c9657610c96613872565b6001600160a01b0390921660209283029190910190910152610cb960018461385f565b92505b50600101610b1c565b505f5b8351811015610dd5575f6001600160a01b0316848281518110610ced57610ced613872565b60200260200101516001600160a01b03160315610dd55760175484516001600160a01b039091169063ce586a1e908a908a90889086908110610d3157610d31613872565b60200260200101516040518463ffffffff1660e01b8152600401610d5793929190613886565b602060405180830381865afa158015610d72573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d96919061390b565b838381518110610da857610da8613872565b6001600160a01b0390921660209283029190910190910152610dcb60018361385f565b9150600101610cc8565b505f5b81811015610e1857610e10838281518110610df557610df5613872565b602002602001015183600d54610e0b919061393a565b612dad565b600101610dd8565b50505f600d55505050505050565b5f33610e33858285612e36565b610e3e858585612ea8565b506001949350505050565b6017546001600160a01b03163314610e735760405162461bcd60e51b81526004016106a190613716565b6018546040516328882e8160e01b81525f916001600160a01b0316906328882e8190610ea59086908690600401613773565b5f60405180830381865afa158015610ebf573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f19168201604052610ee6919081019061379e565b90505f815167ffffffffffffffff811115610f0357610f03613454565b604051908082528060200260200182016040528015610f2c578160200160208202803683370190505b50601a546040516395faa05760e01b81529192505f916001600160a01b03909116906395faa05790610f649088908890600401613773565b602060405180830381865afa158015610f7f573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610fa391906138ba565b90508015611008575f5b835181101561100257838181518110610fc857610fc8613872565b6020026020010151838281518110610fe257610fe2613872565b6001600160a01b0390921660209283029190910190910152600101610fad565b50611100565b5f5b83518110156110fe57601a5484516001600160a01b03909116906397e12c36908890889088908690811061104057611040613872565b60200260200101516040518463ffffffff1660e01b815260040161106693929190613886565b602060405180830381865afa158015611081573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906110a591906138ba565b6110f6578381815181106110bb576110bb613872565b60200260200101518382815181106110d5576110d5613872565b60200260200101906001600160a01b031690816001600160a01b0316815250505b60010161100a565b505b5f805b8351811015611192575f6001600160a01b031684828151811061112857611128613872565b60200260200101516001600160a01b0316031561118a5760095f85838151811061115457611154613872565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020015f205482611187919061385f565b91505b600101611103565b505f6064601054600c5f8a6001600160a01b03166001600160a01b031681526020019081526020015f20886040516111ca9190613959565b9081526020016040518091039020546111e39190613974565b6111ed919061393a565b90505f5b84518110156112ba575f6001600160a01b031685828151811061121657611216613872565b60200260200101516001600160a01b031603156112b2575f61123984600161385f565b8360095f89868151811061124f5761124f613872565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020015f20546112819190613974565b61128b919061393a565b90506112b08683815181106112a2576112a2613872565b602002602001015182612dad565b505b6001016111f1565b5050505050505050565b5f3361066b8185856112d68383612799565b6112e0919061385f565b612c89565b6112ef338261304a565b50565b6017546001600160a01b0316331461131c5760405162461bcd60e51b81526004016106a190613716565b6040516370a0823160e01b81526001600160a01b038416600482015230906370a0823190602401602060405180830381865afa15801561135e573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611382919061398b565b8111156113a15760405162461bcd60e51b81526004016106a1906139a2565b6113ab838261304a565b6001600160a01b0383165f908152600c60205260409081902090518291906113d4908590613959565b90815260405190819003602001902055505050565b6008546001600160a01b031633146114135760405162461bcd60e51b81526004016106a1906136d1565b601a80546001600160a01b0319166001600160a01b0392909216919091179055565b6017546001600160a01b0316331461145f5760405162461bcd60e51b81526004016106a190613716565b60185460405163c6c0ee9160e01b81525f916001600160a01b03169063c6c0ee91906114919086908690600401613773565b5f60405180830381865afa1580156114ab573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f191682016040526114d2919081019061379e565b90505f5b815181101561171f575f6001600160a01b03168282815181106114fb576114fb613872565b60200260200101516001600160a01b0316031561171f575f60165f84848151811061152857611528613872565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020015f205460155461155d9190613ac6565b60145461156a9190613974565b90505f6115b360095f86868151811061158557611585613872565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020015f205483613172565b905080600d5f8282546115c6919061385f565b925050819055508060095f8686815181106115e3576115e3613872565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020015f205f8282546116189190613ad1565b92505081905550600160165f86868151811061163657611636613872565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020015f205f82825461166b919061385f565b925050819055505f60095f86868151811061168857611688613872565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020015f205411611715576017546040516302b8e1f360e51b81526001600160a01b039091169063571c3e60906116e79033905f90600401613ae4565b5f604051808303815f87803b1580156116fe575f80fd5b505af1158015611710573d5f803e3d5ffd5b505050505b50506001016114d6565b50505050565b6008546001600160a01b0316331461174f5760405162461bcd60e51b81526004016106a1906136d1565b601980546001600160a01b0319166001600160a01b0392909216919091179055565b61177c823383612e36565b611786828261304a565b5050565b6017546001600160a01b031633146117b45760405162461bcd60e51b81526004016106a190613716565b6001600160a01b0382165f908152600c602052604080822090516117d9908490613959565b90815260200160405180910390205490505f6064600e54836117fb9190613974565b611805919061393a565b905080600d5f828254611818919061385f565b909155505050505050565b6017546001600160a01b0316331461184d5760405162461bcd60e51b81526004016106a190613716565b6018546040516355cb365d60e11b81525f916001600160a01b03169063ab966cba9061187f9086908690600401613773565b5f60405180830381865afa158015611899573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f191682016040526118c0919081019061379e565b90505f5b815181101561171f575f6001600160a01b03168282815181106118e9576118e9613872565b60200260200101516001600160a01b0316031561171f576001600160a01b0384165f908152600b60205260408082209051611925908690613959565b90815260200160405180910390205f84848151811061194657611946613872565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020015f205490506119977f000000000000000000000000000000000000000000000000000000000000000090565b816119a160025490565b6119ab919061385f565b1115611a0557600854611a05906001600160a01b03167f0000000000000000000000000000000000000000000000000000000000000000836119ec60025490565b6119f6919061385f565b611a009190613ad1565b61304a565b611a1a8383815181106112a2576112a2613872565b6001600160a01b0385165f908152600b6020526040908190209051611a40908690613959565b90815260200160405180910390205f848481518110611a6157611a61613872565b6020908102919091018101516001600160a01b031682528101919091526040015f90812055506001016118c4565b611a97613189565b335f908152600a6020526040902054421115611b1b5760405162461bcd60e51b815260206004820152603860248201527f596f75206d7573742077616974206265666f7265206265696e672061626c652060448201527f746f20756e7374616b65205363617474657220546f6b656e000000000000000060648201526084016106a1565b335f908152600960205260409020548110611b875760405162461bcd60e51b815260206004820152602660248201527f416d6f756e74206d757374206265206c657373207468616e207374616b656420604482015265185b5bdd5b9d60d21b60648201526084016106a1565b611b913382612dad565b335f9081526009602052604081208054839290611baf908490613ad1565b9091555050601754604051630a9d3d9b60e11b81523360048201525f916001600160a01b03169063153a7b3690602401602060405180830381865afa158015611bfa573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611c1e9190613b1d565b90506003816004811115611c3457611c346138d9565b148015611c505750600654335f90815260096020526040902054105b15611cb5576017546040516302b8e1f360e51b81526001600160a01b039091169063571c3e6090611c879033905f90600401613ae4565b5f604051808303815f87803b158015611c9e575f80fd5b505af1158015611cb0573d5f803e3d5ffd5b505050505b506112ef6001600555565b6060600480546105dd90613699565b6017546001600160a01b03163314611cf95760405162461bcd60e51b81526004016106a190613716565b6018546040516355cb365d60e11b81525f916001600160a01b03169063ab966cba90611d2b9086908690600401613773565b5f60405180830381865afa158015611d45573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f19168201604052611d6c919081019061379e565b90505f6064600f54600c5f876001600160a01b03166001600160a01b031681526020019081526020015f2085604051611da59190613959565b908152602001604051809103902054611dbe9190613974565b611dc8919061393a565b90505f805b8351811015611f58575f6001600160a01b0316848281518110611df257611df2613872565b60200260200101516001600160a01b03160315611f58575f600260195f9054906101000a90046001600160a01b03166001600160a01b031663d7287ff78989898781518110611e4357611e43613872565b60200260200101516040518463ffffffff1660e01b8152600401611e6993929190613886565b602060405180830381865afa158015611e84573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611ea8919061398b565b611eb29190613b3b565b6001600160a01b0388165f908152600b602052604080822090519293509091611edc908990613959565b90815260200160405180910390205f878581518110611efd57611efd613872565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020015f205490505f611f31826131e2565b9050611f3d8184613974565b611f47908661385f565b94505060019092019150611dcd9050565b505f5b8351811015612141575f6001600160a01b0316848281518110611f8057611f80613872565b60200260200101516001600160a01b03160315612141575f600260195f9054906101000a90046001600160a01b03166001600160a01b031663d7287ff78989898781518110611fd157611fd1613872565b60200260200101516040518463ffffffff1660e01b8152600401611ff793929190613886565b602060405180830381865afa158015612012573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190612036919061398b565b6120409190613b3b565b6001600160a01b0388165f908152600b60205260408082209051929350909161206a908990613959565b90815260200160405180910390205f87858151811061208b5761208b613872565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020015f205490505f6120bf826131e2565b90505f85876120ce8487613974565b6120d89190613974565b6120e2919061393a565b90505f6001600160a01b031688868151811061210057612100613872565b60200260200101516001600160a01b03160361211f5750505050612139565b6121348886815181106112a2576112a2613872565b505050505b600101611f5b565b505050505050565b5f33816121568286612799565b9050838110156121b65760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016106a1565b610e3e8286868403612c89565b5f3361066b818585612ea8565b6008546001600160a01b031633146121fa5760405162461bcd60e51b81526004016106a1906136d1565b601780546001600160a01b0319166001600160a01b0392909216919091179055565b6017546001600160a01b031633146122465760405162461bcd60e51b81526004016106a190613716565b6040516370a0823160e01b81526001600160a01b038516600482015230906370a0823190602401602060405180830381865afa158015612288573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906122ac919061398b565b8111156122cb5760405162461bcd60e51b81526004016106a1906139a2565b5f811161231a5760405162461bcd60e51b815260206004820152601f60248201527f4d757374206c6f636b20736f6d6520616d6f756e74206f6620746f6b656e730060448201526064016106a1565b612324848261304a565b6001600160a01b0383165f908152600b602052604090819020905182919061234d908590613959565b90815260200160405180910390205f866001600160a01b03166001600160a01b031681526020019081526020015f205f828254611818919061385f565b612392613189565b6040516370a0823160e01b815233600482015230906370a0823190602401602060405180830381865afa1580156123cb573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906123ef919061398b565b81111561244c5760405162461bcd60e51b815260206004820152602560248201527f43616e6e6f74207374616b65206d6f726520746f6b656e73207468616e20796f6044820152643a9037bbb760d91b60648201526084016106a1565b612456338261304a565b335f908152600960205260408120805483929061247490849061385f565b9091555061248790504262278d0061385f565b335f818152600a60209081526040918290209390935580519182529181018390527fb539ca1e5c8d398ddf1c41c30166f33404941683be4683319b57669a93dad4ef910160405180910390a16112ef6001600555565b6017546001600160a01b031633146125075760405162461bcd60e51b81526004016106a190613716565b601854604051630d8e144560e41b81525f916001600160a01b03169063d8e14450906125399086908690600401613773565b5f60405180830381865afa158015612553573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f1916820160405261257a919081019061379e565b90505f5b815181101561171f575f6001600160a01b03168282815181106125a3576125a3613872565b60200260200101516001600160a01b0316031561171f575f60135f8484815181106125d0576125d0613872565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020015f20546012546126059190613ac6565b6011546126129190613974565b90505f61262d60095f86868151811061158557611585613872565b905080600d5f828254612640919061385f565b925050819055508060095f86868151811061265d5761265d613872565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020015f205f8282546126929190613ad1565b92505081905550600160135f8686815181106126b0576126b0613872565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020015f205f8282546126e5919061385f565b925050819055505f60095f86868151811061270257612702613872565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020015f20541161278f576017546040516302b8e1f360e51b81526001600160a01b039091169063571c3e60906127619033905f90600401613ae4565b5f604051808303815f87803b158015612778575f80fd5b505af115801561278a573d5f803e3d5ffd5b505050505b505060010161257e565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b6017546001600160a01b031633146127ed5760405162461bcd60e51b81526004016106a190613716565b601a546040516395faa05760e01b81526001600160a01b03909116906395faa0579061281f9085908590600401613773565b602060405180830381865afa15801561283a573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061285e91906138ba565b611786576018546040516355cb365d60e11b81525f916001600160a01b03169063ab966cba906128949086908690600401613773565b5f60405180830381865afa1580156128ae573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f191682016040526128d5919081019061379e565b6018546040516328882e8160e01b81529192505f916001600160a01b03909116906328882e819061290c9087908790600401613773565b5f60405180830381865afa158015612926573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f1916820160405261294d919081019061379e565b90505f805f5b84518110156129a4575f6001600160a01b031685828151811061297857612978613872565b60200260200101516001600160a01b031603156129a45761299a60018461385f565b9250600101612953565b505f5b83518110156129f8575f6001600160a01b03168482815181106129cc576129cc613872565b60200260200101516001600160a01b031603156129f8576129ee60018361385f565b91506001016129a7565b50815f03612a5d57612a5d866064600c5f8a6001600160a01b03166001600160a01b031681526020019081526020015f2088604051612a379190613959565b908152602001604051809103902054600f54612a539190613974565b610e0b919061393a565b805f0361214157612141866064600c5f8a6001600160a01b03166001600160a01b031681526020019081526020015f2088604051612a9b9190613959565b908152602001604051809103902054601054612a539190613974565b6017546001600160a01b03163314612ae15760405162461bcd60e51b81526004016106a190613716565b60185460405163042f845360e51b81525f916001600160a01b0316906385f08a6090612b139086908690600401613773565b5f60405180830381865afa158015612b2d573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f19168201604052612b54919081019061379e565b90505f5b815181101561171f575f6001600160a01b0316828281518110612b7d57612b7d613872565b60200260200101516001600160a01b0316031561171f576001600160a01b0384165f908152600b6020526040908190209051612bba908590613959565b90815260200160405180910390205f838381518110612bdb57612bdb613872565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020015f2054600d5f828254612c13919061385f565b90915550506001600160a01b0384165f908152600b60205260408082209051612c3d908690613959565b90815260200160405180910390205f848481518110612c5e57612c5e613872565b6020908102919091018101516001600160a01b031682528101919091526040015f2055600101612b58565b6001600160a01b038316612ceb5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016106a1565b6001600160a01b038216612d4c5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016106a1565b6001600160a01b038381165f8181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b7f000000000000000000000000000000000000000000000000000000000000000081612dd860025490565b612de2919061385f565b1115612e2c5760405162461bcd60e51b8152602060048201526019602482015278115490cc8c10d85c1c19590e8818d85c08195e18d959591959603a1b60448201526064016106a1565b611786828261325b565b5f612e418484612799565b90505f19811461171f5781811015612e9b5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016106a1565b61171f8484848403612c89565b6001600160a01b038316612f0c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016106a1565b6001600160a01b038216612f6e5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016106a1565b6001600160a01b0383165f9081526020819052604090205481811015612fe55760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016106a1565b6001600160a01b038481165f81815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a361171f565b6001600160a01b0382166130aa5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016106a1565b6001600160a01b0382165f908152602081905260409020548181101561311d5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016106a1565b6001600160a01b0383165f818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9101612da0565b5f8183106131805781613182565b825b9392505050565b6002600554036131db5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016106a1565b6002600555565b5f8115613254575f6002830460010190505f600282858161320557613205613926565b0483018161321557613215613926565b0490505b8082111561324d57809150600282858161323557613235613926565b0483018161324557613245613926565b049050613219565b5092915050565b505f919050565b7f00000000000000000000000000000000000000000000000000000000000000008161328660025490565b613290919061385f565b11156132da5760405162461bcd60e51b8152602060048201526019602482015278115490cc8c10d85c1c19590e8818d85c08195e18d959591959603a1b60448201526064016106a1565b61178682826001600160a01b0382166133355760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016106a1565b8060025f828254613346919061385f565b90915550506001600160a01b0382165f81815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b5f5b838110156133b657818101518382015260200161339e565b50505f910152565b5f81518084526133d581602086016020860161339c565b601f01601f19169290920160200192915050565b602081525f61318260208301846133be565b6001600160a01b03811681146112ef575f80fd5b5f8060408385031215613420575f80fd5b823561342b816133fb565b946020939093013593505050565b5f60208284031215613449575f80fd5b8135613182816133fb565b634e487b7160e01b5f52604160045260245ffd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561349157613491613454565b604052919050565b5f82601f8301126134a8575f80fd5b813567ffffffffffffffff8111156134c2576134c2613454565b6134d5601f8201601f1916602001613468565b8181528460208386010111156134e9575f80fd5b816020850160208301375f918101602001919091529392505050565b5f8060408385031215613516575f80fd5b8235613521816133fb565b9150602083013567ffffffffffffffff81111561353c575f80fd5b61354885828601613499565b9150509250929050565b5f805f60608486031215613564575f80fd5b833561356f816133fb565b9250602084013561357f816133fb565b929592945050506040919091013590565b5f602082840312156135a0575f80fd5b5035919050565b5f805f606084860312156135b9575f80fd5b83356135c4816133fb565b9250602084013567ffffffffffffffff8111156135df575f80fd5b6135eb86828701613499565b925050604084013590509250925092565b5f805f806080858703121561360f575f80fd5b843561361a816133fb565b9350602085013561362a816133fb565b9250604085013567ffffffffffffffff811115613645575f80fd5b61365187828801613499565b949793965093946060013593505050565b5f8060408385031215613673575f80fd5b823561367e816133fb565b9150602083013561368e816133fb565b809150509250929050565b600181811c908216806136ad57607f821691505b6020821081036136cb57634e487b7160e01b5f52602260045260245ffd5b50919050565b60208082526025908201527f4f6e6c7920746865206f776e65722063616e2063616c6c20746869732066756e60408201526431ba34b7b760d91b606082015260800190565b6020808252603f908201527f54686973206d6574686f642063616e206f6e6c792062652063616c6c6564206260408201527f792074686520736361747465722070726f746f636f6c20636f6e747261637400606082015260800190565b6001600160a01b03831681526040602082018190525f90613796908301846133be565b949350505050565b5f60208083850312156137af575f80fd5b825167ffffffffffffffff808211156137c6575f80fd5b818501915085601f8301126137d9575f80fd5b8151818111156137eb576137eb613454565b8060051b91506137fc848301613468565b8181529183018401918481019088841115613815575f80fd5b938501935b8385101561383f578451925061382f836133fb565b828252938501939085019061381a565b98975050505050505050565b634e487b7160e01b5f52601160045260245ffd5b808201808211156106715761067161384b565b634e487b7160e01b5f52603260045260245ffd5b5f60018060a01b038086168352606060208401526138a760608401866133be565b9150808416604084015250949350505050565b5f602082840312156138ca575f80fd5b81518015158114613182575f80fd5b634e487b7160e01b5f52602160045260245ffd5b5f602082840312156138fd575f80fd5b815160038110613182575f80fd5b5f6020828403121561391b575f80fd5b8151613182816133fb565b634e487b7160e01b5f52601260045260245ffd5b5f8261395457634e487b7160e01b5f52601260045260245ffd5b500490565b5f825161396a81846020870161339c565b9190910192915050565b80820281158282048414176106715761067161384b565b5f6020828403121561399b575f80fd5b5051919050565b60208082526024908201527f43616e6e6f74206c6f636b206d6f726520746f6b656e73207468616e20796f756040820152631037bbb760e11b606082015260800190565b600181815b80851115613a2057815f1904821115613a0657613a0661384b565b80851615613a1357918102915b93841c93908002906139eb565b509250929050565b5f82613a3657506001610671565b81613a4257505f610671565b8160018114613a585760028114613a6257613a7e565b6001915050610671565b60ff841115613a7357613a7361384b565b50506001821b610671565b5060208310610133831016604e8410600b8410161715613aa1575081810a610671565b613aab83836139e6565b805f1904821115613abe57613abe61384b565b029392505050565b5f6131828383613a28565b818103818111156106715761067161384b565b6001600160a01b03831681526040810160058310613b1057634e487b7160e01b5f52602160045260245ffd5b8260208301529392505050565b5f60208284031215613b2d575f80fd5b815160058110613182575f80fd5b5f61318260ff841683613a2856fea26469706673582212209ba191c0a0b3b728e366366f2ded621640a8770fe33001ba3eb011e426102fc964736f6c63430008170033",
}

// ScattertokenABI is the input ABI used to generate the binding from.
// Deprecated: Use ScattertokenMetaData.ABI instead.
var ScattertokenABI = ScattertokenMetaData.ABI

// ScattertokenBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use ScattertokenMetaData.Bin instead.
var ScattertokenBin = ScattertokenMetaData.Bin

// DeployScattertoken deploys a new Ethereum contract, binding an instance of Scattertoken to it.
func DeployScattertoken(auth *bind.TransactOpts, backend bind.ContractBackend, cap *big.Int) (common.Address, *types.Transaction, *Scattertoken, error) {
	parsed, err := ScattertokenMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(ScattertokenBin), backend, cap)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &Scattertoken{ScattertokenCaller: ScattertokenCaller{contract: contract}, ScattertokenTransactor: ScattertokenTransactor{contract: contract}, ScattertokenFilterer: ScattertokenFilterer{contract: contract}}, nil
}

// Scattertoken is an auto generated Go binding around an Ethereum contract.
type Scattertoken struct {
	ScattertokenCaller     // Read-only binding to the contract
	ScattertokenTransactor // Write-only binding to the contract
	ScattertokenFilterer   // Log filterer for contract events
}

// ScattertokenCaller is an auto generated read-only Go binding around an Ethereum contract.
type ScattertokenCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ScattertokenTransactor is an auto generated write-only Go binding around an Ethereum contract.
type ScattertokenTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ScattertokenFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type ScattertokenFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ScattertokenSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type ScattertokenSession struct {
	Contract     *Scattertoken     // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// ScattertokenCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type ScattertokenCallerSession struct {
	Contract *ScattertokenCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts       // Call options to use throughout this session
}

// ScattertokenTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type ScattertokenTransactorSession struct {
	Contract     *ScattertokenTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts       // Transaction auth options to use throughout this session
}

// ScattertokenRaw is an auto generated low-level Go binding around an Ethereum contract.
type ScattertokenRaw struct {
	Contract *Scattertoken // Generic contract binding to access the raw methods on
}

// ScattertokenCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type ScattertokenCallerRaw struct {
	Contract *ScattertokenCaller // Generic read-only contract binding to access the raw methods on
}

// ScattertokenTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type ScattertokenTransactorRaw struct {
	Contract *ScattertokenTransactor // Generic write-only contract binding to access the raw methods on
}

// NewScattertoken creates a new instance of Scattertoken, bound to a specific deployed contract.
func NewScattertoken(address common.Address, backend bind.ContractBackend) (*Scattertoken, error) {
	contract, err := bindScattertoken(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &Scattertoken{ScattertokenCaller: ScattertokenCaller{contract: contract}, ScattertokenTransactor: ScattertokenTransactor{contract: contract}, ScattertokenFilterer: ScattertokenFilterer{contract: contract}}, nil
}

// NewScattertokenCaller creates a new read-only instance of Scattertoken, bound to a specific deployed contract.
func NewScattertokenCaller(address common.Address, caller bind.ContractCaller) (*ScattertokenCaller, error) {
	contract, err := bindScattertoken(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &ScattertokenCaller{contract: contract}, nil
}

// NewScattertokenTransactor creates a new write-only instance of Scattertoken, bound to a specific deployed contract.
func NewScattertokenTransactor(address common.Address, transactor bind.ContractTransactor) (*ScattertokenTransactor, error) {
	contract, err := bindScattertoken(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &ScattertokenTransactor{contract: contract}, nil
}

// NewScattertokenFilterer creates a new log filterer instance of Scattertoken, bound to a specific deployed contract.
func NewScattertokenFilterer(address common.Address, filterer bind.ContractFilterer) (*ScattertokenFilterer, error) {
	contract, err := bindScattertoken(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &ScattertokenFilterer{contract: contract}, nil
}

// bindScattertoken binds a generic wrapper to an already deployed contract.
func bindScattertoken(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := ScattertokenMetaData.GetAbi()
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, *parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Scattertoken *ScattertokenRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Scattertoken.Contract.ScattertokenCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Scattertoken *ScattertokenRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Scattertoken.Contract.ScattertokenTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Scattertoken *ScattertokenRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Scattertoken.Contract.ScattertokenTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Scattertoken *ScattertokenCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Scattertoken.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Scattertoken *ScattertokenTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Scattertoken.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Scattertoken *ScattertokenTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Scattertoken.Contract.contract.Transact(opts, method, params...)
}

// AddressToStake is a free data retrieval call binding the contract method 0xa1a33f44.
//
// Solidity: function addressToStake(address ) view returns(uint256)
func (_Scattertoken *ScattertokenCaller) AddressToStake(opts *bind.CallOpts, arg0 common.Address) (*big.Int, error) {
	var out []interface{}
	err := _Scattertoken.contract.Call(opts, &out, "addressToStake", arg0)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// AddressToStake is a free data retrieval call binding the contract method 0xa1a33f44.
//
// Solidity: function addressToStake(address ) view returns(uint256)
func (_Scattertoken *ScattertokenSession) AddressToStake(arg0 common.Address) (*big.Int, error) {
	return _Scattertoken.Contract.AddressToStake(&_Scattertoken.CallOpts, arg0)
}

// AddressToStake is a free data retrieval call binding the contract method 0xa1a33f44.
//
// Solidity: function addressToStake(address ) view returns(uint256)
func (_Scattertoken *ScattertokenCallerSession) AddressToStake(arg0 common.Address) (*big.Int, error) {
	return _Scattertoken.Contract.AddressToStake(&_Scattertoken.CallOpts, arg0)
}

// Allowance is a free data retrieval call binding the contract method 0xdd62ed3e.
//
// Solidity: function allowance(address owner, address spender) view returns(uint256)
func (_Scattertoken *ScattertokenCaller) Allowance(opts *bind.CallOpts, owner common.Address, spender common.Address) (*big.Int, error) {
	var out []interface{}
	err := _Scattertoken.contract.Call(opts, &out, "allowance", owner, spender)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// Allowance is a free data retrieval call binding the contract method 0xdd62ed3e.
//
// Solidity: function allowance(address owner, address spender) view returns(uint256)
func (_Scattertoken *ScattertokenSession) Allowance(owner common.Address, spender common.Address) (*big.Int, error) {
	return _Scattertoken.Contract.Allowance(&_Scattertoken.CallOpts, owner, spender)
}

// Allowance is a free data retrieval call binding the contract method 0xdd62ed3e.
//
// Solidity: function allowance(address owner, address spender) view returns(uint256)
func (_Scattertoken *ScattertokenCallerSession) Allowance(owner common.Address, spender common.Address) (*big.Int, error) {
	return _Scattertoken.Contract.Allowance(&_Scattertoken.CallOpts, owner, spender)
}

// BalanceOf is a free data retrieval call binding the contract method 0x70a08231.
//
// Solidity: function balanceOf(address account) view returns(uint256)
func (_Scattertoken *ScattertokenCaller) BalanceOf(opts *bind.CallOpts, account common.Address) (*big.Int, error) {
	var out []interface{}
	err := _Scattertoken.contract.Call(opts, &out, "balanceOf", account)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// BalanceOf is a free data retrieval call binding the contract method 0x70a08231.
//
// Solidity: function balanceOf(address account) view returns(uint256)
func (_Scattertoken *ScattertokenSession) BalanceOf(account common.Address) (*big.Int, error) {
	return _Scattertoken.Contract.BalanceOf(&_Scattertoken.CallOpts, account)
}

// BalanceOf is a free data retrieval call binding the contract method 0x70a08231.
//
// Solidity: function balanceOf(address account) view returns(uint256)
func (_Scattertoken *ScattertokenCallerSession) BalanceOf(account common.Address) (*big.Int, error) {
	return _Scattertoken.Contract.BalanceOf(&_Scattertoken.CallOpts, account)
}

// CanBecomeChallenger is a free data retrieval call binding the contract method 0x711ac775.
//
// Solidity: function canBecomeChallenger(address account) view returns(bool)
func (_Scattertoken *ScattertokenCaller) CanBecomeChallenger(opts *bind.CallOpts, account common.Address) (bool, error) {
	var out []interface{}
	err := _Scattertoken.contract.Call(opts, &out, "canBecomeChallenger", account)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// CanBecomeChallenger is a free data retrieval call binding the contract method 0x711ac775.
//
// Solidity: function canBecomeChallenger(address account) view returns(bool)
func (_Scattertoken *ScattertokenSession) CanBecomeChallenger(account common.Address) (bool, error) {
	return _Scattertoken.Contract.CanBecomeChallenger(&_Scattertoken.CallOpts, account)
}

// CanBecomeChallenger is a free data retrieval call binding the contract method 0x711ac775.
//
// Solidity: function canBecomeChallenger(address account) view returns(bool)
func (_Scattertoken *ScattertokenCallerSession) CanBecomeChallenger(account common.Address) (bool, error) {
	return _Scattertoken.Contract.CanBecomeChallenger(&_Scattertoken.CallOpts, account)
}

// CanBecomeValidator is a free data retrieval call binding the contract method 0x9dacf42d.
//
// Solidity: function canBecomeValidator(address account) view returns(bool)
func (_Scattertoken *ScattertokenCaller) CanBecomeValidator(opts *bind.CallOpts, account common.Address) (bool, error) {
	var out []interface{}
	err := _Scattertoken.contract.Call(opts, &out, "canBecomeValidator", account)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// CanBecomeValidator is a free data retrieval call binding the contract method 0x9dacf42d.
//
// Solidity: function canBecomeValidator(address account) view returns(bool)
func (_Scattertoken *ScattertokenSession) CanBecomeValidator(account common.Address) (bool, error) {
	return _Scattertoken.Contract.CanBecomeValidator(&_Scattertoken.CallOpts, account)
}

// CanBecomeValidator is a free data retrieval call binding the contract method 0x9dacf42d.
//
// Solidity: function canBecomeValidator(address account) view returns(bool)
func (_Scattertoken *ScattertokenCallerSession) CanBecomeValidator(account common.Address) (bool, error) {
	return _Scattertoken.Contract.CanBecomeValidator(&_Scattertoken.CallOpts, account)
}

// Cap is a free data retrieval call binding the contract method 0x355274ea.
//
// Solidity: function cap() view returns(uint256)
func (_Scattertoken *ScattertokenCaller) Cap(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Scattertoken.contract.Call(opts, &out, "cap")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// Cap is a free data retrieval call binding the contract method 0x355274ea.
//
// Solidity: function cap() view returns(uint256)
func (_Scattertoken *ScattertokenSession) Cap() (*big.Int, error) {
	return _Scattertoken.Contract.Cap(&_Scattertoken.CallOpts)
}

// Cap is a free data retrieval call binding the contract method 0x355274ea.
//
// Solidity: function cap() view returns(uint256)
func (_Scattertoken *ScattertokenCallerSession) Cap() (*big.Int, error) {
	return _Scattertoken.Contract.Cap(&_Scattertoken.CallOpts)
}

// Decimals is a free data retrieval call binding the contract method 0x313ce567.
//
// Solidity: function decimals() view returns(uint8)
func (_Scattertoken *ScattertokenCaller) Decimals(opts *bind.CallOpts) (uint8, error) {
	var out []interface{}
	err := _Scattertoken.contract.Call(opts, &out, "decimals")

	if err != nil {
		return *new(uint8), err
	}

	out0 := *abi.ConvertType(out[0], new(uint8)).(*uint8)

	return out0, err

}

// Decimals is a free data retrieval call binding the contract method 0x313ce567.
//
// Solidity: function decimals() view returns(uint8)
func (_Scattertoken *ScattertokenSession) Decimals() (uint8, error) {
	return _Scattertoken.Contract.Decimals(&_Scattertoken.CallOpts)
}

// Decimals is a free data retrieval call binding the contract method 0x313ce567.
//
// Solidity: function decimals() view returns(uint8)
func (_Scattertoken *ScattertokenCallerSession) Decimals() (uint8, error) {
	return _Scattertoken.Contract.Decimals(&_Scattertoken.CallOpts)
}

// GetAccountStake is a free data retrieval call binding the contract method 0x5e30913f.
//
// Solidity: function getAccountStake(address account) view returns(uint256)
func (_Scattertoken *ScattertokenCaller) GetAccountStake(opts *bind.CallOpts, account common.Address) (*big.Int, error) {
	var out []interface{}
	err := _Scattertoken.contract.Call(opts, &out, "getAccountStake", account)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetAccountStake is a free data retrieval call binding the contract method 0x5e30913f.
//
// Solidity: function getAccountStake(address account) view returns(uint256)
func (_Scattertoken *ScattertokenSession) GetAccountStake(account common.Address) (*big.Int, error) {
	return _Scattertoken.Contract.GetAccountStake(&_Scattertoken.CallOpts, account)
}

// GetAccountStake is a free data retrieval call binding the contract method 0x5e30913f.
//
// Solidity: function getAccountStake(address account) view returns(uint256)
func (_Scattertoken *ScattertokenCallerSession) GetAccountStake(account common.Address) (*big.Int, error) {
	return _Scattertoken.Contract.GetAccountStake(&_Scattertoken.CallOpts, account)
}

// GetLotteryPool is a free data retrieval call binding the contract method 0xbd8d86b7.
//
// Solidity: function getLotteryPool() view returns(uint256)
func (_Scattertoken *ScattertokenCaller) GetLotteryPool(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Scattertoken.contract.Call(opts, &out, "getLotteryPool")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetLotteryPool is a free data retrieval call binding the contract method 0xbd8d86b7.
//
// Solidity: function getLotteryPool() view returns(uint256)
func (_Scattertoken *ScattertokenSession) GetLotteryPool() (*big.Int, error) {
	return _Scattertoken.Contract.GetLotteryPool(&_Scattertoken.CallOpts)
}

// GetLotteryPool is a free data retrieval call binding the contract method 0xbd8d86b7.
//
// Solidity: function getLotteryPool() view returns(uint256)
func (_Scattertoken *ScattertokenCallerSession) GetLotteryPool() (*big.Int, error) {
	return _Scattertoken.Contract.GetLotteryPool(&_Scattertoken.CallOpts)
}

// GetLotteryPoolExternal is a free data retrieval call binding the contract method 0x4ee2b2ee.
//
// Solidity: function getLotteryPoolExternal() view returns(uint256)
func (_Scattertoken *ScattertokenCaller) GetLotteryPoolExternal(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Scattertoken.contract.Call(opts, &out, "getLotteryPoolExternal")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetLotteryPoolExternal is a free data retrieval call binding the contract method 0x4ee2b2ee.
//
// Solidity: function getLotteryPoolExternal() view returns(uint256)
func (_Scattertoken *ScattertokenSession) GetLotteryPoolExternal() (*big.Int, error) {
	return _Scattertoken.Contract.GetLotteryPoolExternal(&_Scattertoken.CallOpts)
}

// GetLotteryPoolExternal is a free data retrieval call binding the contract method 0x4ee2b2ee.
//
// Solidity: function getLotteryPoolExternal() view returns(uint256)
func (_Scattertoken *ScattertokenCallerSession) GetLotteryPoolExternal() (*big.Int, error) {
	return _Scattertoken.Contract.GetLotteryPoolExternal(&_Scattertoken.CallOpts)
}

// GetOwnStake is a free data retrieval call binding the contract method 0xfb7ba582.
//
// Solidity: function getOwnStake() view returns(uint256)
func (_Scattertoken *ScattertokenCaller) GetOwnStake(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Scattertoken.contract.Call(opts, &out, "getOwnStake")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetOwnStake is a free data retrieval call binding the contract method 0xfb7ba582.
//
// Solidity: function getOwnStake() view returns(uint256)
func (_Scattertoken *ScattertokenSession) GetOwnStake() (*big.Int, error) {
	return _Scattertoken.Contract.GetOwnStake(&_Scattertoken.CallOpts)
}

// GetOwnStake is a free data retrieval call binding the contract method 0xfb7ba582.
//
// Solidity: function getOwnStake() view returns(uint256)
func (_Scattertoken *ScattertokenCallerSession) GetOwnStake() (*big.Int, error) {
	return _Scattertoken.Contract.GetOwnStake(&_Scattertoken.CallOpts)
}

// Name is a free data retrieval call binding the contract method 0x06fdde03.
//
// Solidity: function name() view returns(string)
func (_Scattertoken *ScattertokenCaller) Name(opts *bind.CallOpts) (string, error) {
	var out []interface{}
	err := _Scattertoken.contract.Call(opts, &out, "name")

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// Name is a free data retrieval call binding the contract method 0x06fdde03.
//
// Solidity: function name() view returns(string)
func (_Scattertoken *ScattertokenSession) Name() (string, error) {
	return _Scattertoken.Contract.Name(&_Scattertoken.CallOpts)
}

// Name is a free data retrieval call binding the contract method 0x06fdde03.
//
// Solidity: function name() view returns(string)
func (_Scattertoken *ScattertokenCallerSession) Name() (string, error) {
	return _Scattertoken.Contract.Name(&_Scattertoken.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_Scattertoken *ScattertokenCaller) Owner(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Scattertoken.contract.Call(opts, &out, "owner")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_Scattertoken *ScattertokenSession) Owner() (common.Address, error) {
	return _Scattertoken.Contract.Owner(&_Scattertoken.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_Scattertoken *ScattertokenCallerSession) Owner() (common.Address, error) {
	return _Scattertoken.Contract.Owner(&_Scattertoken.CallOpts)
}

// RequiredModelChallengerStake is a free data retrieval call binding the contract method 0x379a7e8e.
//
// Solidity: function requiredModelChallengerStake() view returns(uint256)
func (_Scattertoken *ScattertokenCaller) RequiredModelChallengerStake(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Scattertoken.contract.Call(opts, &out, "requiredModelChallengerStake")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// RequiredModelChallengerStake is a free data retrieval call binding the contract method 0x379a7e8e.
//
// Solidity: function requiredModelChallengerStake() view returns(uint256)
func (_Scattertoken *ScattertokenSession) RequiredModelChallengerStake() (*big.Int, error) {
	return _Scattertoken.Contract.RequiredModelChallengerStake(&_Scattertoken.CallOpts)
}

// RequiredModelChallengerStake is a free data retrieval call binding the contract method 0x379a7e8e.
//
// Solidity: function requiredModelChallengerStake() view returns(uint256)
func (_Scattertoken *ScattertokenCallerSession) RequiredModelChallengerStake() (*big.Int, error) {
	return _Scattertoken.Contract.RequiredModelChallengerStake(&_Scattertoken.CallOpts)
}

// RequiredModelValidatorStake is a free data retrieval call binding the contract method 0x36cb7f80.
//
// Solidity: function requiredModelValidatorStake() view returns(uint256)
func (_Scattertoken *ScattertokenCaller) RequiredModelValidatorStake(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Scattertoken.contract.Call(opts, &out, "requiredModelValidatorStake")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// RequiredModelValidatorStake is a free data retrieval call binding the contract method 0x36cb7f80.
//
// Solidity: function requiredModelValidatorStake() view returns(uint256)
func (_Scattertoken *ScattertokenSession) RequiredModelValidatorStake() (*big.Int, error) {
	return _Scattertoken.Contract.RequiredModelValidatorStake(&_Scattertoken.CallOpts)
}

// RequiredModelValidatorStake is a free data retrieval call binding the contract method 0x36cb7f80.
//
// Solidity: function requiredModelValidatorStake() view returns(uint256)
func (_Scattertoken *ScattertokenCallerSession) RequiredModelValidatorStake() (*big.Int, error) {
	return _Scattertoken.Contract.RequiredModelValidatorStake(&_Scattertoken.CallOpts)
}

// Symbol is a free data retrieval call binding the contract method 0x95d89b41.
//
// Solidity: function symbol() view returns(string)
func (_Scattertoken *ScattertokenCaller) Symbol(opts *bind.CallOpts) (string, error) {
	var out []interface{}
	err := _Scattertoken.contract.Call(opts, &out, "symbol")

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// Symbol is a free data retrieval call binding the contract method 0x95d89b41.
//
// Solidity: function symbol() view returns(string)
func (_Scattertoken *ScattertokenSession) Symbol() (string, error) {
	return _Scattertoken.Contract.Symbol(&_Scattertoken.CallOpts)
}

// Symbol is a free data retrieval call binding the contract method 0x95d89b41.
//
// Solidity: function symbol() view returns(string)
func (_Scattertoken *ScattertokenCallerSession) Symbol() (string, error) {
	return _Scattertoken.Contract.Symbol(&_Scattertoken.CallOpts)
}

// TotalSupply is a free data retrieval call binding the contract method 0x18160ddd.
//
// Solidity: function totalSupply() view returns(uint256)
func (_Scattertoken *ScattertokenCaller) TotalSupply(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Scattertoken.contract.Call(opts, &out, "totalSupply")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// TotalSupply is a free data retrieval call binding the contract method 0x18160ddd.
//
// Solidity: function totalSupply() view returns(uint256)
func (_Scattertoken *ScattertokenSession) TotalSupply() (*big.Int, error) {
	return _Scattertoken.Contract.TotalSupply(&_Scattertoken.CallOpts)
}

// TotalSupply is a free data retrieval call binding the contract method 0x18160ddd.
//
// Solidity: function totalSupply() view returns(uint256)
func (_Scattertoken *ScattertokenCallerSession) TotalSupply() (*big.Int, error) {
	return _Scattertoken.Contract.TotalSupply(&_Scattertoken.CallOpts)
}

// Approve is a paid mutator transaction binding the contract method 0x095ea7b3.
//
// Solidity: function approve(address spender, uint256 amount) returns(bool)
func (_Scattertoken *ScattertokenTransactor) Approve(opts *bind.TransactOpts, spender common.Address, amount *big.Int) (*types.Transaction, error) {
	return _Scattertoken.contract.Transact(opts, "approve", spender, amount)
}

// Approve is a paid mutator transaction binding the contract method 0x095ea7b3.
//
// Solidity: function approve(address spender, uint256 amount) returns(bool)
func (_Scattertoken *ScattertokenSession) Approve(spender common.Address, amount *big.Int) (*types.Transaction, error) {
	return _Scattertoken.Contract.Approve(&_Scattertoken.TransactOpts, spender, amount)
}

// Approve is a paid mutator transaction binding the contract method 0x095ea7b3.
//
// Solidity: function approve(address spender, uint256 amount) returns(bool)
func (_Scattertoken *ScattertokenTransactorSession) Approve(spender common.Address, amount *big.Int) (*types.Transaction, error) {
	return _Scattertoken.Contract.Approve(&_Scattertoken.TransactOpts, spender, amount)
}

// Burn is a paid mutator transaction binding the contract method 0x42966c68.
//
// Solidity: function burn(uint256 amount) returns()
func (_Scattertoken *ScattertokenTransactor) Burn(opts *bind.TransactOpts, amount *big.Int) (*types.Transaction, error) {
	return _Scattertoken.contract.Transact(opts, "burn", amount)
}

// Burn is a paid mutator transaction binding the contract method 0x42966c68.
//
// Solidity: function burn(uint256 amount) returns()
func (_Scattertoken *ScattertokenSession) Burn(amount *big.Int) (*types.Transaction, error) {
	return _Scattertoken.Contract.Burn(&_Scattertoken.TransactOpts, amount)
}

// Burn is a paid mutator transaction binding the contract method 0x42966c68.
//
// Solidity: function burn(uint256 amount) returns()
func (_Scattertoken *ScattertokenTransactorSession) Burn(amount *big.Int) (*types.Transaction, error) {
	return _Scattertoken.Contract.Burn(&_Scattertoken.TransactOpts, amount)
}

// BurnFrom is a paid mutator transaction binding the contract method 0x79cc6790.
//
// Solidity: function burnFrom(address account, uint256 amount) returns()
func (_Scattertoken *ScattertokenTransactor) BurnFrom(opts *bind.TransactOpts, account common.Address, amount *big.Int) (*types.Transaction, error) {
	return _Scattertoken.contract.Transact(opts, "burnFrom", account, amount)
}

// BurnFrom is a paid mutator transaction binding the contract method 0x79cc6790.
//
// Solidity: function burnFrom(address account, uint256 amount) returns()
func (_Scattertoken *ScattertokenSession) BurnFrom(account common.Address, amount *big.Int) (*types.Transaction, error) {
	return _Scattertoken.Contract.BurnFrom(&_Scattertoken.TransactOpts, account, amount)
}

// BurnFrom is a paid mutator transaction binding the contract method 0x79cc6790.
//
// Solidity: function burnFrom(address account, uint256 amount) returns()
func (_Scattertoken *ScattertokenTransactorSession) BurnFrom(account common.Address, amount *big.Int) (*types.Transaction, error) {
	return _Scattertoken.Contract.BurnFrom(&_Scattertoken.TransactOpts, account, amount)
}

// DecreaseAllowance is a paid mutator transaction binding the contract method 0xa457c2d7.
//
// Solidity: function decreaseAllowance(address spender, uint256 subtractedValue) returns(bool)
func (_Scattertoken *ScattertokenTransactor) DecreaseAllowance(opts *bind.TransactOpts, spender common.Address, subtractedValue *big.Int) (*types.Transaction, error) {
	return _Scattertoken.contract.Transact(opts, "decreaseAllowance", spender, subtractedValue)
}

// DecreaseAllowance is a paid mutator transaction binding the contract method 0xa457c2d7.
//
// Solidity: function decreaseAllowance(address spender, uint256 subtractedValue) returns(bool)
func (_Scattertoken *ScattertokenSession) DecreaseAllowance(spender common.Address, subtractedValue *big.Int) (*types.Transaction, error) {
	return _Scattertoken.Contract.DecreaseAllowance(&_Scattertoken.TransactOpts, spender, subtractedValue)
}

// DecreaseAllowance is a paid mutator transaction binding the contract method 0xa457c2d7.
//
// Solidity: function decreaseAllowance(address spender, uint256 subtractedValue) returns(bool)
func (_Scattertoken *ScattertokenTransactorSession) DecreaseAllowance(spender common.Address, subtractedValue *big.Int) (*types.Transaction, error) {
	return _Scattertoken.Contract.DecreaseAllowance(&_Scattertoken.TransactOpts, spender, subtractedValue)
}

// DonateToLottery is a paid mutator transaction binding the contract method 0x824205d1.
//
// Solidity: function donateToLottery(address requestorAddress, string topicName) returns()
func (_Scattertoken *ScattertokenTransactor) DonateToLottery(opts *bind.TransactOpts, requestorAddress common.Address, topicName string) (*types.Transaction, error) {
	return _Scattertoken.contract.Transact(opts, "donateToLottery", requestorAddress, topicName)
}

// DonateToLottery is a paid mutator transaction binding the contract method 0x824205d1.
//
// Solidity: function donateToLottery(address requestorAddress, string topicName) returns()
func (_Scattertoken *ScattertokenSession) DonateToLottery(requestorAddress common.Address, topicName string) (*types.Transaction, error) {
	return _Scattertoken.Contract.DonateToLottery(&_Scattertoken.TransactOpts, requestorAddress, topicName)
}

// DonateToLottery is a paid mutator transaction binding the contract method 0x824205d1.
//
// Solidity: function donateToLottery(address requestorAddress, string topicName) returns()
func (_Scattertoken *ScattertokenTransactorSession) DonateToLottery(requestorAddress common.Address, topicName string) (*types.Transaction, error) {
	return _Scattertoken.Contract.DonateToLottery(&_Scattertoken.TransactOpts, requestorAddress, topicName)
}

// IncreaseAllowance is a paid mutator transaction binding the contract method 0x39509351.
//
// Solidity: function increaseAllowance(address spender, uint256 addedValue) returns(bool)
func (_Scattertoken *ScattertokenTransactor) IncreaseAllowance(opts *bind.TransactOpts, spender common.Address, addedValue *big.Int) (*types.Transaction, error) {
	return _Scattertoken.contract.Transact(opts, "increaseAllowance", spender, addedValue)
}

// IncreaseAllowance is a paid mutator transaction binding the contract method 0x39509351.
//
// Solidity: function increaseAllowance(address spender, uint256 addedValue) returns(bool)
func (_Scattertoken *ScattertokenSession) IncreaseAllowance(spender common.Address, addedValue *big.Int) (*types.Transaction, error) {
	return _Scattertoken.Contract.IncreaseAllowance(&_Scattertoken.TransactOpts, spender, addedValue)
}

// IncreaseAllowance is a paid mutator transaction binding the contract method 0x39509351.
//
// Solidity: function increaseAllowance(address spender, uint256 addedValue) returns(bool)
func (_Scattertoken *ScattertokenTransactorSession) IncreaseAllowance(spender common.Address, addedValue *big.Int) (*types.Transaction, error) {
	return _Scattertoken.Contract.IncreaseAllowance(&_Scattertoken.TransactOpts, spender, addedValue)
}

// PunishRogueChallengers is a paid mutator transaction binding the contract method 0x6cd14793.
//
// Solidity: function punishRogueChallengers(address requestorAddress, string topicName) returns()
func (_Scattertoken *ScattertokenTransactor) PunishRogueChallengers(opts *bind.TransactOpts, requestorAddress common.Address, topicName string) (*types.Transaction, error) {
	return _Scattertoken.contract.Transact(opts, "punishRogueChallengers", requestorAddress, topicName)
}

// PunishRogueChallengers is a paid mutator transaction binding the contract method 0x6cd14793.
//
// Solidity: function punishRogueChallengers(address requestorAddress, string topicName) returns()
func (_Scattertoken *ScattertokenSession) PunishRogueChallengers(requestorAddress common.Address, topicName string) (*types.Transaction, error) {
	return _Scattertoken.Contract.PunishRogueChallengers(&_Scattertoken.TransactOpts, requestorAddress, topicName)
}

// PunishRogueChallengers is a paid mutator transaction binding the contract method 0x6cd14793.
//
// Solidity: function punishRogueChallengers(address requestorAddress, string topicName) returns()
func (_Scattertoken *ScattertokenTransactorSession) PunishRogueChallengers(requestorAddress common.Address, topicName string) (*types.Transaction, error) {
	return _Scattertoken.Contract.PunishRogueChallengers(&_Scattertoken.TransactOpts, requestorAddress, topicName)
}

// PunishRogueTrainers is a paid mutator transaction binding the contract method 0xf9d79c68.
//
// Solidity: function punishRogueTrainers(address requestorAddress, string topicName) returns()
func (_Scattertoken *ScattertokenTransactor) PunishRogueTrainers(opts *bind.TransactOpts, requestorAddress common.Address, topicName string) (*types.Transaction, error) {
	return _Scattertoken.contract.Transact(opts, "punishRogueTrainers", requestorAddress, topicName)
}

// PunishRogueTrainers is a paid mutator transaction binding the contract method 0xf9d79c68.
//
// Solidity: function punishRogueTrainers(address requestorAddress, string topicName) returns()
func (_Scattertoken *ScattertokenSession) PunishRogueTrainers(requestorAddress common.Address, topicName string) (*types.Transaction, error) {
	return _Scattertoken.Contract.PunishRogueTrainers(&_Scattertoken.TransactOpts, requestorAddress, topicName)
}

// PunishRogueTrainers is a paid mutator transaction binding the contract method 0xf9d79c68.
//
// Solidity: function punishRogueTrainers(address requestorAddress, string topicName) returns()
func (_Scattertoken *ScattertokenTransactorSession) PunishRogueTrainers(requestorAddress common.Address, topicName string) (*types.Transaction, error) {
	return _Scattertoken.Contract.PunishRogueTrainers(&_Scattertoken.TransactOpts, requestorAddress, topicName)
}

// PunishRogueValidators is a paid mutator transaction binding the contract method 0xda0e3f13.
//
// Solidity: function punishRogueValidators(address requestorAddress, string topicName) returns()
func (_Scattertoken *ScattertokenTransactor) PunishRogueValidators(opts *bind.TransactOpts, requestorAddress common.Address, topicName string) (*types.Transaction, error) {
	return _Scattertoken.contract.Transact(opts, "punishRogueValidators", requestorAddress, topicName)
}

// PunishRogueValidators is a paid mutator transaction binding the contract method 0xda0e3f13.
//
// Solidity: function punishRogueValidators(address requestorAddress, string topicName) returns()
func (_Scattertoken *ScattertokenSession) PunishRogueValidators(requestorAddress common.Address, topicName string) (*types.Transaction, error) {
	return _Scattertoken.Contract.PunishRogueValidators(&_Scattertoken.TransactOpts, requestorAddress, topicName)
}

// PunishRogueValidators is a paid mutator transaction binding the contract method 0xda0e3f13.
//
// Solidity: function punishRogueValidators(address requestorAddress, string topicName) returns()
func (_Scattertoken *ScattertokenTransactorSession) PunishRogueValidators(requestorAddress common.Address, topicName string) (*types.Transaction, error) {
	return _Scattertoken.Contract.PunishRogueValidators(&_Scattertoken.TransactOpts, requestorAddress, topicName)
}

// RemoveStake is a paid mutator transaction binding the contract method 0x939624ab.
//
// Solidity: function removeStake(uint256 amount) returns()
func (_Scattertoken *ScattertokenTransactor) RemoveStake(opts *bind.TransactOpts, amount *big.Int) (*types.Transaction, error) {
	return _Scattertoken.contract.Transact(opts, "removeStake", amount)
}

// RemoveStake is a paid mutator transaction binding the contract method 0x939624ab.
//
// Solidity: function removeStake(uint256 amount) returns()
func (_Scattertoken *ScattertokenSession) RemoveStake(amount *big.Int) (*types.Transaction, error) {
	return _Scattertoken.Contract.RemoveStake(&_Scattertoken.TransactOpts, amount)
}

// RemoveStake is a paid mutator transaction binding the contract method 0x939624ab.
//
// Solidity: function removeStake(uint256 amount) returns()
func (_Scattertoken *ScattertokenTransactorSession) RemoveStake(amount *big.Int) (*types.Transaction, error) {
	return _Scattertoken.Contract.RemoveStake(&_Scattertoken.TransactOpts, amount)
}

// RequestorLockToken is a paid mutator transaction binding the contract method 0x42a0f9bf.
//
// Solidity: function requestorLockToken(address requestorAddress, string topicName, uint256 amount) returns()
func (_Scattertoken *ScattertokenTransactor) RequestorLockToken(opts *bind.TransactOpts, requestorAddress common.Address, topicName string, amount *big.Int) (*types.Transaction, error) {
	return _Scattertoken.contract.Transact(opts, "requestorLockToken", requestorAddress, topicName, amount)
}

// RequestorLockToken is a paid mutator transaction binding the contract method 0x42a0f9bf.
//
// Solidity: function requestorLockToken(address requestorAddress, string topicName, uint256 amount) returns()
func (_Scattertoken *ScattertokenSession) RequestorLockToken(requestorAddress common.Address, topicName string, amount *big.Int) (*types.Transaction, error) {
	return _Scattertoken.Contract.RequestorLockToken(&_Scattertoken.TransactOpts, requestorAddress, topicName, amount)
}

// RequestorLockToken is a paid mutator transaction binding the contract method 0x42a0f9bf.
//
// Solidity: function requestorLockToken(address requestorAddress, string topicName, uint256 amount) returns()
func (_Scattertoken *ScattertokenTransactorSession) RequestorLockToken(requestorAddress common.Address, topicName string, amount *big.Int) (*types.Transaction, error) {
	return _Scattertoken.Contract.RequestorLockToken(&_Scattertoken.TransactOpts, requestorAddress, topicName, amount)
}

// ReturnTokensToRequestor is a paid mutator transaction binding the contract method 0xf5fc44c7.
//
// Solidity: function returnTokensToRequestor(address requestorAddress, string topicName) returns()
func (_Scattertoken *ScattertokenTransactor) ReturnTokensToRequestor(opts *bind.TransactOpts, requestorAddress common.Address, topicName string) (*types.Transaction, error) {
	return _Scattertoken.contract.Transact(opts, "returnTokensToRequestor", requestorAddress, topicName)
}

// ReturnTokensToRequestor is a paid mutator transaction binding the contract method 0xf5fc44c7.
//
// Solidity: function returnTokensToRequestor(address requestorAddress, string topicName) returns()
func (_Scattertoken *ScattertokenSession) ReturnTokensToRequestor(requestorAddress common.Address, topicName string) (*types.Transaction, error) {
	return _Scattertoken.Contract.ReturnTokensToRequestor(&_Scattertoken.TransactOpts, requestorAddress, topicName)
}

// ReturnTokensToRequestor is a paid mutator transaction binding the contract method 0xf5fc44c7.
//
// Solidity: function returnTokensToRequestor(address requestorAddress, string topicName) returns()
func (_Scattertoken *ScattertokenTransactorSession) ReturnTokensToRequestor(requestorAddress common.Address, topicName string) (*types.Transaction, error) {
	return _Scattertoken.Contract.ReturnTokensToRequestor(&_Scattertoken.TransactOpts, requestorAddress, topicName)
}

// ReturnTokensToTrainers is a paid mutator transaction binding the contract method 0x8a1fea68.
//
// Solidity: function returnTokensToTrainers(address requestorAddress, string topicName) returns()
func (_Scattertoken *ScattertokenTransactor) ReturnTokensToTrainers(opts *bind.TransactOpts, requestorAddress common.Address, topicName string) (*types.Transaction, error) {
	return _Scattertoken.contract.Transact(opts, "returnTokensToTrainers", requestorAddress, topicName)
}

// ReturnTokensToTrainers is a paid mutator transaction binding the contract method 0x8a1fea68.
//
// Solidity: function returnTokensToTrainers(address requestorAddress, string topicName) returns()
func (_Scattertoken *ScattertokenSession) ReturnTokensToTrainers(requestorAddress common.Address, topicName string) (*types.Transaction, error) {
	return _Scattertoken.Contract.ReturnTokensToTrainers(&_Scattertoken.TransactOpts, requestorAddress, topicName)
}

// ReturnTokensToTrainers is a paid mutator transaction binding the contract method 0x8a1fea68.
//
// Solidity: function returnTokensToTrainers(address requestorAddress, string topicName) returns()
func (_Scattertoken *ScattertokenTransactorSession) ReturnTokensToTrainers(requestorAddress common.Address, topicName string) (*types.Transaction, error) {
	return _Scattertoken.Contract.ReturnTokensToTrainers(&_Scattertoken.TransactOpts, requestorAddress, topicName)
}

// RewardBenevolentTrainers is a paid mutator transaction binding the contract method 0x968c2000.
//
// Solidity: function rewardBenevolentTrainers(address requestorAddress, string topicName) returns()
func (_Scattertoken *ScattertokenTransactor) RewardBenevolentTrainers(opts *bind.TransactOpts, requestorAddress common.Address, topicName string) (*types.Transaction, error) {
	return _Scattertoken.contract.Transact(opts, "rewardBenevolentTrainers", requestorAddress, topicName)
}

// RewardBenevolentTrainers is a paid mutator transaction binding the contract method 0x968c2000.
//
// Solidity: function rewardBenevolentTrainers(address requestorAddress, string topicName) returns()
func (_Scattertoken *ScattertokenSession) RewardBenevolentTrainers(requestorAddress common.Address, topicName string) (*types.Transaction, error) {
	return _Scattertoken.Contract.RewardBenevolentTrainers(&_Scattertoken.TransactOpts, requestorAddress, topicName)
}

// RewardBenevolentTrainers is a paid mutator transaction binding the contract method 0x968c2000.
//
// Solidity: function rewardBenevolentTrainers(address requestorAddress, string topicName) returns()
func (_Scattertoken *ScattertokenTransactorSession) RewardBenevolentTrainers(requestorAddress common.Address, topicName string) (*types.Transaction, error) {
	return _Scattertoken.Contract.RewardBenevolentTrainers(&_Scattertoken.TransactOpts, requestorAddress, topicName)
}

// RewardBenevolentValidators is a paid mutator transaction binding the contract method 0x2ca23869.
//
// Solidity: function rewardBenevolentValidators(address requestorAddress, string topicName) returns()
func (_Scattertoken *ScattertokenTransactor) RewardBenevolentValidators(opts *bind.TransactOpts, requestorAddress common.Address, topicName string) (*types.Transaction, error) {
	return _Scattertoken.contract.Transact(opts, "rewardBenevolentValidators", requestorAddress, topicName)
}

// RewardBenevolentValidators is a paid mutator transaction binding the contract method 0x2ca23869.
//
// Solidity: function rewardBenevolentValidators(address requestorAddress, string topicName) returns()
func (_Scattertoken *ScattertokenSession) RewardBenevolentValidators(requestorAddress common.Address, topicName string) (*types.Transaction, error) {
	return _Scattertoken.Contract.RewardBenevolentValidators(&_Scattertoken.TransactOpts, requestorAddress, topicName)
}

// RewardBenevolentValidators is a paid mutator transaction binding the contract method 0x2ca23869.
//
// Solidity: function rewardBenevolentValidators(address requestorAddress, string topicName) returns()
func (_Scattertoken *ScattertokenTransactorSession) RewardBenevolentValidators(requestorAddress common.Address, topicName string) (*types.Transaction, error) {
	return _Scattertoken.Contract.RewardBenevolentValidators(&_Scattertoken.TransactOpts, requestorAddress, topicName)
}

// RewardChallengers is a paid mutator transaction binding the contract method 0x17ede4b4.
//
// Solidity: function rewardChallengers(address requestorAddress, string topicName) returns()
func (_Scattertoken *ScattertokenTransactor) RewardChallengers(opts *bind.TransactOpts, requestorAddress common.Address, topicName string) (*types.Transaction, error) {
	return _Scattertoken.contract.Transact(opts, "rewardChallengers", requestorAddress, topicName)
}

// RewardChallengers is a paid mutator transaction binding the contract method 0x17ede4b4.
//
// Solidity: function rewardChallengers(address requestorAddress, string topicName) returns()
func (_Scattertoken *ScattertokenSession) RewardChallengers(requestorAddress common.Address, topicName string) (*types.Transaction, error) {
	return _Scattertoken.Contract.RewardChallengers(&_Scattertoken.TransactOpts, requestorAddress, topicName)
}

// RewardChallengers is a paid mutator transaction binding the contract method 0x17ede4b4.
//
// Solidity: function rewardChallengers(address requestorAddress, string topicName) returns()
func (_Scattertoken *ScattertokenTransactorSession) RewardChallengers(requestorAddress common.Address, topicName string) (*types.Transaction, error) {
	return _Scattertoken.Contract.RewardChallengers(&_Scattertoken.TransactOpts, requestorAddress, topicName)
}

// SetEvaluationJobTokenContract is a paid mutator transaction binding the contract method 0x71f65bd7.
//
// Solidity: function setEvaluationJobTokenContract(address newAddress) returns()
func (_Scattertoken *ScattertokenTransactor) SetEvaluationJobTokenContract(opts *bind.TransactOpts, newAddress common.Address) (*types.Transaction, error) {
	return _Scattertoken.contract.Transact(opts, "setEvaluationJobTokenContract", newAddress)
}

// SetEvaluationJobTokenContract is a paid mutator transaction binding the contract method 0x71f65bd7.
//
// Solidity: function setEvaluationJobTokenContract(address newAddress) returns()
func (_Scattertoken *ScattertokenSession) SetEvaluationJobTokenContract(newAddress common.Address) (*types.Transaction, error) {
	return _Scattertoken.Contract.SetEvaluationJobTokenContract(&_Scattertoken.TransactOpts, newAddress)
}

// SetEvaluationJobTokenContract is a paid mutator transaction binding the contract method 0x71f65bd7.
//
// Solidity: function setEvaluationJobTokenContract(address newAddress) returns()
func (_Scattertoken *ScattertokenTransactorSession) SetEvaluationJobTokenContract(newAddress common.Address) (*types.Transaction, error) {
	return _Scattertoken.Contract.SetEvaluationJobTokenContract(&_Scattertoken.TransactOpts, newAddress)
}

// SetReputationManagerContract is a paid mutator transaction binding the contract method 0x0b15127b.
//
// Solidity: function setReputationManagerContract(address newAddress) returns()
func (_Scattertoken *ScattertokenTransactor) SetReputationManagerContract(opts *bind.TransactOpts, newAddress common.Address) (*types.Transaction, error) {
	return _Scattertoken.contract.Transact(opts, "setReputationManagerContract", newAddress)
}

// SetReputationManagerContract is a paid mutator transaction binding the contract method 0x0b15127b.
//
// Solidity: function setReputationManagerContract(address newAddress) returns()
func (_Scattertoken *ScattertokenSession) SetReputationManagerContract(newAddress common.Address) (*types.Transaction, error) {
	return _Scattertoken.Contract.SetReputationManagerContract(&_Scattertoken.TransactOpts, newAddress)
}

// SetReputationManagerContract is a paid mutator transaction binding the contract method 0x0b15127b.
//
// Solidity: function setReputationManagerContract(address newAddress) returns()
func (_Scattertoken *ScattertokenTransactorSession) SetReputationManagerContract(newAddress common.Address) (*types.Transaction, error) {
	return _Scattertoken.Contract.SetReputationManagerContract(&_Scattertoken.TransactOpts, newAddress)
}

// SetScatterProtocolAddress is a paid mutator transaction binding the contract method 0xbea55db9.
//
// Solidity: function setScatterProtocolAddress(address newAddress) returns()
func (_Scattertoken *ScattertokenTransactor) SetScatterProtocolAddress(opts *bind.TransactOpts, newAddress common.Address) (*types.Transaction, error) {
	return _Scattertoken.contract.Transact(opts, "setScatterProtocolAddress", newAddress)
}

// SetScatterProtocolAddress is a paid mutator transaction binding the contract method 0xbea55db9.
//
// Solidity: function setScatterProtocolAddress(address newAddress) returns()
func (_Scattertoken *ScattertokenSession) SetScatterProtocolAddress(newAddress common.Address) (*types.Transaction, error) {
	return _Scattertoken.Contract.SetScatterProtocolAddress(&_Scattertoken.TransactOpts, newAddress)
}

// SetScatterProtocolAddress is a paid mutator transaction binding the contract method 0xbea55db9.
//
// Solidity: function setScatterProtocolAddress(address newAddress) returns()
func (_Scattertoken *ScattertokenTransactorSession) SetScatterProtocolAddress(newAddress common.Address) (*types.Transaction, error) {
	return _Scattertoken.Contract.SetScatterProtocolAddress(&_Scattertoken.TransactOpts, newAddress)
}

// SetVoteManagerContract is a paid mutator transaction binding the contract method 0x42d098e5.
//
// Solidity: function setVoteManagerContract(address newAddress) returns()
func (_Scattertoken *ScattertokenTransactor) SetVoteManagerContract(opts *bind.TransactOpts, newAddress common.Address) (*types.Transaction, error) {
	return _Scattertoken.contract.Transact(opts, "setVoteManagerContract", newAddress)
}

// SetVoteManagerContract is a paid mutator transaction binding the contract method 0x42d098e5.
//
// Solidity: function setVoteManagerContract(address newAddress) returns()
func (_Scattertoken *ScattertokenSession) SetVoteManagerContract(newAddress common.Address) (*types.Transaction, error) {
	return _Scattertoken.Contract.SetVoteManagerContract(&_Scattertoken.TransactOpts, newAddress)
}

// SetVoteManagerContract is a paid mutator transaction binding the contract method 0x42d098e5.
//
// Solidity: function setVoteManagerContract(address newAddress) returns()
func (_Scattertoken *ScattertokenTransactorSession) SetVoteManagerContract(newAddress common.Address) (*types.Transaction, error) {
	return _Scattertoken.Contract.SetVoteManagerContract(&_Scattertoken.TransactOpts, newAddress)
}

// StakeToken is a paid mutator transaction binding the contract method 0xcda6b847.
//
// Solidity: function stakeToken(uint256 amount) returns()
func (_Scattertoken *ScattertokenTransactor) StakeToken(opts *bind.TransactOpts, amount *big.Int) (*types.Transaction, error) {
	return _Scattertoken.contract.Transact(opts, "stakeToken", amount)
}

// StakeToken is a paid mutator transaction binding the contract method 0xcda6b847.
//
// Solidity: function stakeToken(uint256 amount) returns()
func (_Scattertoken *ScattertokenSession) StakeToken(amount *big.Int) (*types.Transaction, error) {
	return _Scattertoken.Contract.StakeToken(&_Scattertoken.TransactOpts, amount)
}

// StakeToken is a paid mutator transaction binding the contract method 0xcda6b847.
//
// Solidity: function stakeToken(uint256 amount) returns()
func (_Scattertoken *ScattertokenTransactorSession) StakeToken(amount *big.Int) (*types.Transaction, error) {
	return _Scattertoken.Contract.StakeToken(&_Scattertoken.TransactOpts, amount)
}

// TrainerLockToken is a paid mutator transaction binding the contract method 0xccd712d5.
//
// Solidity: function trainerLockToken(address trainerAddress, address requestorAddress, string topicName, uint256 amount) returns()
func (_Scattertoken *ScattertokenTransactor) TrainerLockToken(opts *bind.TransactOpts, trainerAddress common.Address, requestorAddress common.Address, topicName string, amount *big.Int) (*types.Transaction, error) {
	return _Scattertoken.contract.Transact(opts, "trainerLockToken", trainerAddress, requestorAddress, topicName, amount)
}

// TrainerLockToken is a paid mutator transaction binding the contract method 0xccd712d5.
//
// Solidity: function trainerLockToken(address trainerAddress, address requestorAddress, string topicName, uint256 amount) returns()
func (_Scattertoken *ScattertokenSession) TrainerLockToken(trainerAddress common.Address, requestorAddress common.Address, topicName string, amount *big.Int) (*types.Transaction, error) {
	return _Scattertoken.Contract.TrainerLockToken(&_Scattertoken.TransactOpts, trainerAddress, requestorAddress, topicName, amount)
}

// TrainerLockToken is a paid mutator transaction binding the contract method 0xccd712d5.
//
// Solidity: function trainerLockToken(address trainerAddress, address requestorAddress, string topicName, uint256 amount) returns()
func (_Scattertoken *ScattertokenTransactorSession) TrainerLockToken(trainerAddress common.Address, requestorAddress common.Address, topicName string, amount *big.Int) (*types.Transaction, error) {
	return _Scattertoken.Contract.TrainerLockToken(&_Scattertoken.TransactOpts, trainerAddress, requestorAddress, topicName, amount)
}

// Transfer is a paid mutator transaction binding the contract method 0xa9059cbb.
//
// Solidity: function transfer(address to, uint256 amount) returns(bool)
func (_Scattertoken *ScattertokenTransactor) Transfer(opts *bind.TransactOpts, to common.Address, amount *big.Int) (*types.Transaction, error) {
	return _Scattertoken.contract.Transact(opts, "transfer", to, amount)
}

// Transfer is a paid mutator transaction binding the contract method 0xa9059cbb.
//
// Solidity: function transfer(address to, uint256 amount) returns(bool)
func (_Scattertoken *ScattertokenSession) Transfer(to common.Address, amount *big.Int) (*types.Transaction, error) {
	return _Scattertoken.Contract.Transfer(&_Scattertoken.TransactOpts, to, amount)
}

// Transfer is a paid mutator transaction binding the contract method 0xa9059cbb.
//
// Solidity: function transfer(address to, uint256 amount) returns(bool)
func (_Scattertoken *ScattertokenTransactorSession) Transfer(to common.Address, amount *big.Int) (*types.Transaction, error) {
	return _Scattertoken.Contract.Transfer(&_Scattertoken.TransactOpts, to, amount)
}

// TransferFrom is a paid mutator transaction binding the contract method 0x23b872dd.
//
// Solidity: function transferFrom(address from, address to, uint256 amount) returns(bool)
func (_Scattertoken *ScattertokenTransactor) TransferFrom(opts *bind.TransactOpts, from common.Address, to common.Address, amount *big.Int) (*types.Transaction, error) {
	return _Scattertoken.contract.Transact(opts, "transferFrom", from, to, amount)
}

// TransferFrom is a paid mutator transaction binding the contract method 0x23b872dd.
//
// Solidity: function transferFrom(address from, address to, uint256 amount) returns(bool)
func (_Scattertoken *ScattertokenSession) TransferFrom(from common.Address, to common.Address, amount *big.Int) (*types.Transaction, error) {
	return _Scattertoken.Contract.TransferFrom(&_Scattertoken.TransactOpts, from, to, amount)
}

// TransferFrom is a paid mutator transaction binding the contract method 0x23b872dd.
//
// Solidity: function transferFrom(address from, address to, uint256 amount) returns(bool)
func (_Scattertoken *ScattertokenTransactorSession) TransferFrom(from common.Address, to common.Address, amount *big.Int) (*types.Transaction, error) {
	return _Scattertoken.Contract.TransferFrom(&_Scattertoken.TransactOpts, from, to, amount)
}

// ScattertokenApprovalIterator is returned from FilterApproval and is used to iterate over the raw logs and unpacked data for Approval events raised by the Scattertoken contract.
type ScattertokenApprovalIterator struct {
	Event *ScattertokenApproval // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ScattertokenApprovalIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ScattertokenApproval)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ScattertokenApproval)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ScattertokenApprovalIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ScattertokenApprovalIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ScattertokenApproval represents a Approval event raised by the Scattertoken contract.
type ScattertokenApproval struct {
	Owner   common.Address
	Spender common.Address
	Value   *big.Int
	Raw     types.Log // Blockchain specific contextual infos
}

// FilterApproval is a free log retrieval operation binding the contract event 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925.
//
// Solidity: event Approval(address indexed owner, address indexed spender, uint256 value)
func (_Scattertoken *ScattertokenFilterer) FilterApproval(opts *bind.FilterOpts, owner []common.Address, spender []common.Address) (*ScattertokenApprovalIterator, error) {

	var ownerRule []interface{}
	for _, ownerItem := range owner {
		ownerRule = append(ownerRule, ownerItem)
	}
	var spenderRule []interface{}
	for _, spenderItem := range spender {
		spenderRule = append(spenderRule, spenderItem)
	}

	logs, sub, err := _Scattertoken.contract.FilterLogs(opts, "Approval", ownerRule, spenderRule)
	if err != nil {
		return nil, err
	}
	return &ScattertokenApprovalIterator{contract: _Scattertoken.contract, event: "Approval", logs: logs, sub: sub}, nil
}

// WatchApproval is a free log subscription operation binding the contract event 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925.
//
// Solidity: event Approval(address indexed owner, address indexed spender, uint256 value)
func (_Scattertoken *ScattertokenFilterer) WatchApproval(opts *bind.WatchOpts, sink chan<- *ScattertokenApproval, owner []common.Address, spender []common.Address) (event.Subscription, error) {

	var ownerRule []interface{}
	for _, ownerItem := range owner {
		ownerRule = append(ownerRule, ownerItem)
	}
	var spenderRule []interface{}
	for _, spenderItem := range spender {
		spenderRule = append(spenderRule, spenderItem)
	}

	logs, sub, err := _Scattertoken.contract.WatchLogs(opts, "Approval", ownerRule, spenderRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ScattertokenApproval)
				if err := _Scattertoken.contract.UnpackLog(event, "Approval", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseApproval is a log parse operation binding the contract event 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925.
//
// Solidity: event Approval(address indexed owner, address indexed spender, uint256 value)
func (_Scattertoken *ScattertokenFilterer) ParseApproval(log types.Log) (*ScattertokenApproval, error) {
	event := new(ScattertokenApproval)
	if err := _Scattertoken.contract.UnpackLog(event, "Approval", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ScattertokenTokensStakedIterator is returned from FilterTokensStaked and is used to iterate over the raw logs and unpacked data for TokensStaked events raised by the Scattertoken contract.
type ScattertokenTokensStakedIterator struct {
	Event *ScattertokenTokensStaked // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ScattertokenTokensStakedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ScattertokenTokensStaked)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ScattertokenTokensStaked)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ScattertokenTokensStakedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ScattertokenTokensStakedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ScattertokenTokensStaked represents a TokensStaked event raised by the Scattertoken contract.
type ScattertokenTokensStaked struct {
	From   common.Address
	Amount *big.Int
	Raw    types.Log // Blockchain specific contextual infos
}

// FilterTokensStaked is a free log retrieval operation binding the contract event 0xb539ca1e5c8d398ddf1c41c30166f33404941683be4683319b57669a93dad4ef.
//
// Solidity: event TokensStaked(address from, uint256 amount)
func (_Scattertoken *ScattertokenFilterer) FilterTokensStaked(opts *bind.FilterOpts) (*ScattertokenTokensStakedIterator, error) {

	logs, sub, err := _Scattertoken.contract.FilterLogs(opts, "TokensStaked")
	if err != nil {
		return nil, err
	}
	return &ScattertokenTokensStakedIterator{contract: _Scattertoken.contract, event: "TokensStaked", logs: logs, sub: sub}, nil
}

// WatchTokensStaked is a free log subscription operation binding the contract event 0xb539ca1e5c8d398ddf1c41c30166f33404941683be4683319b57669a93dad4ef.
//
// Solidity: event TokensStaked(address from, uint256 amount)
func (_Scattertoken *ScattertokenFilterer) WatchTokensStaked(opts *bind.WatchOpts, sink chan<- *ScattertokenTokensStaked) (event.Subscription, error) {

	logs, sub, err := _Scattertoken.contract.WatchLogs(opts, "TokensStaked")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ScattertokenTokensStaked)
				if err := _Scattertoken.contract.UnpackLog(event, "TokensStaked", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseTokensStaked is a log parse operation binding the contract event 0xb539ca1e5c8d398ddf1c41c30166f33404941683be4683319b57669a93dad4ef.
//
// Solidity: event TokensStaked(address from, uint256 amount)
func (_Scattertoken *ScattertokenFilterer) ParseTokensStaked(log types.Log) (*ScattertokenTokensStaked, error) {
	event := new(ScattertokenTokensStaked)
	if err := _Scattertoken.contract.UnpackLog(event, "TokensStaked", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ScattertokenTokensUnstakedIterator is returned from FilterTokensUnstaked and is used to iterate over the raw logs and unpacked data for TokensUnstaked events raised by the Scattertoken contract.
type ScattertokenTokensUnstakedIterator struct {
	Event *ScattertokenTokensUnstaked // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ScattertokenTokensUnstakedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ScattertokenTokensUnstaked)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ScattertokenTokensUnstaked)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ScattertokenTokensUnstakedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ScattertokenTokensUnstakedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ScattertokenTokensUnstaked represents a TokensUnstaked event raised by the Scattertoken contract.
type ScattertokenTokensUnstaked struct {
	To     common.Address
	Amount *big.Int
	Raw    types.Log // Blockchain specific contextual infos
}

// FilterTokensUnstaked is a free log retrieval operation binding the contract event 0x9845e367b683334e5c0b12d7b81721ac518e649376fa65e3d68324e8f34f2679.
//
// Solidity: event TokensUnstaked(address to, uint256 amount)
func (_Scattertoken *ScattertokenFilterer) FilterTokensUnstaked(opts *bind.FilterOpts) (*ScattertokenTokensUnstakedIterator, error) {

	logs, sub, err := _Scattertoken.contract.FilterLogs(opts, "TokensUnstaked")
	if err != nil {
		return nil, err
	}
	return &ScattertokenTokensUnstakedIterator{contract: _Scattertoken.contract, event: "TokensUnstaked", logs: logs, sub: sub}, nil
}

// WatchTokensUnstaked is a free log subscription operation binding the contract event 0x9845e367b683334e5c0b12d7b81721ac518e649376fa65e3d68324e8f34f2679.
//
// Solidity: event TokensUnstaked(address to, uint256 amount)
func (_Scattertoken *ScattertokenFilterer) WatchTokensUnstaked(opts *bind.WatchOpts, sink chan<- *ScattertokenTokensUnstaked) (event.Subscription, error) {

	logs, sub, err := _Scattertoken.contract.WatchLogs(opts, "TokensUnstaked")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ScattertokenTokensUnstaked)
				if err := _Scattertoken.contract.UnpackLog(event, "TokensUnstaked", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseTokensUnstaked is a log parse operation binding the contract event 0x9845e367b683334e5c0b12d7b81721ac518e649376fa65e3d68324e8f34f2679.
//
// Solidity: event TokensUnstaked(address to, uint256 amount)
func (_Scattertoken *ScattertokenFilterer) ParseTokensUnstaked(log types.Log) (*ScattertokenTokensUnstaked, error) {
	event := new(ScattertokenTokensUnstaked)
	if err := _Scattertoken.contract.UnpackLog(event, "TokensUnstaked", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ScattertokenTransferIterator is returned from FilterTransfer and is used to iterate over the raw logs and unpacked data for Transfer events raised by the Scattertoken contract.
type ScattertokenTransferIterator struct {
	Event *ScattertokenTransfer // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ScattertokenTransferIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ScattertokenTransfer)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ScattertokenTransfer)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ScattertokenTransferIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ScattertokenTransferIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ScattertokenTransfer represents a Transfer event raised by the Scattertoken contract.
type ScattertokenTransfer struct {
	From  common.Address
	To    common.Address
	Value *big.Int
	Raw   types.Log // Blockchain specific contextual infos
}

// FilterTransfer is a free log retrieval operation binding the contract event 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef.
//
// Solidity: event Transfer(address indexed from, address indexed to, uint256 value)
func (_Scattertoken *ScattertokenFilterer) FilterTransfer(opts *bind.FilterOpts, from []common.Address, to []common.Address) (*ScattertokenTransferIterator, error) {

	var fromRule []interface{}
	for _, fromItem := range from {
		fromRule = append(fromRule, fromItem)
	}
	var toRule []interface{}
	for _, toItem := range to {
		toRule = append(toRule, toItem)
	}

	logs, sub, err := _Scattertoken.contract.FilterLogs(opts, "Transfer", fromRule, toRule)
	if err != nil {
		return nil, err
	}
	return &ScattertokenTransferIterator{contract: _Scattertoken.contract, event: "Transfer", logs: logs, sub: sub}, nil
}

// WatchTransfer is a free log subscription operation binding the contract event 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef.
//
// Solidity: event Transfer(address indexed from, address indexed to, uint256 value)
func (_Scattertoken *ScattertokenFilterer) WatchTransfer(opts *bind.WatchOpts, sink chan<- *ScattertokenTransfer, from []common.Address, to []common.Address) (event.Subscription, error) {

	var fromRule []interface{}
	for _, fromItem := range from {
		fromRule = append(fromRule, fromItem)
	}
	var toRule []interface{}
	for _, toItem := range to {
		toRule = append(toRule, toItem)
	}

	logs, sub, err := _Scattertoken.contract.WatchLogs(opts, "Transfer", fromRule, toRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ScattertokenTransfer)
				if err := _Scattertoken.contract.UnpackLog(event, "Transfer", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseTransfer is a log parse operation binding the contract event 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef.
//
// Solidity: event Transfer(address indexed from, address indexed to, uint256 value)
func (_Scattertoken *ScattertokenFilterer) ParseTransfer(log types.Log) (*ScattertokenTransfer, error) {
	event := new(ScattertokenTransfer)
	if err := _Scattertoken.contract.UnpackLog(event, "Transfer", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}
