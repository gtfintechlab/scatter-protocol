// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package scatterprotocol

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// ScatterprotocolMetaData contains all meta data concerning the Scatterprotocol contract.
var ScatterprotocolMetaData = &bind.MetaData{
	ABI: "[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"cap\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"trainingTokenContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"evaluationTokenContract\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"addStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"topicName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"jobCid\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"requestorAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxTrainerCount\",\"type\":\"uint256\"}],\"name\":\"addTopicForRequestor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"addressToTopics\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"addressToTrainingJobInfo\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"trainingJobCid\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"blockReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"destroy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"elevateToCosmosValidator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"elevateToModelValidator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"evaluationJobContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getAccountStake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwnStake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"skip\",\"type\":\"int256\"}],\"name\":\"getRequestorAddresses\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initCelestialNode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initRequestorNode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initTrainerNode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"networkRequestors\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"addresspayable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"removeStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"requiredCosmosValidatorStake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"requiredModelValidatorStake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"setBlockReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"setEvaluationJobContractAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"setTrainingJobContractAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"trainingJobContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]",
	Bin: "0x60a06040523480156200001157600080fd5b506040516200523a3803806200523a833981810160405281019062000037919062000718565b62000047620002cf60201b60201c565b600a6200005591906200091a565b846200006291906200096b565b6040518060400160405280600c81526020017f53636174746572546f6b656e00000000000000000000000000000000000000008152506040518060400160405280600281526020017f53540000000000000000000000000000000000000000000000000000000000008152508160039081620000df919062000c26565b508060049081620000f1919062000c26565b505050600081116200013a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001319062000d6e565b60405180910390fd5b80608081815250505033600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620001fe600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16620001bb620002cf60201b60201c565b600a620001c991906200091a565b6046606488620001da919062000dbf565b620001e691906200096b565b620001f291906200096b565b620002d860201b60201c565b6200020e620002cf60201b60201c565b600a6200021c91906200091a565b836200022991906200096b565b6008819055506207a120600981905550620186a0600a8190555081600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050505062000f44565b60006012905090565b620002e86200036960201b60201c565b81620002fe6200037360201b620008fa1760201c565b6200030a919062000df7565b11156200034e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620003459062000e82565b60405180910390fd5b6200036582826200037d60201b62001c7d1760201c565b5050565b6000608051905090565b6000600254905090565b6200038d6200036960201b60201c565b81620003a36200037360201b620008fa1760201c565b620003af919062000df7565b1115620003f3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620003ea9062000e82565b60405180910390fd5b6200040a82826200040e60201b62001ce71760201c565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160362000480576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620004779062000ef4565b60405180910390fd5b62000494600083836200057b60201b60201c565b8060026000828254620004a8919062000df7565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516200055b919062000f27565b60405180910390a362000577600083836200065360201b60201c565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015620005e557504173ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b80156200061f5750600073ffffffffffffffffffffffffffffffffffffffff164173ffffffffffffffffffffffffffffffffffffffff1614155b156200063657620006356200065860201b60201c565b5b6200064e8383836200066e60201b62001e3d1760201c565b505050565b505050565b6200066c41600854620002d860201b60201c565b565b505050565b600080fd5b6000819050919050565b6200068d8162000678565b81146200069957600080fd5b50565b600081519050620006ad8162000682565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620006e082620006b3565b9050919050565b620006f281620006d3565b8114620006fe57600080fd5b50565b6000815190506200071281620006e7565b92915050565b6000806000806080858703121562000735576200073462000673565b5b600062000745878288016200069c565b945050602062000758878288016200069c565b93505060406200076b8782880162000701565b92505060606200077e8782880162000701565b91505092959194509250565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008160011c9050919050565b6000808291508390505b60018511156200081857808604811115620007f057620007ef6200078a565b5b6001851615620008005780820291505b80810290506200081085620007b9565b9450620007d0565b94509492505050565b60008262000833576001905062000906565b8162000843576000905062000906565b81600181146200085c576002811462000867576200089d565b600191505062000906565b60ff8411156200087c576200087b6200078a565b5b8360020a9150848211156200089657620008956200078a565b5b5062000906565b5060208310610133831016604e8410600b8410161715620008d75782820a905083811115620008d157620008d06200078a565b5b62000906565b620008e68484846001620007c6565b925090508184048111156200090057620008ff6200078a565b5b81810290505b9392505050565b600060ff82169050919050565b6000620009278262000678565b915062000934836200090d565b9250620009637fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff848462000821565b905092915050565b6000620009788262000678565b9150620009858362000678565b9250828202620009958162000678565b91508282048414831517620009af57620009ae6200078a565b5b5092915050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168062000a3857607f821691505b60208210810362000a4e5762000a4d620009f0565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830262000ab87fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000a79565b62000ac4868362000a79565b95508019841693508086168417925050509392505050565b6000819050919050565b600062000b0762000b0162000afb8462000678565b62000adc565b62000678565b9050919050565b6000819050919050565b62000b238362000ae6565b62000b3b62000b328262000b0e565b84845462000a86565b825550505050565b600090565b62000b5262000b43565b62000b5f81848462000b18565b505050565b5b8181101562000b875762000b7b60008262000b48565b60018101905062000b65565b5050565b601f82111562000bd65762000ba08162000a54565b62000bab8462000a69565b8101602085101562000bbb578190505b62000bd362000bca8562000a69565b83018262000b64565b50505b505050565b600082821c905092915050565b600062000bfb6000198460080262000bdb565b1980831691505092915050565b600062000c16838362000be8565b9150826002028217905092915050565b62000c3182620009b6565b67ffffffffffffffff81111562000c4d5762000c4c620009c1565b5b62000c59825462000a1f565b62000c6682828562000b8b565b600060209050601f83116001811462000c9e576000841562000c89578287015190505b62000c95858262000c08565b86555062000d05565b601f19841662000cae8662000a54565b60005b8281101562000cd85784890151825560018201915060208501945060208101905062000cb1565b8683101562000cf8578489015162000cf4601f89168262000be8565b8355505b6001600288020188555050505b505050505050565b600082825260208201905092915050565b7f45524332304361707065643a2063617020697320300000000000000000000000600082015250565b600062000d5660158362000d0d565b915062000d638262000d1e565b602082019050919050565b6000602082019050818103600083015262000d898162000d47565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600062000dcc8262000678565b915062000dd98362000678565b92508262000dec5762000deb62000d90565b5b828204905092915050565b600062000e048262000678565b915062000e118362000678565b925082820190508082111562000e2c5762000e2b6200078a565b5b92915050565b7f45524332304361707065643a2063617020657863656564656400000000000000600082015250565b600062000e6a60198362000d0d565b915062000e778262000e32565b602082019050919050565b6000602082019050818103600083015262000e9d8162000e5b565b9050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b600062000edc601f8362000d0d565b915062000ee98262000ea4565b602082019050919050565b6000602082019050818103600083015262000f0f8162000ecd565b9050919050565b62000f218162000678565b82525050565b600060208201905062000f3e600083018462000f16565b92915050565b6080516142da62000f6060003960006109f801526142da6000f3fe608060405234801561001057600080fd5b50600436106102325760003560e01c806379cc679011610130578063b3f5b280116100b8578063cff06d391161007c578063cff06d3914610657578063dd62ed3e14610675578063eb4f16b5146106a5578063f56521a8146106c1578063fb7ba582146106dd57610232565b8063b3f5b280146105c5578063b4efe15f146105e3578063bdb6685514610613578063c0d241ed1461061d578063cb30bfc31461064d57610232565b806395d89b41116100ff57806395d89b411461050d578063a06e692b1461052b578063a457c2d714610535578063a765d05214610565578063a9059cbb1461059557610232565b806379cc6790146104ad57806383197ef0146104c95780638da5cb5b146104d3578063939624ab146104f157610232565b8063313ce567116101be5780635aff6e77116101825780635aff6e77146103f75780635e30913f14610413578063624c45ea146104435780636949f9071461047357806370a082311461047d57610232565b8063313ce56714610351578063355274ea1461036f57806336cb7f801461038d57806339509351146103ab57806342966c68146103db57610232565b8063095ea7b311610205578063095ea7b3146102995780630ac168a1146102c957806318160ddd146102e75780631a18e7071461030557806323b872dd1461032157610232565b8063039e09b11461023757806306fdde031461025357806308b44b011461027157806309079d0f1461028f575b600080fd5b610251600480360381019061024c9190612ab2565b6106fb565b005b61025b6107cf565b6040516102689190612b6f565b60405180910390f35b610279610861565b6040516102869190612baa565b60405180910390f35b610297610867565b005b6102b360048036038101906102ae9190612bf1565b6108d1565b6040516102c09190612c4c565b60405180910390f35b6102d16108f4565b6040516102de9190612baa565b60405180910390f35b6102ef6108fa565b6040516102fc9190612baa565b60405180910390f35b61031f600480360381019061031a9190612c67565b610904565b005b61033b60048036038101906103369190612c94565b6109bc565b6040516103489190612c4c565b60405180910390f35b6103596109eb565b6040516103669190612d03565b60405180910390f35b6103776109f4565b6040516103849190612baa565b60405180910390f35b610395610a1c565b6040516103a29190612baa565b60405180910390f35b6103c560048036038101906103c09190612bf1565b610a22565b6040516103d29190612c4c565b60405180910390f35b6103f560048036038101906103f09190612c67565b610a59565b005b610411600480360381019061040c9190612ab2565b610a6d565b005b61042d60048036038101906104289190612ab2565b610b41565b60405161043a9190612baa565b60405180910390f35b61045d60048036038101906104589190612bf1565b610b8a565b60405161046a9190612b6f565b60405180910390f35b61047b610c43565b005b61049760048036038101906104929190612ab2565b610cad565b6040516104a49190612baa565b60405180910390f35b6104c760048036038101906104c29190612bf1565b610cf5565b005b6104d1610d15565b005b6104db610de0565b6040516104e89190612d3f565b60405180910390f35b61050b60048036038101906105069190612c67565b610e06565b005b61051561120b565b6040516105229190612b6f565b60405180910390f35b61053361129d565b005b61054f600480360381019061054a9190612bf1565b61138b565b60405161055c9190612c4c565b60405180910390f35b61057f600480360381019061057a9190612c67565b611402565b60405161058c9190612d69565b60405180910390f35b6105af60048036038101906105aa9190612bf1565b611441565b6040516105bc9190612c4c565b60405180910390f35b6105cd611464565b6040516105da9190612d69565b60405180910390f35b6105fd60048036038101906105f89190612dba565b61148a565b60405161060a9190612b6f565b60405180910390f35b61061b6115a5565b005b61063760048036038101906106329190612f1c565b611693565b6040516106449190612b6f565b60405180910390f35b61065561175c565b005b61065f6117d1565b60405161066c9190612d69565b60405180910390f35b61068f600480360381019061068a9190612f78565b6117f7565b60405161069c9190612baa565b60405180910390f35b6106bf60048036038101906106ba9190612c67565b61187e565b005b6106db60048036038101906106d69190612fb8565b611976565b005b6106e5611c36565b6040516106f29190612baa565b60405180910390f35b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461078b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610782906130c9565b60405180910390fd5b80600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6060600380546107de90613118565b80601f016020809104026020016040519081016040528092919081815260200182805461080a90613118565b80156108575780601f1061082c57610100808354040283529160200191610857565b820191906000526020600020905b81548152906001019060200180831161083a57829003601f168201915b5050505050905090565b600a5481565b6003600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908360058111156108ca576108c9613149565b5b0217905550565b6000806108dc611e42565b90506108e9818585611e4a565b600191505092915050565b60085481565b6000600254905090565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610994576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161098b906130c9565b60405180910390fd5b61099c6109eb565b600a6109a891906132da565b816109b39190613325565b60088190555050565b6000806109c7611e42565b90506109d4858285612013565b6109df85858561209f565b60019150509392505050565b60006012905090565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b60095481565b600080610a2d611e42565b9050610a4e818585610a3f85896117f7565b610a499190613367565b611e4a565b600191505092915050565b610a6a610a64611e42565b82612315565b50565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610afd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610af4906130c9565b60405180910390fd5b80600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000600b60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600f6020528160005260406000208181548110610ba657600080fd5b90600052602060002001600091509150508054610bc290613118565b80601f0160208091040260200160405190810160405280929190818152602001828054610bee90613118565b8015610c3b5780601f10610c1057610100808354040283529160200191610c3b565b820191906000526020600020905b815481529060010190602001808311610c1e57829003601f168201915b505050505081565b6002600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690836005811115610ca657610ca5613149565b5b0217905550565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610d0782610d01611e42565b83612013565b610d118282612315565b5050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610da5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d9c906130c9565b60405180910390fd5b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff5b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b42600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610e88576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e7f9061340d565b60405180910390fd5b600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054811115610f0a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f019061349f565b60405180910390fd5b60008111610f4d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f449061350b565b60405180910390fd5b610f5733826124e2565b80600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610fa6919061352b565b9250508190555060046005811115610fc157610fc0613149565b5b600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1660058111156110205761101f613149565b5b14801561106d5750600954600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054105b156110db576000600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908360058111156110d5576110d4613149565b5b02179055505b6005808111156110ee576110ed613149565b5b600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16600581111561114d5761114c613149565b5b14801561119a5750600a54600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054105b15611208576000600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083600581111561120257611201613149565b5b02179055505b50565b60606004805461121a90613118565b80601f016020809104026020016040519081016040528092919081815260200182805461124690613118565b80156112935780601f1061126857610100808354040283529160200191611293565b820191906000526020600020905b81548152906001019060200180831161127657829003601f168201915b5050505050905090565b600954600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015611321576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611318906135f7565b60405180910390fd5b6004600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083600581111561138457611383613149565b5b0217905550565b600080611396611e42565b905060006113a482866117f7565b9050838110156113e9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113e090613689565b60405180910390fd5b6113f68286868403611e4a565b60019250505092915050565b6011818154811061141257600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008061144c611e42565b905061145981858561209f565b600191505092915050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b606060006040518060200160405280600081525090506000600a846114af91906136a9565b601180549050126114cc57600a846114c791906136a9565b6114d3565b6011805490505b905060008490505b8181121561159a5782611543601183815481106114fb576114fa6136ed565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16601461254c565b604051602001611554929190613758565b60405160208183030381529060405292508260405160200161157691906137a2565b60405160208183030381529060405292508080611592906137c8565b9150506114db565b508192505050919050565b600a54600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015611629576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611620906138a8565b60405180910390fd5b6005600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083600581111561168c5761168b613149565b5b0217905550565b600e60205281600052604060002081805160208101820180518482526020830160208501208183528095505050505050600091509150508060000180546116d990613118565b80601f016020809104026020016040519081016040528092919081815260200182805461170590613118565b80156117525780601f1061172757610100808354040283529160200191611752565b820191906000526020600020905b81548152906001019060200180831161173557829003601f168201915b5050505050905081565b6001600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908360058111156117bf576117be613149565b5b02179055506117cf336001612788565b565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600081116118c1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118b89061350b565b60405180910390fd5b6118cb3382612315565b80600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461191a9190613367565b9250508190555062278d00426119309190613367565b600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611a06576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119fd90613960565b60405180910390fd5b60016005811115611a1a57611a19613149565b5b600d60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166005811115611a7957611a78613149565b5b14611ab9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ab090613a18565b60405180910390fd5b60008167ffffffffffffffff811115611ad557611ad4612df1565b5b604051908082528060200260200182016040528015611b035781602001602082028036833780820191505090505b5090506000604051806040016040528086815260200183815250905080600e60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002087604051611b6d9190613a38565b90815260200160405180910390206000820151816000019081611b909190613bfb565b506020820151816001019080519060200190611bad929190612999565b50905050600f60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002086908060018154018082558091505060019003906000526020600020016000909190919091509081611c229190613bfb565b50611c2e846001612788565b505050505050565b6000600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905090565b611c856109f4565b81611c8e6108fa565b611c989190613367565b1115611cd9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611cd090613d19565b60405180910390fd5b611ce38282611ce7565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611d56576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d4d90613d85565b60405180910390fd5b611d62600083836128c6565b8060026000828254611d749190613367565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611e259190612baa565b60405180910390a3611e3960008383612986565b5050565b505050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611eb9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611eb090613e17565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611f28576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f1f90613ea9565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516120069190612baa565b60405180910390a3505050565b600061201f84846117f7565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114612099578181101561208b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161208290613f15565b60405180910390fd5b6120988484848403611e4a565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361210e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161210590613fa7565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361217d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161217490614039565b60405180910390fd5b6121888383836128c6565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561220e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612205906140cb565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516122fc9190612baa565b60405180910390a361230f848484612986565b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603612384576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161237b9061415d565b60405180910390fd5b612390826000836128c6565b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015612416576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161240d906141ef565b60405180910390fd5b8181036000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081600260008282540392505081905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516124c99190612baa565b60405180910390a36124dd83600084612986565b505050565b6124ea6109f4565b816124f36108fa565b6124fd9190613367565b111561253e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161253590613d19565b60405180910390fd5b6125488282611c7d565b5050565b60606000600283600261255f9190613325565b6125699190613367565b67ffffffffffffffff81111561258257612581612df1565b5b6040519080825280601f01601f1916602001820160405280156125b45781602001600182028036833780820191505090505b5090507f3000000000000000000000000000000000000000000000000000000000000000816000815181106125ec576125eb6136ed565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f7800000000000000000000000000000000000000000000000000000000000000816001815181106126505761264f6136ed565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600060018460026126909190613325565b61269a9190613367565b90505b600181111561273a577f3031323334353637383961626364656600000000000000000000000000000000600f8616601081106126dc576126db6136ed565b5b1a60f81b8282815181106126f3576126f26136ed565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600485901c9450806127339061420f565b905061269d565b506000841461277e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161277590614284565b60405180910390fd5b8091505092915050565b6001600581111561279c5761279b613149565b5b8160058111156127af576127ae613149565b5b036128c257601060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166128c1576011829080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001601060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505b5b5050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561292f57504173ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b80156129685750600073ffffffffffffffffffffffffffffffffffffffff164173ffffffffffffffffffffffffffffffffffffffff1614155b156129765761297561298b565b5b612981838383611e3d565b505050565b505050565b612997416008546124e2565b565b828054828255906000526020600020908101928215612a12579160200282015b82811115612a115782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906129b9565b5b509050612a1f9190612a23565b5090565b5b80821115612a3c576000816000905550600101612a24565b5090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000612a7f82612a54565b9050919050565b612a8f81612a74565b8114612a9a57600080fd5b50565b600081359050612aac81612a86565b92915050565b600060208284031215612ac857612ac7612a4a565b5b6000612ad684828501612a9d565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015612b19578082015181840152602081019050612afe565b60008484015250505050565b6000601f19601f8301169050919050565b6000612b4182612adf565b612b4b8185612aea565b9350612b5b818560208601612afb565b612b6481612b25565b840191505092915050565b60006020820190508181036000830152612b898184612b36565b905092915050565b6000819050919050565b612ba481612b91565b82525050565b6000602082019050612bbf6000830184612b9b565b92915050565b612bce81612b91565b8114612bd957600080fd5b50565b600081359050612beb81612bc5565b92915050565b60008060408385031215612c0857612c07612a4a565b5b6000612c1685828601612a9d565b9250506020612c2785828601612bdc565b9150509250929050565b60008115159050919050565b612c4681612c31565b82525050565b6000602082019050612c616000830184612c3d565b92915050565b600060208284031215612c7d57612c7c612a4a565b5b6000612c8b84828501612bdc565b91505092915050565b600080600060608486031215612cad57612cac612a4a565b5b6000612cbb86828701612a9d565b9350506020612ccc86828701612a9d565b9250506040612cdd86828701612bdc565b9150509250925092565b600060ff82169050919050565b612cfd81612ce7565b82525050565b6000602082019050612d186000830184612cf4565b92915050565b6000612d2982612a54565b9050919050565b612d3981612d1e565b82525050565b6000602082019050612d546000830184612d30565b92915050565b612d6381612a74565b82525050565b6000602082019050612d7e6000830184612d5a565b92915050565b6000819050919050565b612d9781612d84565b8114612da257600080fd5b50565b600081359050612db481612d8e565b92915050565b600060208284031215612dd057612dcf612a4a565b5b6000612dde84828501612da5565b91505092915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b612e2982612b25565b810181811067ffffffffffffffff82111715612e4857612e47612df1565b5b80604052505050565b6000612e5b612a40565b9050612e678282612e20565b919050565b600067ffffffffffffffff821115612e8757612e86612df1565b5b612e9082612b25565b9050602081019050919050565b82818337600083830152505050565b6000612ebf612eba84612e6c565b612e51565b905082815260208101848484011115612edb57612eda612dec565b5b612ee6848285612e9d565b509392505050565b600082601f830112612f0357612f02612de7565b5b8135612f13848260208601612eac565b91505092915050565b60008060408385031215612f3357612f32612a4a565b5b6000612f4185828601612a9d565b925050602083013567ffffffffffffffff811115612f6257612f61612a4f565b5b612f6e85828601612eee565b9150509250929050565b60008060408385031215612f8f57612f8e612a4a565b5b6000612f9d85828601612a9d565b9250506020612fae85828601612a9d565b9150509250929050565b60008060008060808587031215612fd257612fd1612a4a565b5b600085013567ffffffffffffffff811115612ff057612fef612a4f565b5b612ffc87828801612eee565b945050602085013567ffffffffffffffff81111561301d5761301c612a4f565b5b61302987828801612eee565b935050604061303a87828801612a9d565b925050606061304b87828801612bdc565b91505092959194509250565b7f4f6e6c7920746865206f776e65722063616e2063616c6c20746869732066756e60008201527f6374696f6e000000000000000000000000000000000000000000000000000000602082015250565b60006130b3602583612aea565b91506130be82613057565b604082019050919050565b600060208201905081810360008301526130e2816130a6565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061313057607f821691505b602082108103613143576131426130e9565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008160011c9050919050565b6000808291508390505b60018511156131fe578086048111156131da576131d9613178565b5b60018516156131e95780820291505b80810290506131f7856131a7565b94506131be565b94509492505050565b60008261321757600190506132d3565b8161322557600090506132d3565b816001811461323b576002811461324557613274565b60019150506132d3565b60ff84111561325757613256613178565b5b8360020a91508482111561326e5761326d613178565b5b506132d3565b5060208310610133831016604e8410600b84101617156132a95782820a9050838111156132a4576132a3613178565b5b6132d3565b6132b684848460016131b4565b925090508184048111156132cd576132cc613178565b5b81810290505b9392505050565b60006132e582612b91565b91506132f083612ce7565b925061331d7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484613207565b905092915050565b600061333082612b91565b915061333b83612b91565b925082820261334981612b91565b915082820484148315176133605761335f613178565b5b5092915050565b600061337282612b91565b915061337d83612b91565b925082820190508082111561339557613394613178565b5b92915050565b7f596f75206d75737420776169742033302064617973206265666f72652062656960008201527f6e672061626c6520746f20756e7374616b65205363617474657220546f6b656e602082015250565b60006133f7604083612aea565b91506134028261339b565b604082019050919050565b60006020820190508181036000830152613426816133ea565b9050919050565b7f416d6f756e74206d757374206265206c657373207468616e207374616b65642060008201527f616d6f756e740000000000000000000000000000000000000000000000000000602082015250565b6000613489602683612aea565b91506134948261342d565b604082019050919050565b600060208201905081810360008301526134b88161347c565b9050919050565b7f5374616b6520616d6f756e74206d75737420626520706f736974697665000000600082015250565b60006134f5601d83612aea565b9150613500826134bf565b602082019050919050565b60006020820190508181036000830152613524816134e8565b9050919050565b600061353682612b91565b915061354183612b91565b925082820390508181111561355957613558613178565b5b92915050565b7f546f206265636f6d652061206d6f64656c2076616c696461746f722c20796f7560008201527f206d7573742068617665203530302c303030205363617474657220546f6b656e60208201527f207374616b656400000000000000000000000000000000000000000000000000604082015250565b60006135e1604783612aea565b91506135ec8261355f565b606082019050919050565b60006020820190508181036000830152613610816135d4565b9050919050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000613673602583612aea565b915061367e82613617565b604082019050919050565b600060208201905081810360008301526136a281613666565b9050919050565b60006136b482612d84565b91506136bf83612d84565b9250828201905082811215600083121683821260008412151617156136e7576136e6613178565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600081905092915050565b600061373282612adf565b61373c818561371c565b935061374c818560208601612afb565b80840191505092915050565b60006137648285613727565b91506137708284613727565b91508190509392505050565b7f0a00000000000000000000000000000000000000000000000000000000000000815250565b60006137ae8284613727565b91506137b98261377c565b60018201915081905092915050565b60006137d382612d84565b91507f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361380557613804613178565b5b600182019050919050565b7f546f206265636f6d65206120636f736d6f732076616c696461746f722c20796f60008201527f75206d7573742068617665203130302c303030205363617474657220546f6b6560208201527f6e207374616b6564000000000000000000000000000000000000000000000000604082015250565b6000613892604883612aea565b915061389d82613810565b606082019050919050565b600060208201905081810360008301526138c181613885565b9050919050565b7f54686973206d6574686f642063616e206f6e6c792062652063616c6c6564206260008201527f792074686520747261696e696e67206a6f6220746f6b656e20636f6e7472616360208201527f7400000000000000000000000000000000000000000000000000000000000000604082015250565b600061394a604183612aea565b9150613955826138c8565b606082019050919050565b600060208201905081810360008301526139798161393d565b9050919050565b7f596f75206d757374206368616e676520796f7572206e6f6465277320726f6c6560008201527f20746f20726571756573746f72206265666f72652063616c6c696e672074686960208201527f73206d6574686f64000000000000000000000000000000000000000000000000604082015250565b6000613a02604883612aea565b9150613a0d82613980565b606082019050919050565b60006020820190508181036000830152613a31816139f5565b9050919050565b6000613a448284613727565b915081905092915050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302613ab17fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82613a74565b613abb8683613a74565b95508019841693508086168417925050509392505050565b6000819050919050565b6000613af8613af3613aee84612b91565b613ad3565b612b91565b9050919050565b6000819050919050565b613b1283613add565b613b26613b1e82613aff565b848454613a81565b825550505050565b600090565b613b3b613b2e565b613b46818484613b09565b505050565b5b81811015613b6a57613b5f600082613b33565b600181019050613b4c565b5050565b601f821115613baf57613b8081613a4f565b613b8984613a64565b81016020851015613b98578190505b613bac613ba485613a64565b830182613b4b565b50505b505050565b600082821c905092915050565b6000613bd260001984600802613bb4565b1980831691505092915050565b6000613beb8383613bc1565b9150826002028217905092915050565b613c0482612adf565b67ffffffffffffffff811115613c1d57613c1c612df1565b5b613c278254613118565b613c32828285613b6e565b600060209050601f831160018114613c655760008415613c53578287015190505b613c5d8582613bdf565b865550613cc5565b601f198416613c7386613a4f565b60005b82811015613c9b57848901518255600182019150602085019450602081019050613c76565b86831015613cb85784890151613cb4601f891682613bc1565b8355505b6001600288020188555050505b505050505050565b7f45524332304361707065643a2063617020657863656564656400000000000000600082015250565b6000613d03601983612aea565b9150613d0e82613ccd565b602082019050919050565b60006020820190508181036000830152613d3281613cf6565b9050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b6000613d6f601f83612aea565b9150613d7a82613d39565b602082019050919050565b60006020820190508181036000830152613d9e81613d62565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000613e01602483612aea565b9150613e0c82613da5565b604082019050919050565b60006020820190508181036000830152613e3081613df4565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000613e93602283612aea565b9150613e9e82613e37565b604082019050919050565b60006020820190508181036000830152613ec281613e86565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b6000613eff601d83612aea565b9150613f0a82613ec9565b602082019050919050565b60006020820190508181036000830152613f2e81613ef2565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b6000613f91602583612aea565b9150613f9c82613f35565b604082019050919050565b60006020820190508181036000830152613fc081613f84565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000614023602383612aea565b915061402e82613fc7565b604082019050919050565b6000602082019050818103600083015261405281614016565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b60006140b5602683612aea565b91506140c082614059565b604082019050919050565b600060208201905081810360008301526140e4816140a8565b9050919050565b7f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b6000614147602183612aea565b9150614152826140eb565b604082019050919050565b600060208201905081810360008301526141768161413a565b9050919050565b7f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60008201527f6365000000000000000000000000000000000000000000000000000000000000602082015250565b60006141d9602283612aea565b91506141e48261417d565b604082019050919050565b60006020820190508181036000830152614208816141cc565b9050919050565b600061421a82612b91565b91506000820361422d5761422c613178565b5b600182039050919050565b7f537472696e67733a20686578206c656e67746820696e73756666696369656e74600082015250565b600061426e602083612aea565b915061427982614238565b602082019050919050565b6000602082019050818103600083015261429d81614261565b905091905056fea2646970667358221220c795a57e07e54041368a0a350c2a80ca16fb0cf8cd97a6d92d49a891943a0d7864736f6c63430008110033",
}

// ScatterprotocolABI is the input ABI used to generate the binding from.
// Deprecated: Use ScatterprotocolMetaData.ABI instead.
var ScatterprotocolABI = ScatterprotocolMetaData.ABI

// ScatterprotocolBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use ScatterprotocolMetaData.Bin instead.
var ScatterprotocolBin = ScatterprotocolMetaData.Bin

// DeployScatterprotocol deploys a new Ethereum contract, binding an instance of Scatterprotocol to it.
func DeployScatterprotocol(auth *bind.TransactOpts, backend bind.ContractBackend, cap *big.Int, reward *big.Int, trainingTokenContract common.Address, evaluationTokenContract common.Address) (common.Address, *types.Transaction, *Scatterprotocol, error) {
	parsed, err := ScatterprotocolMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(ScatterprotocolBin), backend, cap, reward, trainingTokenContract, evaluationTokenContract)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &Scatterprotocol{ScatterprotocolCaller: ScatterprotocolCaller{contract: contract}, ScatterprotocolTransactor: ScatterprotocolTransactor{contract: contract}, ScatterprotocolFilterer: ScatterprotocolFilterer{contract: contract}}, nil
}

// Scatterprotocol is an auto generated Go binding around an Ethereum contract.
type Scatterprotocol struct {
	ScatterprotocolCaller     // Read-only binding to the contract
	ScatterprotocolTransactor // Write-only binding to the contract
	ScatterprotocolFilterer   // Log filterer for contract events
}

// ScatterprotocolCaller is an auto generated read-only Go binding around an Ethereum contract.
type ScatterprotocolCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ScatterprotocolTransactor is an auto generated write-only Go binding around an Ethereum contract.
type ScatterprotocolTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ScatterprotocolFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type ScatterprotocolFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ScatterprotocolSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type ScatterprotocolSession struct {
	Contract     *Scatterprotocol  // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// ScatterprotocolCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type ScatterprotocolCallerSession struct {
	Contract *ScatterprotocolCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts          // Call options to use throughout this session
}

// ScatterprotocolTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type ScatterprotocolTransactorSession struct {
	Contract     *ScatterprotocolTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts          // Transaction auth options to use throughout this session
}

// ScatterprotocolRaw is an auto generated low-level Go binding around an Ethereum contract.
type ScatterprotocolRaw struct {
	Contract *Scatterprotocol // Generic contract binding to access the raw methods on
}

// ScatterprotocolCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type ScatterprotocolCallerRaw struct {
	Contract *ScatterprotocolCaller // Generic read-only contract binding to access the raw methods on
}

// ScatterprotocolTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type ScatterprotocolTransactorRaw struct {
	Contract *ScatterprotocolTransactor // Generic write-only contract binding to access the raw methods on
}

// NewScatterprotocol creates a new instance of Scatterprotocol, bound to a specific deployed contract.
func NewScatterprotocol(address common.Address, backend bind.ContractBackend) (*Scatterprotocol, error) {
	contract, err := bindScatterprotocol(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &Scatterprotocol{ScatterprotocolCaller: ScatterprotocolCaller{contract: contract}, ScatterprotocolTransactor: ScatterprotocolTransactor{contract: contract}, ScatterprotocolFilterer: ScatterprotocolFilterer{contract: contract}}, nil
}

// NewScatterprotocolCaller creates a new read-only instance of Scatterprotocol, bound to a specific deployed contract.
func NewScatterprotocolCaller(address common.Address, caller bind.ContractCaller) (*ScatterprotocolCaller, error) {
	contract, err := bindScatterprotocol(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &ScatterprotocolCaller{contract: contract}, nil
}

// NewScatterprotocolTransactor creates a new write-only instance of Scatterprotocol, bound to a specific deployed contract.
func NewScatterprotocolTransactor(address common.Address, transactor bind.ContractTransactor) (*ScatterprotocolTransactor, error) {
	contract, err := bindScatterprotocol(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &ScatterprotocolTransactor{contract: contract}, nil
}

// NewScatterprotocolFilterer creates a new log filterer instance of Scatterprotocol, bound to a specific deployed contract.
func NewScatterprotocolFilterer(address common.Address, filterer bind.ContractFilterer) (*ScatterprotocolFilterer, error) {
	contract, err := bindScatterprotocol(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &ScatterprotocolFilterer{contract: contract}, nil
}

// bindScatterprotocol binds a generic wrapper to an already deployed contract.
func bindScatterprotocol(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(ScatterprotocolABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Scatterprotocol *ScatterprotocolRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Scatterprotocol.Contract.ScatterprotocolCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Scatterprotocol *ScatterprotocolRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.ScatterprotocolTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Scatterprotocol *ScatterprotocolRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.ScatterprotocolTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Scatterprotocol *ScatterprotocolCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Scatterprotocol.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Scatterprotocol *ScatterprotocolTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Scatterprotocol *ScatterprotocolTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.contract.Transact(opts, method, params...)
}

// AddressToTopics is a free data retrieval call binding the contract method 0x624c45ea.
//
// Solidity: function addressToTopics(address , uint256 ) view returns(string)
func (_Scatterprotocol *ScatterprotocolCaller) AddressToTopics(opts *bind.CallOpts, arg0 common.Address, arg1 *big.Int) (string, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "addressToTopics", arg0, arg1)

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// AddressToTopics is a free data retrieval call binding the contract method 0x624c45ea.
//
// Solidity: function addressToTopics(address , uint256 ) view returns(string)
func (_Scatterprotocol *ScatterprotocolSession) AddressToTopics(arg0 common.Address, arg1 *big.Int) (string, error) {
	return _Scatterprotocol.Contract.AddressToTopics(&_Scatterprotocol.CallOpts, arg0, arg1)
}

// AddressToTopics is a free data retrieval call binding the contract method 0x624c45ea.
//
// Solidity: function addressToTopics(address , uint256 ) view returns(string)
func (_Scatterprotocol *ScatterprotocolCallerSession) AddressToTopics(arg0 common.Address, arg1 *big.Int) (string, error) {
	return _Scatterprotocol.Contract.AddressToTopics(&_Scatterprotocol.CallOpts, arg0, arg1)
}

// AddressToTrainingJobInfo is a free data retrieval call binding the contract method 0xc0d241ed.
//
// Solidity: function addressToTrainingJobInfo(address , string ) view returns(string trainingJobCid)
func (_Scatterprotocol *ScatterprotocolCaller) AddressToTrainingJobInfo(opts *bind.CallOpts, arg0 common.Address, arg1 string) (string, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "addressToTrainingJobInfo", arg0, arg1)

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// AddressToTrainingJobInfo is a free data retrieval call binding the contract method 0xc0d241ed.
//
// Solidity: function addressToTrainingJobInfo(address , string ) view returns(string trainingJobCid)
func (_Scatterprotocol *ScatterprotocolSession) AddressToTrainingJobInfo(arg0 common.Address, arg1 string) (string, error) {
	return _Scatterprotocol.Contract.AddressToTrainingJobInfo(&_Scatterprotocol.CallOpts, arg0, arg1)
}

// AddressToTrainingJobInfo is a free data retrieval call binding the contract method 0xc0d241ed.
//
// Solidity: function addressToTrainingJobInfo(address , string ) view returns(string trainingJobCid)
func (_Scatterprotocol *ScatterprotocolCallerSession) AddressToTrainingJobInfo(arg0 common.Address, arg1 string) (string, error) {
	return _Scatterprotocol.Contract.AddressToTrainingJobInfo(&_Scatterprotocol.CallOpts, arg0, arg1)
}

// Allowance is a free data retrieval call binding the contract method 0xdd62ed3e.
//
// Solidity: function allowance(address owner, address spender) view returns(uint256)
func (_Scatterprotocol *ScatterprotocolCaller) Allowance(opts *bind.CallOpts, owner common.Address, spender common.Address) (*big.Int, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "allowance", owner, spender)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// Allowance is a free data retrieval call binding the contract method 0xdd62ed3e.
//
// Solidity: function allowance(address owner, address spender) view returns(uint256)
func (_Scatterprotocol *ScatterprotocolSession) Allowance(owner common.Address, spender common.Address) (*big.Int, error) {
	return _Scatterprotocol.Contract.Allowance(&_Scatterprotocol.CallOpts, owner, spender)
}

// Allowance is a free data retrieval call binding the contract method 0xdd62ed3e.
//
// Solidity: function allowance(address owner, address spender) view returns(uint256)
func (_Scatterprotocol *ScatterprotocolCallerSession) Allowance(owner common.Address, spender common.Address) (*big.Int, error) {
	return _Scatterprotocol.Contract.Allowance(&_Scatterprotocol.CallOpts, owner, spender)
}

// BalanceOf is a free data retrieval call binding the contract method 0x70a08231.
//
// Solidity: function balanceOf(address account) view returns(uint256)
func (_Scatterprotocol *ScatterprotocolCaller) BalanceOf(opts *bind.CallOpts, account common.Address) (*big.Int, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "balanceOf", account)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// BalanceOf is a free data retrieval call binding the contract method 0x70a08231.
//
// Solidity: function balanceOf(address account) view returns(uint256)
func (_Scatterprotocol *ScatterprotocolSession) BalanceOf(account common.Address) (*big.Int, error) {
	return _Scatterprotocol.Contract.BalanceOf(&_Scatterprotocol.CallOpts, account)
}

// BalanceOf is a free data retrieval call binding the contract method 0x70a08231.
//
// Solidity: function balanceOf(address account) view returns(uint256)
func (_Scatterprotocol *ScatterprotocolCallerSession) BalanceOf(account common.Address) (*big.Int, error) {
	return _Scatterprotocol.Contract.BalanceOf(&_Scatterprotocol.CallOpts, account)
}

// BlockReward is a free data retrieval call binding the contract method 0x0ac168a1.
//
// Solidity: function blockReward() view returns(uint256)
func (_Scatterprotocol *ScatterprotocolCaller) BlockReward(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "blockReward")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// BlockReward is a free data retrieval call binding the contract method 0x0ac168a1.
//
// Solidity: function blockReward() view returns(uint256)
func (_Scatterprotocol *ScatterprotocolSession) BlockReward() (*big.Int, error) {
	return _Scatterprotocol.Contract.BlockReward(&_Scatterprotocol.CallOpts)
}

// BlockReward is a free data retrieval call binding the contract method 0x0ac168a1.
//
// Solidity: function blockReward() view returns(uint256)
func (_Scatterprotocol *ScatterprotocolCallerSession) BlockReward() (*big.Int, error) {
	return _Scatterprotocol.Contract.BlockReward(&_Scatterprotocol.CallOpts)
}

// Cap is a free data retrieval call binding the contract method 0x355274ea.
//
// Solidity: function cap() view returns(uint256)
func (_Scatterprotocol *ScatterprotocolCaller) Cap(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "cap")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// Cap is a free data retrieval call binding the contract method 0x355274ea.
//
// Solidity: function cap() view returns(uint256)
func (_Scatterprotocol *ScatterprotocolSession) Cap() (*big.Int, error) {
	return _Scatterprotocol.Contract.Cap(&_Scatterprotocol.CallOpts)
}

// Cap is a free data retrieval call binding the contract method 0x355274ea.
//
// Solidity: function cap() view returns(uint256)
func (_Scatterprotocol *ScatterprotocolCallerSession) Cap() (*big.Int, error) {
	return _Scatterprotocol.Contract.Cap(&_Scatterprotocol.CallOpts)
}

// Decimals is a free data retrieval call binding the contract method 0x313ce567.
//
// Solidity: function decimals() view returns(uint8)
func (_Scatterprotocol *ScatterprotocolCaller) Decimals(opts *bind.CallOpts) (uint8, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "decimals")

	if err != nil {
		return *new(uint8), err
	}

	out0 := *abi.ConvertType(out[0], new(uint8)).(*uint8)

	return out0, err

}

// Decimals is a free data retrieval call binding the contract method 0x313ce567.
//
// Solidity: function decimals() view returns(uint8)
func (_Scatterprotocol *ScatterprotocolSession) Decimals() (uint8, error) {
	return _Scatterprotocol.Contract.Decimals(&_Scatterprotocol.CallOpts)
}

// Decimals is a free data retrieval call binding the contract method 0x313ce567.
//
// Solidity: function decimals() view returns(uint8)
func (_Scatterprotocol *ScatterprotocolCallerSession) Decimals() (uint8, error) {
	return _Scatterprotocol.Contract.Decimals(&_Scatterprotocol.CallOpts)
}

// EvaluationJobContract is a free data retrieval call binding the contract method 0xcff06d39.
//
// Solidity: function evaluationJobContract() view returns(address)
func (_Scatterprotocol *ScatterprotocolCaller) EvaluationJobContract(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "evaluationJobContract")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// EvaluationJobContract is a free data retrieval call binding the contract method 0xcff06d39.
//
// Solidity: function evaluationJobContract() view returns(address)
func (_Scatterprotocol *ScatterprotocolSession) EvaluationJobContract() (common.Address, error) {
	return _Scatterprotocol.Contract.EvaluationJobContract(&_Scatterprotocol.CallOpts)
}

// EvaluationJobContract is a free data retrieval call binding the contract method 0xcff06d39.
//
// Solidity: function evaluationJobContract() view returns(address)
func (_Scatterprotocol *ScatterprotocolCallerSession) EvaluationJobContract() (common.Address, error) {
	return _Scatterprotocol.Contract.EvaluationJobContract(&_Scatterprotocol.CallOpts)
}

// GetAccountStake is a free data retrieval call binding the contract method 0x5e30913f.
//
// Solidity: function getAccountStake(address account) view returns(uint256)
func (_Scatterprotocol *ScatterprotocolCaller) GetAccountStake(opts *bind.CallOpts, account common.Address) (*big.Int, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "getAccountStake", account)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetAccountStake is a free data retrieval call binding the contract method 0x5e30913f.
//
// Solidity: function getAccountStake(address account) view returns(uint256)
func (_Scatterprotocol *ScatterprotocolSession) GetAccountStake(account common.Address) (*big.Int, error) {
	return _Scatterprotocol.Contract.GetAccountStake(&_Scatterprotocol.CallOpts, account)
}

// GetAccountStake is a free data retrieval call binding the contract method 0x5e30913f.
//
// Solidity: function getAccountStake(address account) view returns(uint256)
func (_Scatterprotocol *ScatterprotocolCallerSession) GetAccountStake(account common.Address) (*big.Int, error) {
	return _Scatterprotocol.Contract.GetAccountStake(&_Scatterprotocol.CallOpts, account)
}

// GetOwnStake is a free data retrieval call binding the contract method 0xfb7ba582.
//
// Solidity: function getOwnStake() view returns(uint256)
func (_Scatterprotocol *ScatterprotocolCaller) GetOwnStake(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "getOwnStake")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetOwnStake is a free data retrieval call binding the contract method 0xfb7ba582.
//
// Solidity: function getOwnStake() view returns(uint256)
func (_Scatterprotocol *ScatterprotocolSession) GetOwnStake() (*big.Int, error) {
	return _Scatterprotocol.Contract.GetOwnStake(&_Scatterprotocol.CallOpts)
}

// GetOwnStake is a free data retrieval call binding the contract method 0xfb7ba582.
//
// Solidity: function getOwnStake() view returns(uint256)
func (_Scatterprotocol *ScatterprotocolCallerSession) GetOwnStake() (*big.Int, error) {
	return _Scatterprotocol.Contract.GetOwnStake(&_Scatterprotocol.CallOpts)
}

// GetRequestorAddresses is a free data retrieval call binding the contract method 0xb4efe15f.
//
// Solidity: function getRequestorAddresses(int256 skip) view returns(string)
func (_Scatterprotocol *ScatterprotocolCaller) GetRequestorAddresses(opts *bind.CallOpts, skip *big.Int) (string, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "getRequestorAddresses", skip)

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// GetRequestorAddresses is a free data retrieval call binding the contract method 0xb4efe15f.
//
// Solidity: function getRequestorAddresses(int256 skip) view returns(string)
func (_Scatterprotocol *ScatterprotocolSession) GetRequestorAddresses(skip *big.Int) (string, error) {
	return _Scatterprotocol.Contract.GetRequestorAddresses(&_Scatterprotocol.CallOpts, skip)
}

// GetRequestorAddresses is a free data retrieval call binding the contract method 0xb4efe15f.
//
// Solidity: function getRequestorAddresses(int256 skip) view returns(string)
func (_Scatterprotocol *ScatterprotocolCallerSession) GetRequestorAddresses(skip *big.Int) (string, error) {
	return _Scatterprotocol.Contract.GetRequestorAddresses(&_Scatterprotocol.CallOpts, skip)
}

// Name is a free data retrieval call binding the contract method 0x06fdde03.
//
// Solidity: function name() view returns(string)
func (_Scatterprotocol *ScatterprotocolCaller) Name(opts *bind.CallOpts) (string, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "name")

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// Name is a free data retrieval call binding the contract method 0x06fdde03.
//
// Solidity: function name() view returns(string)
func (_Scatterprotocol *ScatterprotocolSession) Name() (string, error) {
	return _Scatterprotocol.Contract.Name(&_Scatterprotocol.CallOpts)
}

// Name is a free data retrieval call binding the contract method 0x06fdde03.
//
// Solidity: function name() view returns(string)
func (_Scatterprotocol *ScatterprotocolCallerSession) Name() (string, error) {
	return _Scatterprotocol.Contract.Name(&_Scatterprotocol.CallOpts)
}

// NetworkRequestors is a free data retrieval call binding the contract method 0xa765d052.
//
// Solidity: function networkRequestors(uint256 ) view returns(address)
func (_Scatterprotocol *ScatterprotocolCaller) NetworkRequestors(opts *bind.CallOpts, arg0 *big.Int) (common.Address, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "networkRequestors", arg0)

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// NetworkRequestors is a free data retrieval call binding the contract method 0xa765d052.
//
// Solidity: function networkRequestors(uint256 ) view returns(address)
func (_Scatterprotocol *ScatterprotocolSession) NetworkRequestors(arg0 *big.Int) (common.Address, error) {
	return _Scatterprotocol.Contract.NetworkRequestors(&_Scatterprotocol.CallOpts, arg0)
}

// NetworkRequestors is a free data retrieval call binding the contract method 0xa765d052.
//
// Solidity: function networkRequestors(uint256 ) view returns(address)
func (_Scatterprotocol *ScatterprotocolCallerSession) NetworkRequestors(arg0 *big.Int) (common.Address, error) {
	return _Scatterprotocol.Contract.NetworkRequestors(&_Scatterprotocol.CallOpts, arg0)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_Scatterprotocol *ScatterprotocolCaller) Owner(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "owner")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_Scatterprotocol *ScatterprotocolSession) Owner() (common.Address, error) {
	return _Scatterprotocol.Contract.Owner(&_Scatterprotocol.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_Scatterprotocol *ScatterprotocolCallerSession) Owner() (common.Address, error) {
	return _Scatterprotocol.Contract.Owner(&_Scatterprotocol.CallOpts)
}

// RequiredCosmosValidatorStake is a free data retrieval call binding the contract method 0x08b44b01.
//
// Solidity: function requiredCosmosValidatorStake() view returns(uint256)
func (_Scatterprotocol *ScatterprotocolCaller) RequiredCosmosValidatorStake(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "requiredCosmosValidatorStake")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// RequiredCosmosValidatorStake is a free data retrieval call binding the contract method 0x08b44b01.
//
// Solidity: function requiredCosmosValidatorStake() view returns(uint256)
func (_Scatterprotocol *ScatterprotocolSession) RequiredCosmosValidatorStake() (*big.Int, error) {
	return _Scatterprotocol.Contract.RequiredCosmosValidatorStake(&_Scatterprotocol.CallOpts)
}

// RequiredCosmosValidatorStake is a free data retrieval call binding the contract method 0x08b44b01.
//
// Solidity: function requiredCosmosValidatorStake() view returns(uint256)
func (_Scatterprotocol *ScatterprotocolCallerSession) RequiredCosmosValidatorStake() (*big.Int, error) {
	return _Scatterprotocol.Contract.RequiredCosmosValidatorStake(&_Scatterprotocol.CallOpts)
}

// RequiredModelValidatorStake is a free data retrieval call binding the contract method 0x36cb7f80.
//
// Solidity: function requiredModelValidatorStake() view returns(uint256)
func (_Scatterprotocol *ScatterprotocolCaller) RequiredModelValidatorStake(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "requiredModelValidatorStake")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// RequiredModelValidatorStake is a free data retrieval call binding the contract method 0x36cb7f80.
//
// Solidity: function requiredModelValidatorStake() view returns(uint256)
func (_Scatterprotocol *ScatterprotocolSession) RequiredModelValidatorStake() (*big.Int, error) {
	return _Scatterprotocol.Contract.RequiredModelValidatorStake(&_Scatterprotocol.CallOpts)
}

// RequiredModelValidatorStake is a free data retrieval call binding the contract method 0x36cb7f80.
//
// Solidity: function requiredModelValidatorStake() view returns(uint256)
func (_Scatterprotocol *ScatterprotocolCallerSession) RequiredModelValidatorStake() (*big.Int, error) {
	return _Scatterprotocol.Contract.RequiredModelValidatorStake(&_Scatterprotocol.CallOpts)
}

// Symbol is a free data retrieval call binding the contract method 0x95d89b41.
//
// Solidity: function symbol() view returns(string)
func (_Scatterprotocol *ScatterprotocolCaller) Symbol(opts *bind.CallOpts) (string, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "symbol")

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// Symbol is a free data retrieval call binding the contract method 0x95d89b41.
//
// Solidity: function symbol() view returns(string)
func (_Scatterprotocol *ScatterprotocolSession) Symbol() (string, error) {
	return _Scatterprotocol.Contract.Symbol(&_Scatterprotocol.CallOpts)
}

// Symbol is a free data retrieval call binding the contract method 0x95d89b41.
//
// Solidity: function symbol() view returns(string)
func (_Scatterprotocol *ScatterprotocolCallerSession) Symbol() (string, error) {
	return _Scatterprotocol.Contract.Symbol(&_Scatterprotocol.CallOpts)
}

// TotalSupply is a free data retrieval call binding the contract method 0x18160ddd.
//
// Solidity: function totalSupply() view returns(uint256)
func (_Scatterprotocol *ScatterprotocolCaller) TotalSupply(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "totalSupply")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// TotalSupply is a free data retrieval call binding the contract method 0x18160ddd.
//
// Solidity: function totalSupply() view returns(uint256)
func (_Scatterprotocol *ScatterprotocolSession) TotalSupply() (*big.Int, error) {
	return _Scatterprotocol.Contract.TotalSupply(&_Scatterprotocol.CallOpts)
}

// TotalSupply is a free data retrieval call binding the contract method 0x18160ddd.
//
// Solidity: function totalSupply() view returns(uint256)
func (_Scatterprotocol *ScatterprotocolCallerSession) TotalSupply() (*big.Int, error) {
	return _Scatterprotocol.Contract.TotalSupply(&_Scatterprotocol.CallOpts)
}

// TrainingJobContract is a free data retrieval call binding the contract method 0xb3f5b280.
//
// Solidity: function trainingJobContract() view returns(address)
func (_Scatterprotocol *ScatterprotocolCaller) TrainingJobContract(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "trainingJobContract")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// TrainingJobContract is a free data retrieval call binding the contract method 0xb3f5b280.
//
// Solidity: function trainingJobContract() view returns(address)
func (_Scatterprotocol *ScatterprotocolSession) TrainingJobContract() (common.Address, error) {
	return _Scatterprotocol.Contract.TrainingJobContract(&_Scatterprotocol.CallOpts)
}

// TrainingJobContract is a free data retrieval call binding the contract method 0xb3f5b280.
//
// Solidity: function trainingJobContract() view returns(address)
func (_Scatterprotocol *ScatterprotocolCallerSession) TrainingJobContract() (common.Address, error) {
	return _Scatterprotocol.Contract.TrainingJobContract(&_Scatterprotocol.CallOpts)
}

// AddStake is a paid mutator transaction binding the contract method 0xeb4f16b5.
//
// Solidity: function addStake(uint256 amount) returns()
func (_Scatterprotocol *ScatterprotocolTransactor) AddStake(opts *bind.TransactOpts, amount *big.Int) (*types.Transaction, error) {
	return _Scatterprotocol.contract.Transact(opts, "addStake", amount)
}

// AddStake is a paid mutator transaction binding the contract method 0xeb4f16b5.
//
// Solidity: function addStake(uint256 amount) returns()
func (_Scatterprotocol *ScatterprotocolSession) AddStake(amount *big.Int) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.AddStake(&_Scatterprotocol.TransactOpts, amount)
}

// AddStake is a paid mutator transaction binding the contract method 0xeb4f16b5.
//
// Solidity: function addStake(uint256 amount) returns()
func (_Scatterprotocol *ScatterprotocolTransactorSession) AddStake(amount *big.Int) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.AddStake(&_Scatterprotocol.TransactOpts, amount)
}

// AddTopicForRequestor is a paid mutator transaction binding the contract method 0xf56521a8.
//
// Solidity: function addTopicForRequestor(string topicName, string jobCid, address requestorAddress, uint256 maxTrainerCount) returns()
func (_Scatterprotocol *ScatterprotocolTransactor) AddTopicForRequestor(opts *bind.TransactOpts, topicName string, jobCid string, requestorAddress common.Address, maxTrainerCount *big.Int) (*types.Transaction, error) {
	return _Scatterprotocol.contract.Transact(opts, "addTopicForRequestor", topicName, jobCid, requestorAddress, maxTrainerCount)
}

// AddTopicForRequestor is a paid mutator transaction binding the contract method 0xf56521a8.
//
// Solidity: function addTopicForRequestor(string topicName, string jobCid, address requestorAddress, uint256 maxTrainerCount) returns()
func (_Scatterprotocol *ScatterprotocolSession) AddTopicForRequestor(topicName string, jobCid string, requestorAddress common.Address, maxTrainerCount *big.Int) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.AddTopicForRequestor(&_Scatterprotocol.TransactOpts, topicName, jobCid, requestorAddress, maxTrainerCount)
}

// AddTopicForRequestor is a paid mutator transaction binding the contract method 0xf56521a8.
//
// Solidity: function addTopicForRequestor(string topicName, string jobCid, address requestorAddress, uint256 maxTrainerCount) returns()
func (_Scatterprotocol *ScatterprotocolTransactorSession) AddTopicForRequestor(topicName string, jobCid string, requestorAddress common.Address, maxTrainerCount *big.Int) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.AddTopicForRequestor(&_Scatterprotocol.TransactOpts, topicName, jobCid, requestorAddress, maxTrainerCount)
}

// Approve is a paid mutator transaction binding the contract method 0x095ea7b3.
//
// Solidity: function approve(address spender, uint256 amount) returns(bool)
func (_Scatterprotocol *ScatterprotocolTransactor) Approve(opts *bind.TransactOpts, spender common.Address, amount *big.Int) (*types.Transaction, error) {
	return _Scatterprotocol.contract.Transact(opts, "approve", spender, amount)
}

// Approve is a paid mutator transaction binding the contract method 0x095ea7b3.
//
// Solidity: function approve(address spender, uint256 amount) returns(bool)
func (_Scatterprotocol *ScatterprotocolSession) Approve(spender common.Address, amount *big.Int) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.Approve(&_Scatterprotocol.TransactOpts, spender, amount)
}

// Approve is a paid mutator transaction binding the contract method 0x095ea7b3.
//
// Solidity: function approve(address spender, uint256 amount) returns(bool)
func (_Scatterprotocol *ScatterprotocolTransactorSession) Approve(spender common.Address, amount *big.Int) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.Approve(&_Scatterprotocol.TransactOpts, spender, amount)
}

// Burn is a paid mutator transaction binding the contract method 0x42966c68.
//
// Solidity: function burn(uint256 amount) returns()
func (_Scatterprotocol *ScatterprotocolTransactor) Burn(opts *bind.TransactOpts, amount *big.Int) (*types.Transaction, error) {
	return _Scatterprotocol.contract.Transact(opts, "burn", amount)
}

// Burn is a paid mutator transaction binding the contract method 0x42966c68.
//
// Solidity: function burn(uint256 amount) returns()
func (_Scatterprotocol *ScatterprotocolSession) Burn(amount *big.Int) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.Burn(&_Scatterprotocol.TransactOpts, amount)
}

// Burn is a paid mutator transaction binding the contract method 0x42966c68.
//
// Solidity: function burn(uint256 amount) returns()
func (_Scatterprotocol *ScatterprotocolTransactorSession) Burn(amount *big.Int) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.Burn(&_Scatterprotocol.TransactOpts, amount)
}

// BurnFrom is a paid mutator transaction binding the contract method 0x79cc6790.
//
// Solidity: function burnFrom(address account, uint256 amount) returns()
func (_Scatterprotocol *ScatterprotocolTransactor) BurnFrom(opts *bind.TransactOpts, account common.Address, amount *big.Int) (*types.Transaction, error) {
	return _Scatterprotocol.contract.Transact(opts, "burnFrom", account, amount)
}

// BurnFrom is a paid mutator transaction binding the contract method 0x79cc6790.
//
// Solidity: function burnFrom(address account, uint256 amount) returns()
func (_Scatterprotocol *ScatterprotocolSession) BurnFrom(account common.Address, amount *big.Int) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.BurnFrom(&_Scatterprotocol.TransactOpts, account, amount)
}

// BurnFrom is a paid mutator transaction binding the contract method 0x79cc6790.
//
// Solidity: function burnFrom(address account, uint256 amount) returns()
func (_Scatterprotocol *ScatterprotocolTransactorSession) BurnFrom(account common.Address, amount *big.Int) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.BurnFrom(&_Scatterprotocol.TransactOpts, account, amount)
}

// DecreaseAllowance is a paid mutator transaction binding the contract method 0xa457c2d7.
//
// Solidity: function decreaseAllowance(address spender, uint256 subtractedValue) returns(bool)
func (_Scatterprotocol *ScatterprotocolTransactor) DecreaseAllowance(opts *bind.TransactOpts, spender common.Address, subtractedValue *big.Int) (*types.Transaction, error) {
	return _Scatterprotocol.contract.Transact(opts, "decreaseAllowance", spender, subtractedValue)
}

// DecreaseAllowance is a paid mutator transaction binding the contract method 0xa457c2d7.
//
// Solidity: function decreaseAllowance(address spender, uint256 subtractedValue) returns(bool)
func (_Scatterprotocol *ScatterprotocolSession) DecreaseAllowance(spender common.Address, subtractedValue *big.Int) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.DecreaseAllowance(&_Scatterprotocol.TransactOpts, spender, subtractedValue)
}

// DecreaseAllowance is a paid mutator transaction binding the contract method 0xa457c2d7.
//
// Solidity: function decreaseAllowance(address spender, uint256 subtractedValue) returns(bool)
func (_Scatterprotocol *ScatterprotocolTransactorSession) DecreaseAllowance(spender common.Address, subtractedValue *big.Int) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.DecreaseAllowance(&_Scatterprotocol.TransactOpts, spender, subtractedValue)
}

// Destroy is a paid mutator transaction binding the contract method 0x83197ef0.
//
// Solidity: function destroy() returns()
func (_Scatterprotocol *ScatterprotocolTransactor) Destroy(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Scatterprotocol.contract.Transact(opts, "destroy")
}

// Destroy is a paid mutator transaction binding the contract method 0x83197ef0.
//
// Solidity: function destroy() returns()
func (_Scatterprotocol *ScatterprotocolSession) Destroy() (*types.Transaction, error) {
	return _Scatterprotocol.Contract.Destroy(&_Scatterprotocol.TransactOpts)
}

// Destroy is a paid mutator transaction binding the contract method 0x83197ef0.
//
// Solidity: function destroy() returns()
func (_Scatterprotocol *ScatterprotocolTransactorSession) Destroy() (*types.Transaction, error) {
	return _Scatterprotocol.Contract.Destroy(&_Scatterprotocol.TransactOpts)
}

// ElevateToCosmosValidator is a paid mutator transaction binding the contract method 0xbdb66855.
//
// Solidity: function elevateToCosmosValidator() returns()
func (_Scatterprotocol *ScatterprotocolTransactor) ElevateToCosmosValidator(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Scatterprotocol.contract.Transact(opts, "elevateToCosmosValidator")
}

// ElevateToCosmosValidator is a paid mutator transaction binding the contract method 0xbdb66855.
//
// Solidity: function elevateToCosmosValidator() returns()
func (_Scatterprotocol *ScatterprotocolSession) ElevateToCosmosValidator() (*types.Transaction, error) {
	return _Scatterprotocol.Contract.ElevateToCosmosValidator(&_Scatterprotocol.TransactOpts)
}

// ElevateToCosmosValidator is a paid mutator transaction binding the contract method 0xbdb66855.
//
// Solidity: function elevateToCosmosValidator() returns()
func (_Scatterprotocol *ScatterprotocolTransactorSession) ElevateToCosmosValidator() (*types.Transaction, error) {
	return _Scatterprotocol.Contract.ElevateToCosmosValidator(&_Scatterprotocol.TransactOpts)
}

// ElevateToModelValidator is a paid mutator transaction binding the contract method 0xa06e692b.
//
// Solidity: function elevateToModelValidator() returns()
func (_Scatterprotocol *ScatterprotocolTransactor) ElevateToModelValidator(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Scatterprotocol.contract.Transact(opts, "elevateToModelValidator")
}

// ElevateToModelValidator is a paid mutator transaction binding the contract method 0xa06e692b.
//
// Solidity: function elevateToModelValidator() returns()
func (_Scatterprotocol *ScatterprotocolSession) ElevateToModelValidator() (*types.Transaction, error) {
	return _Scatterprotocol.Contract.ElevateToModelValidator(&_Scatterprotocol.TransactOpts)
}

// ElevateToModelValidator is a paid mutator transaction binding the contract method 0xa06e692b.
//
// Solidity: function elevateToModelValidator() returns()
func (_Scatterprotocol *ScatterprotocolTransactorSession) ElevateToModelValidator() (*types.Transaction, error) {
	return _Scatterprotocol.Contract.ElevateToModelValidator(&_Scatterprotocol.TransactOpts)
}

// IncreaseAllowance is a paid mutator transaction binding the contract method 0x39509351.
//
// Solidity: function increaseAllowance(address spender, uint256 addedValue) returns(bool)
func (_Scatterprotocol *ScatterprotocolTransactor) IncreaseAllowance(opts *bind.TransactOpts, spender common.Address, addedValue *big.Int) (*types.Transaction, error) {
	return _Scatterprotocol.contract.Transact(opts, "increaseAllowance", spender, addedValue)
}

// IncreaseAllowance is a paid mutator transaction binding the contract method 0x39509351.
//
// Solidity: function increaseAllowance(address spender, uint256 addedValue) returns(bool)
func (_Scatterprotocol *ScatterprotocolSession) IncreaseAllowance(spender common.Address, addedValue *big.Int) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.IncreaseAllowance(&_Scatterprotocol.TransactOpts, spender, addedValue)
}

// IncreaseAllowance is a paid mutator transaction binding the contract method 0x39509351.
//
// Solidity: function increaseAllowance(address spender, uint256 addedValue) returns(bool)
func (_Scatterprotocol *ScatterprotocolTransactorSession) IncreaseAllowance(spender common.Address, addedValue *big.Int) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.IncreaseAllowance(&_Scatterprotocol.TransactOpts, spender, addedValue)
}

// InitCelestialNode is a paid mutator transaction binding the contract method 0x09079d0f.
//
// Solidity: function initCelestialNode() returns()
func (_Scatterprotocol *ScatterprotocolTransactor) InitCelestialNode(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Scatterprotocol.contract.Transact(opts, "initCelestialNode")
}

// InitCelestialNode is a paid mutator transaction binding the contract method 0x09079d0f.
//
// Solidity: function initCelestialNode() returns()
func (_Scatterprotocol *ScatterprotocolSession) InitCelestialNode() (*types.Transaction, error) {
	return _Scatterprotocol.Contract.InitCelestialNode(&_Scatterprotocol.TransactOpts)
}

// InitCelestialNode is a paid mutator transaction binding the contract method 0x09079d0f.
//
// Solidity: function initCelestialNode() returns()
func (_Scatterprotocol *ScatterprotocolTransactorSession) InitCelestialNode() (*types.Transaction, error) {
	return _Scatterprotocol.Contract.InitCelestialNode(&_Scatterprotocol.TransactOpts)
}

// InitRequestorNode is a paid mutator transaction binding the contract method 0xcb30bfc3.
//
// Solidity: function initRequestorNode() returns()
func (_Scatterprotocol *ScatterprotocolTransactor) InitRequestorNode(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Scatterprotocol.contract.Transact(opts, "initRequestorNode")
}

// InitRequestorNode is a paid mutator transaction binding the contract method 0xcb30bfc3.
//
// Solidity: function initRequestorNode() returns()
func (_Scatterprotocol *ScatterprotocolSession) InitRequestorNode() (*types.Transaction, error) {
	return _Scatterprotocol.Contract.InitRequestorNode(&_Scatterprotocol.TransactOpts)
}

// InitRequestorNode is a paid mutator transaction binding the contract method 0xcb30bfc3.
//
// Solidity: function initRequestorNode() returns()
func (_Scatterprotocol *ScatterprotocolTransactorSession) InitRequestorNode() (*types.Transaction, error) {
	return _Scatterprotocol.Contract.InitRequestorNode(&_Scatterprotocol.TransactOpts)
}

// InitTrainerNode is a paid mutator transaction binding the contract method 0x6949f907.
//
// Solidity: function initTrainerNode() returns()
func (_Scatterprotocol *ScatterprotocolTransactor) InitTrainerNode(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Scatterprotocol.contract.Transact(opts, "initTrainerNode")
}

// InitTrainerNode is a paid mutator transaction binding the contract method 0x6949f907.
//
// Solidity: function initTrainerNode() returns()
func (_Scatterprotocol *ScatterprotocolSession) InitTrainerNode() (*types.Transaction, error) {
	return _Scatterprotocol.Contract.InitTrainerNode(&_Scatterprotocol.TransactOpts)
}

// InitTrainerNode is a paid mutator transaction binding the contract method 0x6949f907.
//
// Solidity: function initTrainerNode() returns()
func (_Scatterprotocol *ScatterprotocolTransactorSession) InitTrainerNode() (*types.Transaction, error) {
	return _Scatterprotocol.Contract.InitTrainerNode(&_Scatterprotocol.TransactOpts)
}

// RemoveStake is a paid mutator transaction binding the contract method 0x939624ab.
//
// Solidity: function removeStake(uint256 amount) returns()
func (_Scatterprotocol *ScatterprotocolTransactor) RemoveStake(opts *bind.TransactOpts, amount *big.Int) (*types.Transaction, error) {
	return _Scatterprotocol.contract.Transact(opts, "removeStake", amount)
}

// RemoveStake is a paid mutator transaction binding the contract method 0x939624ab.
//
// Solidity: function removeStake(uint256 amount) returns()
func (_Scatterprotocol *ScatterprotocolSession) RemoveStake(amount *big.Int) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.RemoveStake(&_Scatterprotocol.TransactOpts, amount)
}

// RemoveStake is a paid mutator transaction binding the contract method 0x939624ab.
//
// Solidity: function removeStake(uint256 amount) returns()
func (_Scatterprotocol *ScatterprotocolTransactorSession) RemoveStake(amount *big.Int) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.RemoveStake(&_Scatterprotocol.TransactOpts, amount)
}

// SetBlockReward is a paid mutator transaction binding the contract method 0x1a18e707.
//
// Solidity: function setBlockReward(uint256 reward) returns()
func (_Scatterprotocol *ScatterprotocolTransactor) SetBlockReward(opts *bind.TransactOpts, reward *big.Int) (*types.Transaction, error) {
	return _Scatterprotocol.contract.Transact(opts, "setBlockReward", reward)
}

// SetBlockReward is a paid mutator transaction binding the contract method 0x1a18e707.
//
// Solidity: function setBlockReward(uint256 reward) returns()
func (_Scatterprotocol *ScatterprotocolSession) SetBlockReward(reward *big.Int) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.SetBlockReward(&_Scatterprotocol.TransactOpts, reward)
}

// SetBlockReward is a paid mutator transaction binding the contract method 0x1a18e707.
//
// Solidity: function setBlockReward(uint256 reward) returns()
func (_Scatterprotocol *ScatterprotocolTransactorSession) SetBlockReward(reward *big.Int) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.SetBlockReward(&_Scatterprotocol.TransactOpts, reward)
}

// SetEvaluationJobContractAddress is a paid mutator transaction binding the contract method 0x039e09b1.
//
// Solidity: function setEvaluationJobContractAddress(address newAddress) returns()
func (_Scatterprotocol *ScatterprotocolTransactor) SetEvaluationJobContractAddress(opts *bind.TransactOpts, newAddress common.Address) (*types.Transaction, error) {
	return _Scatterprotocol.contract.Transact(opts, "setEvaluationJobContractAddress", newAddress)
}

// SetEvaluationJobContractAddress is a paid mutator transaction binding the contract method 0x039e09b1.
//
// Solidity: function setEvaluationJobContractAddress(address newAddress) returns()
func (_Scatterprotocol *ScatterprotocolSession) SetEvaluationJobContractAddress(newAddress common.Address) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.SetEvaluationJobContractAddress(&_Scatterprotocol.TransactOpts, newAddress)
}

// SetEvaluationJobContractAddress is a paid mutator transaction binding the contract method 0x039e09b1.
//
// Solidity: function setEvaluationJobContractAddress(address newAddress) returns()
func (_Scatterprotocol *ScatterprotocolTransactorSession) SetEvaluationJobContractAddress(newAddress common.Address) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.SetEvaluationJobContractAddress(&_Scatterprotocol.TransactOpts, newAddress)
}

// SetTrainingJobContractAddress is a paid mutator transaction binding the contract method 0x5aff6e77.
//
// Solidity: function setTrainingJobContractAddress(address newAddress) returns()
func (_Scatterprotocol *ScatterprotocolTransactor) SetTrainingJobContractAddress(opts *bind.TransactOpts, newAddress common.Address) (*types.Transaction, error) {
	return _Scatterprotocol.contract.Transact(opts, "setTrainingJobContractAddress", newAddress)
}

// SetTrainingJobContractAddress is a paid mutator transaction binding the contract method 0x5aff6e77.
//
// Solidity: function setTrainingJobContractAddress(address newAddress) returns()
func (_Scatterprotocol *ScatterprotocolSession) SetTrainingJobContractAddress(newAddress common.Address) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.SetTrainingJobContractAddress(&_Scatterprotocol.TransactOpts, newAddress)
}

// SetTrainingJobContractAddress is a paid mutator transaction binding the contract method 0x5aff6e77.
//
// Solidity: function setTrainingJobContractAddress(address newAddress) returns()
func (_Scatterprotocol *ScatterprotocolTransactorSession) SetTrainingJobContractAddress(newAddress common.Address) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.SetTrainingJobContractAddress(&_Scatterprotocol.TransactOpts, newAddress)
}

// Transfer is a paid mutator transaction binding the contract method 0xa9059cbb.
//
// Solidity: function transfer(address to, uint256 amount) returns(bool)
func (_Scatterprotocol *ScatterprotocolTransactor) Transfer(opts *bind.TransactOpts, to common.Address, amount *big.Int) (*types.Transaction, error) {
	return _Scatterprotocol.contract.Transact(opts, "transfer", to, amount)
}

// Transfer is a paid mutator transaction binding the contract method 0xa9059cbb.
//
// Solidity: function transfer(address to, uint256 amount) returns(bool)
func (_Scatterprotocol *ScatterprotocolSession) Transfer(to common.Address, amount *big.Int) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.Transfer(&_Scatterprotocol.TransactOpts, to, amount)
}

// Transfer is a paid mutator transaction binding the contract method 0xa9059cbb.
//
// Solidity: function transfer(address to, uint256 amount) returns(bool)
func (_Scatterprotocol *ScatterprotocolTransactorSession) Transfer(to common.Address, amount *big.Int) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.Transfer(&_Scatterprotocol.TransactOpts, to, amount)
}

// TransferFrom is a paid mutator transaction binding the contract method 0x23b872dd.
//
// Solidity: function transferFrom(address from, address to, uint256 amount) returns(bool)
func (_Scatterprotocol *ScatterprotocolTransactor) TransferFrom(opts *bind.TransactOpts, from common.Address, to common.Address, amount *big.Int) (*types.Transaction, error) {
	return _Scatterprotocol.contract.Transact(opts, "transferFrom", from, to, amount)
}

// TransferFrom is a paid mutator transaction binding the contract method 0x23b872dd.
//
// Solidity: function transferFrom(address from, address to, uint256 amount) returns(bool)
func (_Scatterprotocol *ScatterprotocolSession) TransferFrom(from common.Address, to common.Address, amount *big.Int) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.TransferFrom(&_Scatterprotocol.TransactOpts, from, to, amount)
}

// TransferFrom is a paid mutator transaction binding the contract method 0x23b872dd.
//
// Solidity: function transferFrom(address from, address to, uint256 amount) returns(bool)
func (_Scatterprotocol *ScatterprotocolTransactorSession) TransferFrom(from common.Address, to common.Address, amount *big.Int) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.TransferFrom(&_Scatterprotocol.TransactOpts, from, to, amount)
}

// ScatterprotocolApprovalIterator is returned from FilterApproval and is used to iterate over the raw logs and unpacked data for Approval events raised by the Scatterprotocol contract.
type ScatterprotocolApprovalIterator struct {
	Event *ScatterprotocolApproval // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ScatterprotocolApprovalIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ScatterprotocolApproval)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ScatterprotocolApproval)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ScatterprotocolApprovalIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ScatterprotocolApprovalIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ScatterprotocolApproval represents a Approval event raised by the Scatterprotocol contract.
type ScatterprotocolApproval struct {
	Owner   common.Address
	Spender common.Address
	Value   *big.Int
	Raw     types.Log // Blockchain specific contextual infos
}

// FilterApproval is a free log retrieval operation binding the contract event 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925.
//
// Solidity: event Approval(address indexed owner, address indexed spender, uint256 value)
func (_Scatterprotocol *ScatterprotocolFilterer) FilterApproval(opts *bind.FilterOpts, owner []common.Address, spender []common.Address) (*ScatterprotocolApprovalIterator, error) {

	var ownerRule []interface{}
	for _, ownerItem := range owner {
		ownerRule = append(ownerRule, ownerItem)
	}
	var spenderRule []interface{}
	for _, spenderItem := range spender {
		spenderRule = append(spenderRule, spenderItem)
	}

	logs, sub, err := _Scatterprotocol.contract.FilterLogs(opts, "Approval", ownerRule, spenderRule)
	if err != nil {
		return nil, err
	}
	return &ScatterprotocolApprovalIterator{contract: _Scatterprotocol.contract, event: "Approval", logs: logs, sub: sub}, nil
}

// WatchApproval is a free log subscription operation binding the contract event 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925.
//
// Solidity: event Approval(address indexed owner, address indexed spender, uint256 value)
func (_Scatterprotocol *ScatterprotocolFilterer) WatchApproval(opts *bind.WatchOpts, sink chan<- *ScatterprotocolApproval, owner []common.Address, spender []common.Address) (event.Subscription, error) {

	var ownerRule []interface{}
	for _, ownerItem := range owner {
		ownerRule = append(ownerRule, ownerItem)
	}
	var spenderRule []interface{}
	for _, spenderItem := range spender {
		spenderRule = append(spenderRule, spenderItem)
	}

	logs, sub, err := _Scatterprotocol.contract.WatchLogs(opts, "Approval", ownerRule, spenderRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ScatterprotocolApproval)
				if err := _Scatterprotocol.contract.UnpackLog(event, "Approval", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseApproval is a log parse operation binding the contract event 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925.
//
// Solidity: event Approval(address indexed owner, address indexed spender, uint256 value)
func (_Scatterprotocol *ScatterprotocolFilterer) ParseApproval(log types.Log) (*ScatterprotocolApproval, error) {
	event := new(ScatterprotocolApproval)
	if err := _Scatterprotocol.contract.UnpackLog(event, "Approval", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ScatterprotocolTransferIterator is returned from FilterTransfer and is used to iterate over the raw logs and unpacked data for Transfer events raised by the Scatterprotocol contract.
type ScatterprotocolTransferIterator struct {
	Event *ScatterprotocolTransfer // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ScatterprotocolTransferIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ScatterprotocolTransfer)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ScatterprotocolTransfer)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ScatterprotocolTransferIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ScatterprotocolTransferIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ScatterprotocolTransfer represents a Transfer event raised by the Scatterprotocol contract.
type ScatterprotocolTransfer struct {
	From  common.Address
	To    common.Address
	Value *big.Int
	Raw   types.Log // Blockchain specific contextual infos
}

// FilterTransfer is a free log retrieval operation binding the contract event 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef.
//
// Solidity: event Transfer(address indexed from, address indexed to, uint256 value)
func (_Scatterprotocol *ScatterprotocolFilterer) FilterTransfer(opts *bind.FilterOpts, from []common.Address, to []common.Address) (*ScatterprotocolTransferIterator, error) {

	var fromRule []interface{}
	for _, fromItem := range from {
		fromRule = append(fromRule, fromItem)
	}
	var toRule []interface{}
	for _, toItem := range to {
		toRule = append(toRule, toItem)
	}

	logs, sub, err := _Scatterprotocol.contract.FilterLogs(opts, "Transfer", fromRule, toRule)
	if err != nil {
		return nil, err
	}
	return &ScatterprotocolTransferIterator{contract: _Scatterprotocol.contract, event: "Transfer", logs: logs, sub: sub}, nil
}

// WatchTransfer is a free log subscription operation binding the contract event 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef.
//
// Solidity: event Transfer(address indexed from, address indexed to, uint256 value)
func (_Scatterprotocol *ScatterprotocolFilterer) WatchTransfer(opts *bind.WatchOpts, sink chan<- *ScatterprotocolTransfer, from []common.Address, to []common.Address) (event.Subscription, error) {

	var fromRule []interface{}
	for _, fromItem := range from {
		fromRule = append(fromRule, fromItem)
	}
	var toRule []interface{}
	for _, toItem := range to {
		toRule = append(toRule, toItem)
	}

	logs, sub, err := _Scatterprotocol.contract.WatchLogs(opts, "Transfer", fromRule, toRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ScatterprotocolTransfer)
				if err := _Scatterprotocol.contract.UnpackLog(event, "Transfer", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseTransfer is a log parse operation binding the contract event 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef.
//
// Solidity: event Transfer(address indexed from, address indexed to, uint256 value)
func (_Scatterprotocol *ScatterprotocolFilterer) ParseTransfer(log types.Log) (*ScatterprotocolTransfer, error) {
	event := new(ScatterprotocolTransfer)
	if err := _Scatterprotocol.contract.UnpackLog(event, "Transfer", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}
