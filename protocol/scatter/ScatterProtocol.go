// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package scatterprotocol

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// ScatterprotocolMetaData contains all meta data concerning the Scatterprotocol contract.
var ScatterprotocolMetaData = &bind.MetaData{
	ABI: "[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"cap\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"trainingTokenContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"evaluationTokenContract\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"addStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"topicName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"jobCid\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"requestorAddress\",\"type\":\"address\"}],\"name\":\"addTopicForRequestor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToNodeId\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"addressToTopics\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"addressToTrainingJobInfo\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"trainingJobCid\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"blockReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nodeAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"topicName\",\"type\":\"string\"}],\"name\":\"checkIfTopicExistsForRequestor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"destroy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"elevateToCosmosValidator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"elevateToModelValidator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"evaluationJobContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getAccountStake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwnStake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"skip\",\"type\":\"int256\"}],\"name\":\"getRequestorAddresses\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addressToFind\",\"type\":\"address\"}],\"name\":\"getRoleByAddress\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"requestorAddress\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"skip\",\"type\":\"int256\"}],\"name\":\"getTopicsByRequestorAddress\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"requestorAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"topicName\",\"type\":\"string\"},{\"internalType\":\"int256\",\"name\":\"skip\",\"type\":\"int256\"}],\"name\":\"getTrainersByAddressAndTopic\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initCelestialNode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initRequestorNode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initTrainerNode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"networkRequestors\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"networkTrainers\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"addresspayable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"removeStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"tokenURI\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"topicName\",\"type\":\"string\"}],\"name\":\"requestorAddTopic\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"requiredCosmosValidatorStake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"requiredModelValidatorStake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"setBlockReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"setEvaluationJobContractAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"nodeId\",\"type\":\"string\"}],\"name\":\"setNodeId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"setTrainingJobContractAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"requestorAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"requestorTopic\",\"type\":\"string\"}],\"name\":\"trainerAddTopic\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"trainingJobContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]",
	Bin: "0x60a06040523480156200001157600080fd5b506040516200623138038062006231833981810160405281019062000037919062000718565b62000047620002cf60201b60201c565b600a6200005591906200091a565b846200006291906200096b565b6040518060400160405280600c81526020017f53636174746572546f6b656e00000000000000000000000000000000000000008152506040518060400160405280600281526020017f53540000000000000000000000000000000000000000000000000000000000008152508160039081620000df919062000c26565b508060049081620000f1919062000c26565b505050600081116200013a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001319062000d6e565b60405180910390fd5b80608081815250505033600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620001fe600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16620001bb620002cf60201b60201c565b600a620001c991906200091a565b6046606488620001da919062000dbf565b620001e691906200096b565b620001f291906200096b565b620002d860201b60201c565b6200020e620002cf60201b60201c565b600a6200021c91906200091a565b836200022991906200096b565b6008819055506207a120600981905550620186a0600a8190555081600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050505062000f44565b60006012905090565b620002e86200036960201b60201c565b81620002fe6200037360201b62000cca1760201c565b6200030a919062000df7565b11156200034e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620003459062000e82565b60405180910390fd5b6200036582826200037d60201b620028ed1760201c565b5050565b6000608051905090565b6000600254905090565b6200038d6200036960201b60201c565b81620003a36200037360201b62000cca1760201c565b620003af919062000df7565b1115620003f3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620003ea9062000e82565b60405180910390fd5b6200040a82826200040e60201b620029571760201c565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160362000480576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620004779062000ef4565b60405180910390fd5b62000494600083836200057b60201b60201c565b8060026000828254620004a8919062000df7565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516200055b919062000f27565b60405180910390a362000577600083836200065360201b60201c565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015620005e557504173ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b80156200061f5750600073ffffffffffffffffffffffffffffffffffffffff164173ffffffffffffffffffffffffffffffffffffffff1614155b156200063657620006356200065860201b60201c565b5b6200064e8383836200066e60201b62002aad1760201c565b505050565b505050565b6200066c41600854620002d860201b60201c565b565b505050565b600080fd5b6000819050919050565b6200068d8162000678565b81146200069957600080fd5b50565b600081519050620006ad8162000682565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620006e082620006b3565b9050919050565b620006f281620006d3565b8114620006fe57600080fd5b50565b6000815190506200071281620006e7565b92915050565b6000806000806080858703121562000735576200073462000673565b5b600062000745878288016200069c565b945050602062000758878288016200069c565b93505060406200076b8782880162000701565b92505060606200077e8782880162000701565b91505092959194509250565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008160011c9050919050565b6000808291508390505b60018511156200081857808604811115620007f057620007ef6200078a565b5b6001851615620008005780820291505b80810290506200081085620007b9565b9450620007d0565b94509492505050565b60008262000833576001905062000906565b8162000843576000905062000906565b81600181146200085c576002811462000867576200089d565b600191505062000906565b60ff8411156200087c576200087b6200078a565b5b8360020a9150848211156200089657620008956200078a565b5b5062000906565b5060208310610133831016604e8410600b8410161715620008d75782820a905083811115620008d157620008d06200078a565b5b62000906565b620008e68484846001620007c6565b925090508184048111156200090057620008ff6200078a565b5b81810290505b9392505050565b600060ff82169050919050565b6000620009278262000678565b915062000934836200090d565b9250620009637fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff848462000821565b905092915050565b6000620009788262000678565b9150620009858362000678565b9250828202620009958162000678565b91508282048414831517620009af57620009ae6200078a565b5b5092915050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168062000a3857607f821691505b60208210810362000a4e5762000a4d620009f0565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830262000ab87fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000a79565b62000ac4868362000a79565b95508019841693508086168417925050509392505050565b6000819050919050565b600062000b0762000b0162000afb8462000678565b62000adc565b62000678565b9050919050565b6000819050919050565b62000b238362000ae6565b62000b3b62000b328262000b0e565b84845462000a86565b825550505050565b600090565b62000b5262000b43565b62000b5f81848462000b18565b505050565b5b8181101562000b875762000b7b60008262000b48565b60018101905062000b65565b5050565b601f82111562000bd65762000ba08162000a54565b62000bab8462000a69565b8101602085101562000bbb578190505b62000bd362000bca8562000a69565b83018262000b64565b50505b505050565b600082821c905092915050565b600062000bfb6000198460080262000bdb565b1980831691505092915050565b600062000c16838362000be8565b9150826002028217905092915050565b62000c3182620009b6565b67ffffffffffffffff81111562000c4d5762000c4c620009c1565b5b62000c59825462000a1f565b62000c6682828562000b8b565b600060209050601f83116001811462000c9e576000841562000c89578287015190505b62000c95858262000c08565b86555062000d05565b601f19841662000cae8662000a54565b60005b8281101562000cd85784890151825560018201915060208501945060208101905062000cb1565b8683101562000cf8578489015162000cf4601f89168262000be8565b8355505b6001600288020188555050505b505050505050565b600082825260208201905092915050565b7f45524332304361707065643a2063617020697320300000000000000000000000600082015250565b600062000d5660158362000d0d565b915062000d638262000d1e565b602082019050919050565b6000602082019050818103600083015262000d898162000d47565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600062000dcc8262000678565b915062000dd98362000678565b92508262000dec5762000deb62000d90565b5b828204905092915050565b600062000e048262000678565b915062000e118362000678565b925082820190508082111562000e2c5762000e2b6200078a565b5b92915050565b7f45524332304361707065643a2063617020657863656564656400000000000000600082015250565b600062000e6a60198362000d0d565b915062000e778262000e32565b602082019050919050565b6000602082019050818103600083015262000e9d8162000e5b565b9050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b600062000edc601f8362000d0d565b915062000ee98262000ea4565b602082019050919050565b6000602082019050818103600083015262000f0f8162000ecd565b9050919050565b62000f218162000678565b82525050565b600060208201905062000f3e600083018462000f16565b92915050565b6080516152d162000f606000396000610dc801526152d16000f3fe608060405234801561001057600080fd5b50600436106102955760003560e01c806370a0823111610167578063aa711be6116100ce578063cff06d3911610087578063cff06d39146107ea578063d8ecebed14610808578063dd62ed3e14610838578063eb4f16b514610868578063ef36d16a14610884578063fb7ba582146108b457610295565b8063aa711be614610728578063b3f5b28014610758578063b4efe15f14610776578063bdb66855146107a6578063c0d241ed146107b0578063cb30bfc3146107e057610295565b8063939624ab11610120578063939624ab1461065457806395d89b4114610670578063a06e692b1461068e578063a457c2d714610698578063a765d052146106c8578063a9059cbb146106f857610295565b806370a082311461059457806379cc6790146105c45780637bff77d4146105e05780637d9011ec1461061057806383197ef01461062c5780638da5cb5b1461063657610295565b8063355274ea1161020b5780635aff6e77116101c45780635aff6e77146104d65780635e30913f146104f2578063624c45ea1461052257806363b23aff146105525780636408602d1461056e5780636949f9071461058a57610295565b8063355274ea1461040257806335b40e601461042057806336cb7f8014610450578063395093511461046e57806342966c681461049e578063513d5b1d146104ba57610295565b8063095ea7b31161025d578063095ea7b31461032c5780630ac168a11461035c57806318160ddd1461037a5780631a18e7071461039857806323b872dd146103b4578063313ce567146103e457610295565b8063039e09b11461029a57806304aa1397146102b657806306fdde03146102e657806308b44b011461030457806309079d0f14610322575b600080fd5b6102b460048036038101906102af9190613861565b6108d2565b005b6102d060048036038101906102cb9190613a0a565b6109a6565b6040516102dd9190613af8565b60405180910390f35b6102ee610b9f565b6040516102fb9190613af8565b60405180910390f35b61030c610c31565b6040516103199190613b33565b60405180910390f35b61032a610c37565b005b61034660048036038101906103419190613b7a565b610ca1565b6040516103539190613bd5565b60405180910390f35b610364610cc4565b6040516103719190613b33565b60405180910390f35b610382610cca565b60405161038f9190613b33565b60405180910390f35b6103b260048036038101906103ad9190613bf0565b610cd4565b005b6103ce60048036038101906103c99190613c1d565b610d8c565b6040516103db9190613bd5565b60405180910390f35b6103ec610dbb565b6040516103f99190613c8c565b60405180910390f35b61040a610dc4565b6040516104179190613b33565b60405180910390f35b61043a60048036038101906104359190613ca7565b610dec565b6040516104479190613bd5565b60405180910390f35b610458610e63565b6040516104659190613b33565b60405180910390f35b61048860048036038101906104839190613b7a565b610e69565b6040516104959190613bd5565b60405180910390f35b6104b860048036038101906104b39190613bf0565b610ea0565b005b6104d460048036038101906104cf9190613d03565b610eb4565b005b6104f060048036038101906104eb9190613861565b610fc2565b005b61050c60048036038101906105079190613861565b611096565b6040516105199190613b33565b60405180910390f35b61053c60048036038101906105379190613b7a565b6110df565b6040516105499190613af8565b60405180910390f35b61056c60048036038101906105679190613d7b565b611198565b005b61058860048036038101906105839190613ca7565b611457565b005b610592611593565b005b6105ae60048036038101906105a99190613861565b611608565b6040516105bb9190613b33565b60405180910390f35b6105de60048036038101906105d99190613b7a565b611650565b005b6105fa60048036038101906105f59190613861565b611670565b6040516106079190613af8565b60405180910390f35b61062a60048036038101906106259190613e06565b611984565b005b6106346119d4565b005b61063e611a9f565b60405161064b9190613e70565b60405180910390f35b61066e60048036038101906106699190613bf0565b611ac5565b005b610678611eca565b6040516106859190613af8565b60405180910390f35b610696611f5c565b005b6106b260048036038101906106ad9190613b7a565b61204a565b6040516106bf9190613bd5565b60405180910390f35b6106e260048036038101906106dd9190613bf0565b6120c1565b6040516106ef9190613e9a565b60405180910390f35b610712600480360381019061070d9190613b7a565b612100565b60405161071f9190613bd5565b60405180910390f35b610742600480360381019061073d9190613bf0565b612123565b60405161074f9190613e9a565b60405180910390f35b610760612162565b60405161076d9190613e9a565b60405180910390f35b610790600480360381019061078b9190613eb5565b612188565b60405161079d9190613af8565b60405180910390f35b6107ae6122a3565b005b6107ca60048036038101906107c59190613ca7565b612391565b6040516107d79190613af8565b60405180910390f35b6107e861245a565b005b6107f26124cf565b6040516107ff9190613e9a565b60405180910390f35b610822600480360381019061081d9190613ee2565b6124f5565b60405161082f9190613af8565b60405180910390f35b610852600480360381019061084d9190613f22565b612687565b60405161085f9190613b33565b60405180910390f35b610882600480360381019061087d9190613bf0565b61270e565b005b61089e60048036038101906108999190613861565b612806565b6040516108ab9190613af8565b60405180910390f35b6108bc6128a6565b6040516108c99190613b33565b60405180910390f35b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610962576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161095990613fd4565b60405180910390fd5b80600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b606060006040518060200160405280600081525090506000600e60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002085604051610a0b9190614030565b908152602001604051809103902090506000600a85610a2a9190614076565b826001018054905012610a4957600a85610a449190614076565b610a52565b81600101805490505b905060008590505b81811215610b9157600073ffffffffffffffffffffffffffffffffffffffff16836001018281548110610a9057610a8f6140ba565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160315610b7e5783610b39846001018381548110610af157610af06140ba565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166014612ab2565b604051602001610b4a9291906140e9565b604051602081830303815290604052935083604051602001610b6c9190614133565b60405160208183030381529060405293505b8080610b8990614159565b915050610a5a565b508293505050509392505050565b606060038054610bae906141d0565b80601f0160208091040260200160405190810160405280929190818152602001828054610bda906141d0565b8015610c275780601f10610bfc57610100808354040283529160200191610c27565b820191906000526020600020905b815481529060010190602001808311610c0a57829003601f168201915b5050505050905090565b600a5481565b6003600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690836005811115610c9a57610c99614201565b5b0217905550565b600080610cac612cee565b9050610cb9818585612cf6565b600191505092915050565b60085481565b6000600254905090565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610d64576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d5b90613fd4565b60405180910390fd5b610d6c610dbb565b600a610d789190614363565b81610d8391906143ae565b60088190555050565b600080610d97612cee565b9050610da4858285612ebf565b610daf858585612f4b565b60019150509392505050565b60006012905090565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b600080600e60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002083604051610e3c9190614030565b90815260200160405180910390206000018054610e58906141d0565b905011905092915050565b60095481565b600080610e74612cee565b9050610e95818585610e868589612687565b610e9091906143f0565b612cf6565b600191505092915050565b610eb1610eab612cee565b826131c1565b50565b60016005811115610ec857610ec7614201565b5b600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166005811115610f2757610f26614201565b5b03610fbe57600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ca8ef5308383336040518463ffffffff1660e01b8152600401610f8b93929190614424565b600060405180830381600087803b158015610fa557600080fd5b505af1158015610fb9573d6000803e3d6000fd5b505050505b5050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611052576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161104990613fd4565b60405180910390fd5b80600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000600b60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600f60205281600052604060002081815481106110fb57600080fd5b90600052602060002001600091509150508054611117906141d0565b80601f0160208091040260200160405190810160405280929190818152602001828054611143906141d0565b80156111905780601f1061116557610100808354040283529160200191611190565b820191906000526020600020905b81548152906001019060200180831161117357829003601f168201915b505050505081565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611228576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161121f90614501565b60405180910390fd5b6001600581111561123c5761123b614201565b5b600d60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16600581111561129b5761129a614201565b5b146112db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112d2906145b9565b60405180910390fd5b60008067ffffffffffffffff8111156112f7576112f66138a9565b5b6040519080825280602002602001820160405280156113255781602001602082028036833780820191505090505b5090506000604051806040016040528085815260200183815250905080600e60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208660405161138f9190614030565b908152602001604051809103902060008201518160000190816113b29190614785565b5060208201518160010190805190602001906113cf929190613748565b50905050600f60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020859080600181540180825580915050600190039060005260206000200160009091909190915090816114449190614785565b5061145083600161338e565b5050505050565b6002600581111561146b5761146a614201565b5b600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1660058111156114ca576114c9614201565b5b0361158f57600e60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208160405161151c9190614030565b9081526020016040518091039020600101339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b5050565b6002600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908360058111156115f6576115f5614201565b5b021790555061160633600261338e565b565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6116628261165c612cee565b83612ebf565b61166c82826131c1565b5050565b60606001600581111561168657611685614201565b5b600d60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1660058111156116e5576116e4614201565b5b03611727576040518060400160405280600981526020017f726571756573746f720000000000000000000000000000000000000000000000815250905061197f565b6002600581111561173b5761173a614201565b5b600d60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16600581111561179a57611799614201565b5b036117dc576040518060400160405280600781526020017f747261696e657200000000000000000000000000000000000000000000000000815250905061197f565b600360058111156117f0576117ef614201565b5b600d60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16600581111561184f5761184e614201565b5b03611891576040518060400160405280600981526020017f63656c65737469616c0000000000000000000000000000000000000000000000815250905061197f565b600460058111156118a5576118a4614201565b5b600d60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16600581111561190457611903614201565b5b03611946576040518060400160405280600981526020017f76616c696461746f720000000000000000000000000000000000000000000000815250905061197f565b6040518060400160405280600781526020017f6e6f20726f6c650000000000000000000000000000000000000000000000000081525090505b919050565b80601460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090816119d09190614785565b5050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611a64576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a5b90613fd4565b60405180910390fd5b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff5b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b42600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015611b47576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b3e906148c9565b60405180910390fd5b600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054811115611bc9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611bc09061495b565b60405180910390fd5b60008111611c0c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c03906149c7565b60405180910390fd5b611c16338261360b565b80600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611c6591906149e7565b9250508190555060046005811115611c8057611c7f614201565b5b600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166005811115611cdf57611cde614201565b5b148015611d2c5750600954600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054105b15611d9a576000600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690836005811115611d9457611d93614201565b5b02179055505b600580811115611dad57611dac614201565b5b600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166005811115611e0c57611e0b614201565b5b148015611e595750600a54600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054105b15611ec7576000600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690836005811115611ec157611ec0614201565b5b02179055505b50565b606060048054611ed9906141d0565b80601f0160208091040260200160405190810160405280929190818152602001828054611f05906141d0565b8015611f525780601f10611f2757610100808354040283529160200191611f52565b820191906000526020600020905b815481529060010190602001808311611f3557829003601f168201915b5050505050905090565b600954600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015611fe0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611fd790614ab3565b60405180910390fd5b6004600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083600581111561204357612042614201565b5b0217905550565b600080612055612cee565b905060006120638286612687565b9050838110156120a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161209f90614b45565b60405180910390fd5b6120b58286868403612cf6565b60019250505092915050565b601181815481106120d157600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008061210b612cee565b9050612118818585612f4b565b600191505092915050565b6013818154811061213357600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b606060006040518060200160405280600081525090506000600a846121ad9190614076565b601180549050126121ca57600a846121c59190614076565b6121d1565b6011805490505b905060008490505b818112156122985782612241601183815481106121f9576121f86140ba565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166014612ab2565b6040516020016122529291906140e9565b6040516020818303038152906040529250826040516020016122749190614133565b6040516020818303038152906040529250808061229090614159565b9150506121d9565b508192505050919050565b600a54600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015612327576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161231e90614bfd565b60405180910390fd5b6005600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083600581111561238a57612389614201565b5b0217905550565b600e60205281600052604060002081805160208101820180518482526020830160208501208183528095505050505050600091509150508060000180546123d7906141d0565b80601f0160208091040260200160405190810160405280929190818152602001828054612403906141d0565b80156124505780601f1061242557610100808354040283529160200191612450565b820191906000526020600020905b81548152906001019060200180831161243357829003601f168201915b5050505050905081565b6001600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908360058111156124bd576124bc614201565b5b02179055506124cd33600161338e565b565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b606060006040518060200160405280600081525090506000600a8461251a9190614076565b600f60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490501261257457600a8461256f9190614076565b6125b8565b600f60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490505b905060008490505b8181121561267b5782600f60008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811061261a576126196140ba565b5b90600052602060002001604051602001612635929190614ca0565b6040516020818303038152906040529250826040516020016126579190614133565b6040516020818303038152906040529250808061267390614159565b9150506125c0565b50819250505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60008111612751576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612748906149c7565b60405180910390fd5b61275b33826131c1565b80600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546127aa91906143f0565b9250508190555062278d00426127c091906143f0565b600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050565b60146020528060005260406000206000915090508054612825906141d0565b80601f0160208091040260200160405190810160405280929190818152602001828054612851906141d0565b801561289e5780601f106128735761010080835404028352916020019161289e565b820191906000526020600020905b81548152906001019060200180831161288157829003601f168201915b505050505081565b6000600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905090565b6128f5610dc4565b816128fe610cca565b61290891906143f0565b1115612949576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161294090614d10565b60405180910390fd5b6129538282612957565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036129c6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016129bd90614d7c565b60405180910390fd5b6129d260008383613675565b80600260008282546129e491906143f0565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051612a959190613b33565b60405180910390a3612aa960008383613735565b5050565b505050565b606060006002836002612ac591906143ae565b612acf91906143f0565b67ffffffffffffffff811115612ae857612ae76138a9565b5b6040519080825280601f01601f191660200182016040528015612b1a5781602001600182028036833780820191505090505b5090507f300000000000000000000000000000000000000000000000000000000000000081600081518110612b5257612b516140ba565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f780000000000000000000000000000000000000000000000000000000000000081600181518110612bb657612bb56140ba565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060006001846002612bf691906143ae565b612c0091906143f0565b90505b6001811115612ca0577f3031323334353637383961626364656600000000000000000000000000000000600f861660108110612c4257612c416140ba565b5b1a60f81b828281518110612c5957612c586140ba565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600485901c945080612c9990614d9c565b9050612c03565b5060008414612ce4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612cdb90614e11565b60405180910390fd5b8091505092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603612d65576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612d5c90614ea3565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603612dd4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612dcb90614f35565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051612eb29190613b33565b60405180910390a3505050565b6000612ecb8484612687565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114612f455781811015612f37576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612f2e90614fa1565b60405180910390fd5b612f448484848403612cf6565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603612fba576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612fb190615033565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603613029576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401613020906150c5565b60405180910390fd5b613034838383613675565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050818110156130ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016130b190615157565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516131a89190613b33565b60405180910390a36131bb848484613735565b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603613230576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401613227906151e9565b60405180910390fd5b61323c82600083613675565b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050818110156132c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016132b99061527b565b60405180910390fd5b8181036000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081600260008282540392505081905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516133759190613b33565b60405180910390a361338983600084613735565b505050565b600160058111156133a2576133a1614201565b5b8160058111156133b5576133b4614201565b5b036134cc57601060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166134c7576011829080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001601060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505b613607565b600260058111156134e0576134df614201565b5b8160058111156134f3576134f2614201565b5b0361360657601260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16613605576013829080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001601260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505b5b5b5050565b613613610dc4565b8161361c610cca565b61362691906143f0565b1115613667576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161365e90614d10565b60405180910390fd5b61367182826128ed565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156136de57504173ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b80156137175750600073ffffffffffffffffffffffffffffffffffffffff164173ffffffffffffffffffffffffffffffffffffffff1614155b156137255761372461373a565b5b613730838383612aad565b505050565b505050565b6137464160085461360b565b565b8280548282559060005260206000209081019282156137c1579160200282015b828111156137c05782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190613768565b5b5090506137ce91906137d2565b5090565b5b808211156137eb5760008160009055506001016137d3565b5090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061382e82613803565b9050919050565b61383e81613823565b811461384957600080fd5b50565b60008135905061385b81613835565b92915050565b600060208284031215613877576138766137f9565b5b60006138858482850161384c565b91505092915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6138e182613898565b810181811067ffffffffffffffff82111715613900576138ff6138a9565b5b80604052505050565b60006139136137ef565b905061391f82826138d8565b919050565b600067ffffffffffffffff82111561393f5761393e6138a9565b5b61394882613898565b9050602081019050919050565b82818337600083830152505050565b600061397761397284613924565b613909565b90508281526020810184848401111561399357613992613893565b5b61399e848285613955565b509392505050565b600082601f8301126139bb576139ba61388e565b5b81356139cb848260208601613964565b91505092915050565b6000819050919050565b6139e7816139d4565b81146139f257600080fd5b50565b600081359050613a04816139de565b92915050565b600080600060608486031215613a2357613a226137f9565b5b6000613a318682870161384c565b935050602084013567ffffffffffffffff811115613a5257613a516137fe565b5b613a5e868287016139a6565b9250506040613a6f868287016139f5565b9150509250925092565b600081519050919050565b600082825260208201905092915050565b60005b83811015613ab3578082015181840152602081019050613a98565b60008484015250505050565b6000613aca82613a79565b613ad48185613a84565b9350613ae4818560208601613a95565b613aed81613898565b840191505092915050565b60006020820190508181036000830152613b128184613abf565b905092915050565b6000819050919050565b613b2d81613b1a565b82525050565b6000602082019050613b486000830184613b24565b92915050565b613b5781613b1a565b8114613b6257600080fd5b50565b600081359050613b7481613b4e565b92915050565b60008060408385031215613b9157613b906137f9565b5b6000613b9f8582860161384c565b9250506020613bb085828601613b65565b9150509250929050565b60008115159050919050565b613bcf81613bba565b82525050565b6000602082019050613bea6000830184613bc6565b92915050565b600060208284031215613c0657613c056137f9565b5b6000613c1484828501613b65565b91505092915050565b600080600060608486031215613c3657613c356137f9565b5b6000613c448682870161384c565b9350506020613c558682870161384c565b9250506040613c6686828701613b65565b9150509250925092565b600060ff82169050919050565b613c8681613c70565b82525050565b6000602082019050613ca16000830184613c7d565b92915050565b60008060408385031215613cbe57613cbd6137f9565b5b6000613ccc8582860161384c565b925050602083013567ffffffffffffffff811115613ced57613cec6137fe565b5b613cf9858286016139a6565b9150509250929050565b60008060408385031215613d1a57613d196137f9565b5b600083013567ffffffffffffffff811115613d3857613d376137fe565b5b613d44858286016139a6565b925050602083013567ffffffffffffffff811115613d6557613d646137fe565b5b613d71858286016139a6565b9150509250929050565b600080600060608486031215613d9457613d936137f9565b5b600084013567ffffffffffffffff811115613db257613db16137fe565b5b613dbe868287016139a6565b935050602084013567ffffffffffffffff811115613ddf57613dde6137fe565b5b613deb868287016139a6565b9250506040613dfc8682870161384c565b9150509250925092565b600060208284031215613e1c57613e1b6137f9565b5b600082013567ffffffffffffffff811115613e3a57613e396137fe565b5b613e46848285016139a6565b91505092915050565b6000613e5a82613803565b9050919050565b613e6a81613e4f565b82525050565b6000602082019050613e856000830184613e61565b92915050565b613e9481613823565b82525050565b6000602082019050613eaf6000830184613e8b565b92915050565b600060208284031215613ecb57613eca6137f9565b5b6000613ed9848285016139f5565b91505092915050565b60008060408385031215613ef957613ef86137f9565b5b6000613f078582860161384c565b9250506020613f18858286016139f5565b9150509250929050565b60008060408385031215613f3957613f386137f9565b5b6000613f478582860161384c565b9250506020613f588582860161384c565b9150509250929050565b7f4f6e6c7920746865206f776e65722063616e2063616c6c20746869732066756e60008201527f6374696f6e000000000000000000000000000000000000000000000000000000602082015250565b6000613fbe602583613a84565b9150613fc982613f62565b604082019050919050565b60006020820190508181036000830152613fed81613fb1565b9050919050565b600081905092915050565b600061400a82613a79565b6140148185613ff4565b9350614024818560208601613a95565b80840191505092915050565b600061403c8284613fff565b915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000614081826139d4565b915061408c836139d4565b9250828201905082811215600083121683821260008412151617156140b4576140b3614047565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006140f58285613fff565b91506141018284613fff565b91508190509392505050565b7f0a00000000000000000000000000000000000000000000000000000000000000815250565b600061413f8284613fff565b915061414a8261410d565b60018201915081905092915050565b6000614164826139d4565b91507f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361419657614195614047565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806141e857607f821691505b6020821081036141fb576141fa6141a1565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60008160011c9050919050565b6000808291508390505b60018511156142875780860481111561426357614262614047565b5b60018516156142725780820291505b808102905061428085614230565b9450614247565b94509492505050565b6000826142a0576001905061435c565b816142ae576000905061435c565b81600181146142c457600281146142ce576142fd565b600191505061435c565b60ff8411156142e0576142df614047565b5b8360020a9150848211156142f7576142f6614047565b5b5061435c565b5060208310610133831016604e8410600b84101617156143325782820a90508381111561432d5761432c614047565b5b61435c565b61433f848484600161423d565b9250905081840481111561435657614355614047565b5b81810290505b9392505050565b600061436e82613b1a565b915061437983613c70565b92506143a67fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484614290565b905092915050565b60006143b982613b1a565b91506143c483613b1a565b92508282026143d281613b1a565b915082820484148315176143e9576143e8614047565b5b5092915050565b60006143fb82613b1a565b915061440683613b1a565b925082820190508082111561441e5761441d614047565b5b92915050565b6000606082019050818103600083015261443e8186613abf565b905081810360208301526144528185613abf565b90506144616040830184613e8b565b949350505050565b7f54686973206d6574686f642063616e206f6e6c792062652063616c6c6564206260008201527f792074686520747261696e696e67206a6f6220746f6b656e20636f6e7472616360208201527f7400000000000000000000000000000000000000000000000000000000000000604082015250565b60006144eb604183613a84565b91506144f682614469565b606082019050919050565b6000602082019050818103600083015261451a816144de565b9050919050565b7f596f75206d757374206368616e676520796f7572206e6f6465277320726f6c6560008201527f20746f20726571756573746f72206265666f72652063616c6c696e672074686960208201527f73206d6574686f64000000000000000000000000000000000000000000000000604082015250565b60006145a3604883613a84565b91506145ae82614521565b606082019050919050565b600060208201905081810360008301526145d281614596565b9050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830261463b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826145fe565b61464586836145fe565b95508019841693508086168417925050509392505050565b6000819050919050565b600061468261467d61467884613b1a565b61465d565b613b1a565b9050919050565b6000819050919050565b61469c83614667565b6146b06146a882614689565b84845461460b565b825550505050565b600090565b6146c56146b8565b6146d0818484614693565b505050565b5b818110156146f4576146e96000826146bd565b6001810190506146d6565b5050565b601f8211156147395761470a816145d9565b614713846145ee565b81016020851015614722578190505b61473661472e856145ee565b8301826146d5565b50505b505050565b600082821c905092915050565b600061475c6000198460080261473e565b1980831691505092915050565b6000614775838361474b565b9150826002028217905092915050565b61478e82613a79565b67ffffffffffffffff8111156147a7576147a66138a9565b5b6147b182546141d0565b6147bc8282856146f8565b600060209050601f8311600181146147ef57600084156147dd578287015190505b6147e78582614769565b86555061484f565b601f1984166147fd866145d9565b60005b8281101561482557848901518255600182019150602085019450602081019050614800565b86831015614842578489015161483e601f89168261474b565b8355505b6001600288020188555050505b505050505050565b7f596f75206d75737420776169742033302064617973206265666f72652062656960008201527f6e672061626c6520746f20756e7374616b65205363617474657220546f6b656e602082015250565b60006148b3604083613a84565b91506148be82614857565b604082019050919050565b600060208201905081810360008301526148e2816148a6565b9050919050565b7f416d6f756e74206d757374206265206c657373207468616e207374616b65642060008201527f616d6f756e740000000000000000000000000000000000000000000000000000602082015250565b6000614945602683613a84565b9150614950826148e9565b604082019050919050565b6000602082019050818103600083015261497481614938565b9050919050565b7f5374616b6520616d6f756e74206d75737420626520706f736974697665000000600082015250565b60006149b1601d83613a84565b91506149bc8261497b565b602082019050919050565b600060208201905081810360008301526149e0816149a4565b9050919050565b60006149f282613b1a565b91506149fd83613b1a565b9250828203905081811115614a1557614a14614047565b5b92915050565b7f546f206265636f6d652061206d6f64656c2076616c696461746f722c20796f7560008201527f206d7573742068617665203530302c303030205363617474657220546f6b656e60208201527f207374616b656400000000000000000000000000000000000000000000000000604082015250565b6000614a9d604783613a84565b9150614aa882614a1b565b606082019050919050565b60006020820190508181036000830152614acc81614a90565b9050919050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000614b2f602583613a84565b9150614b3a82614ad3565b604082019050919050565b60006020820190508181036000830152614b5e81614b22565b9050919050565b7f546f206265636f6d65206120636f736d6f732076616c696461746f722c20796f60008201527f75206d7573742068617665203130302c303030205363617474657220546f6b6560208201527f6e207374616b6564000000000000000000000000000000000000000000000000604082015250565b6000614be7604883613a84565b9150614bf282614b65565b606082019050919050565b60006020820190508181036000830152614c1681614bda565b9050919050565b60008154614c2a816141d0565b614c348186613ff4565b94506001821660008114614c4f5760018114614c6457614c97565b60ff1983168652811515820286019350614c97565b614c6d856145d9565b60005b83811015614c8f57815481890152600182019150602081019050614c70565b838801955050505b50505092915050565b6000614cac8285613fff565b9150614cb88284614c1d565b91508190509392505050565b7f45524332304361707065643a2063617020657863656564656400000000000000600082015250565b6000614cfa601983613a84565b9150614d0582614cc4565b602082019050919050565b60006020820190508181036000830152614d2981614ced565b9050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b6000614d66601f83613a84565b9150614d7182614d30565b602082019050919050565b60006020820190508181036000830152614d9581614d59565b9050919050565b6000614da782613b1a565b915060008203614dba57614db9614047565b5b600182039050919050565b7f537472696e67733a20686578206c656e67746820696e73756666696369656e74600082015250565b6000614dfb602083613a84565b9150614e0682614dc5565b602082019050919050565b60006020820190508181036000830152614e2a81614dee565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000614e8d602483613a84565b9150614e9882614e31565b604082019050919050565b60006020820190508181036000830152614ebc81614e80565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000614f1f602283613a84565b9150614f2a82614ec3565b604082019050919050565b60006020820190508181036000830152614f4e81614f12565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b6000614f8b601d83613a84565b9150614f9682614f55565b602082019050919050565b60006020820190508181036000830152614fba81614f7e565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b600061501d602583613a84565b915061502882614fc1565b604082019050919050565b6000602082019050818103600083015261504c81615010565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b60006150af602383613a84565b91506150ba82615053565b604082019050919050565b600060208201905081810360008301526150de816150a2565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b6000615141602683613a84565b915061514c826150e5565b604082019050919050565b6000602082019050818103600083015261517081615134565b9050919050565b7f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b60006151d3602183613a84565b91506151de82615177565b604082019050919050565b60006020820190508181036000830152615202816151c6565b9050919050565b7f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60008201527f6365000000000000000000000000000000000000000000000000000000000000602082015250565b6000615265602283613a84565b915061527082615209565b604082019050919050565b6000602082019050818103600083015261529481615258565b905091905056fea2646970667358221220b28bb05442668fec6e238e2c594790a6bb995426c21ed2467c0dc166877ced1564736f6c63430008110033",
}

// ScatterprotocolABI is the input ABI used to generate the binding from.
// Deprecated: Use ScatterprotocolMetaData.ABI instead.
var ScatterprotocolABI = ScatterprotocolMetaData.ABI

// ScatterprotocolBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use ScatterprotocolMetaData.Bin instead.
var ScatterprotocolBin = ScatterprotocolMetaData.Bin

// DeployScatterprotocol deploys a new Ethereum contract, binding an instance of Scatterprotocol to it.
func DeployScatterprotocol(auth *bind.TransactOpts, backend bind.ContractBackend, cap *big.Int, reward *big.Int, trainingTokenContract common.Address, evaluationTokenContract common.Address) (common.Address, *types.Transaction, *Scatterprotocol, error) {
	parsed, err := ScatterprotocolMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(ScatterprotocolBin), backend, cap, reward, trainingTokenContract, evaluationTokenContract)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &Scatterprotocol{ScatterprotocolCaller: ScatterprotocolCaller{contract: contract}, ScatterprotocolTransactor: ScatterprotocolTransactor{contract: contract}, ScatterprotocolFilterer: ScatterprotocolFilterer{contract: contract}}, nil
}

// Scatterprotocol is an auto generated Go binding around an Ethereum contract.
type Scatterprotocol struct {
	ScatterprotocolCaller     // Read-only binding to the contract
	ScatterprotocolTransactor // Write-only binding to the contract
	ScatterprotocolFilterer   // Log filterer for contract events
}

// ScatterprotocolCaller is an auto generated read-only Go binding around an Ethereum contract.
type ScatterprotocolCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ScatterprotocolTransactor is an auto generated write-only Go binding around an Ethereum contract.
type ScatterprotocolTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ScatterprotocolFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type ScatterprotocolFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ScatterprotocolSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type ScatterprotocolSession struct {
	Contract     *Scatterprotocol  // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// ScatterprotocolCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type ScatterprotocolCallerSession struct {
	Contract *ScatterprotocolCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts          // Call options to use throughout this session
}

// ScatterprotocolTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type ScatterprotocolTransactorSession struct {
	Contract     *ScatterprotocolTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts          // Transaction auth options to use throughout this session
}

// ScatterprotocolRaw is an auto generated low-level Go binding around an Ethereum contract.
type ScatterprotocolRaw struct {
	Contract *Scatterprotocol // Generic contract binding to access the raw methods on
}

// ScatterprotocolCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type ScatterprotocolCallerRaw struct {
	Contract *ScatterprotocolCaller // Generic read-only contract binding to access the raw methods on
}

// ScatterprotocolTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type ScatterprotocolTransactorRaw struct {
	Contract *ScatterprotocolTransactor // Generic write-only contract binding to access the raw methods on
}

// NewScatterprotocol creates a new instance of Scatterprotocol, bound to a specific deployed contract.
func NewScatterprotocol(address common.Address, backend bind.ContractBackend) (*Scatterprotocol, error) {
	contract, err := bindScatterprotocol(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &Scatterprotocol{ScatterprotocolCaller: ScatterprotocolCaller{contract: contract}, ScatterprotocolTransactor: ScatterprotocolTransactor{contract: contract}, ScatterprotocolFilterer: ScatterprotocolFilterer{contract: contract}}, nil
}

// NewScatterprotocolCaller creates a new read-only instance of Scatterprotocol, bound to a specific deployed contract.
func NewScatterprotocolCaller(address common.Address, caller bind.ContractCaller) (*ScatterprotocolCaller, error) {
	contract, err := bindScatterprotocol(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &ScatterprotocolCaller{contract: contract}, nil
}

// NewScatterprotocolTransactor creates a new write-only instance of Scatterprotocol, bound to a specific deployed contract.
func NewScatterprotocolTransactor(address common.Address, transactor bind.ContractTransactor) (*ScatterprotocolTransactor, error) {
	contract, err := bindScatterprotocol(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &ScatterprotocolTransactor{contract: contract}, nil
}

// NewScatterprotocolFilterer creates a new log filterer instance of Scatterprotocol, bound to a specific deployed contract.
func NewScatterprotocolFilterer(address common.Address, filterer bind.ContractFilterer) (*ScatterprotocolFilterer, error) {
	contract, err := bindScatterprotocol(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &ScatterprotocolFilterer{contract: contract}, nil
}

// bindScatterprotocol binds a generic wrapper to an already deployed contract.
func bindScatterprotocol(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(ScatterprotocolABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Scatterprotocol *ScatterprotocolRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Scatterprotocol.Contract.ScatterprotocolCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Scatterprotocol *ScatterprotocolRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.ScatterprotocolTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Scatterprotocol *ScatterprotocolRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.ScatterprotocolTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Scatterprotocol *ScatterprotocolCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Scatterprotocol.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Scatterprotocol *ScatterprotocolTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Scatterprotocol *ScatterprotocolTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.contract.Transact(opts, method, params...)
}

// AddressToNodeId is a free data retrieval call binding the contract method 0xef36d16a.
//
// Solidity: function addressToNodeId(address ) view returns(string)
func (_Scatterprotocol *ScatterprotocolCaller) AddressToNodeId(opts *bind.CallOpts, arg0 common.Address) (string, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "addressToNodeId", arg0)

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// AddressToNodeId is a free data retrieval call binding the contract method 0xef36d16a.
//
// Solidity: function addressToNodeId(address ) view returns(string)
func (_Scatterprotocol *ScatterprotocolSession) AddressToNodeId(arg0 common.Address) (string, error) {
	return _Scatterprotocol.Contract.AddressToNodeId(&_Scatterprotocol.CallOpts, arg0)
}

// AddressToNodeId is a free data retrieval call binding the contract method 0xef36d16a.
//
// Solidity: function addressToNodeId(address ) view returns(string)
func (_Scatterprotocol *ScatterprotocolCallerSession) AddressToNodeId(arg0 common.Address) (string, error) {
	return _Scatterprotocol.Contract.AddressToNodeId(&_Scatterprotocol.CallOpts, arg0)
}

// AddressToTopics is a free data retrieval call binding the contract method 0x624c45ea.
//
// Solidity: function addressToTopics(address , uint256 ) view returns(string)
func (_Scatterprotocol *ScatterprotocolCaller) AddressToTopics(opts *bind.CallOpts, arg0 common.Address, arg1 *big.Int) (string, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "addressToTopics", arg0, arg1)

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// AddressToTopics is a free data retrieval call binding the contract method 0x624c45ea.
//
// Solidity: function addressToTopics(address , uint256 ) view returns(string)
func (_Scatterprotocol *ScatterprotocolSession) AddressToTopics(arg0 common.Address, arg1 *big.Int) (string, error) {
	return _Scatterprotocol.Contract.AddressToTopics(&_Scatterprotocol.CallOpts, arg0, arg1)
}

// AddressToTopics is a free data retrieval call binding the contract method 0x624c45ea.
//
// Solidity: function addressToTopics(address , uint256 ) view returns(string)
func (_Scatterprotocol *ScatterprotocolCallerSession) AddressToTopics(arg0 common.Address, arg1 *big.Int) (string, error) {
	return _Scatterprotocol.Contract.AddressToTopics(&_Scatterprotocol.CallOpts, arg0, arg1)
}

// AddressToTrainingJobInfo is a free data retrieval call binding the contract method 0xc0d241ed.
//
// Solidity: function addressToTrainingJobInfo(address , string ) view returns(string trainingJobCid)
func (_Scatterprotocol *ScatterprotocolCaller) AddressToTrainingJobInfo(opts *bind.CallOpts, arg0 common.Address, arg1 string) (string, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "addressToTrainingJobInfo", arg0, arg1)

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// AddressToTrainingJobInfo is a free data retrieval call binding the contract method 0xc0d241ed.
//
// Solidity: function addressToTrainingJobInfo(address , string ) view returns(string trainingJobCid)
func (_Scatterprotocol *ScatterprotocolSession) AddressToTrainingJobInfo(arg0 common.Address, arg1 string) (string, error) {
	return _Scatterprotocol.Contract.AddressToTrainingJobInfo(&_Scatterprotocol.CallOpts, arg0, arg1)
}

// AddressToTrainingJobInfo is a free data retrieval call binding the contract method 0xc0d241ed.
//
// Solidity: function addressToTrainingJobInfo(address , string ) view returns(string trainingJobCid)
func (_Scatterprotocol *ScatterprotocolCallerSession) AddressToTrainingJobInfo(arg0 common.Address, arg1 string) (string, error) {
	return _Scatterprotocol.Contract.AddressToTrainingJobInfo(&_Scatterprotocol.CallOpts, arg0, arg1)
}

// Allowance is a free data retrieval call binding the contract method 0xdd62ed3e.
//
// Solidity: function allowance(address owner, address spender) view returns(uint256)
func (_Scatterprotocol *ScatterprotocolCaller) Allowance(opts *bind.CallOpts, owner common.Address, spender common.Address) (*big.Int, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "allowance", owner, spender)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// Allowance is a free data retrieval call binding the contract method 0xdd62ed3e.
//
// Solidity: function allowance(address owner, address spender) view returns(uint256)
func (_Scatterprotocol *ScatterprotocolSession) Allowance(owner common.Address, spender common.Address) (*big.Int, error) {
	return _Scatterprotocol.Contract.Allowance(&_Scatterprotocol.CallOpts, owner, spender)
}

// Allowance is a free data retrieval call binding the contract method 0xdd62ed3e.
//
// Solidity: function allowance(address owner, address spender) view returns(uint256)
func (_Scatterprotocol *ScatterprotocolCallerSession) Allowance(owner common.Address, spender common.Address) (*big.Int, error) {
	return _Scatterprotocol.Contract.Allowance(&_Scatterprotocol.CallOpts, owner, spender)
}

// BalanceOf is a free data retrieval call binding the contract method 0x70a08231.
//
// Solidity: function balanceOf(address account) view returns(uint256)
func (_Scatterprotocol *ScatterprotocolCaller) BalanceOf(opts *bind.CallOpts, account common.Address) (*big.Int, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "balanceOf", account)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// BalanceOf is a free data retrieval call binding the contract method 0x70a08231.
//
// Solidity: function balanceOf(address account) view returns(uint256)
func (_Scatterprotocol *ScatterprotocolSession) BalanceOf(account common.Address) (*big.Int, error) {
	return _Scatterprotocol.Contract.BalanceOf(&_Scatterprotocol.CallOpts, account)
}

// BalanceOf is a free data retrieval call binding the contract method 0x70a08231.
//
// Solidity: function balanceOf(address account) view returns(uint256)
func (_Scatterprotocol *ScatterprotocolCallerSession) BalanceOf(account common.Address) (*big.Int, error) {
	return _Scatterprotocol.Contract.BalanceOf(&_Scatterprotocol.CallOpts, account)
}

// BlockReward is a free data retrieval call binding the contract method 0x0ac168a1.
//
// Solidity: function blockReward() view returns(uint256)
func (_Scatterprotocol *ScatterprotocolCaller) BlockReward(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "blockReward")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// BlockReward is a free data retrieval call binding the contract method 0x0ac168a1.
//
// Solidity: function blockReward() view returns(uint256)
func (_Scatterprotocol *ScatterprotocolSession) BlockReward() (*big.Int, error) {
	return _Scatterprotocol.Contract.BlockReward(&_Scatterprotocol.CallOpts)
}

// BlockReward is a free data retrieval call binding the contract method 0x0ac168a1.
//
// Solidity: function blockReward() view returns(uint256)
func (_Scatterprotocol *ScatterprotocolCallerSession) BlockReward() (*big.Int, error) {
	return _Scatterprotocol.Contract.BlockReward(&_Scatterprotocol.CallOpts)
}

// Cap is a free data retrieval call binding the contract method 0x355274ea.
//
// Solidity: function cap() view returns(uint256)
func (_Scatterprotocol *ScatterprotocolCaller) Cap(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "cap")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// Cap is a free data retrieval call binding the contract method 0x355274ea.
//
// Solidity: function cap() view returns(uint256)
func (_Scatterprotocol *ScatterprotocolSession) Cap() (*big.Int, error) {
	return _Scatterprotocol.Contract.Cap(&_Scatterprotocol.CallOpts)
}

// Cap is a free data retrieval call binding the contract method 0x355274ea.
//
// Solidity: function cap() view returns(uint256)
func (_Scatterprotocol *ScatterprotocolCallerSession) Cap() (*big.Int, error) {
	return _Scatterprotocol.Contract.Cap(&_Scatterprotocol.CallOpts)
}

// CheckIfTopicExistsForRequestor is a free data retrieval call binding the contract method 0x35b40e60.
//
// Solidity: function checkIfTopicExistsForRequestor(address nodeAddress, string topicName) view returns(bool)
func (_Scatterprotocol *ScatterprotocolCaller) CheckIfTopicExistsForRequestor(opts *bind.CallOpts, nodeAddress common.Address, topicName string) (bool, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "checkIfTopicExistsForRequestor", nodeAddress, topicName)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// CheckIfTopicExistsForRequestor is a free data retrieval call binding the contract method 0x35b40e60.
//
// Solidity: function checkIfTopicExistsForRequestor(address nodeAddress, string topicName) view returns(bool)
func (_Scatterprotocol *ScatterprotocolSession) CheckIfTopicExistsForRequestor(nodeAddress common.Address, topicName string) (bool, error) {
	return _Scatterprotocol.Contract.CheckIfTopicExistsForRequestor(&_Scatterprotocol.CallOpts, nodeAddress, topicName)
}

// CheckIfTopicExistsForRequestor is a free data retrieval call binding the contract method 0x35b40e60.
//
// Solidity: function checkIfTopicExistsForRequestor(address nodeAddress, string topicName) view returns(bool)
func (_Scatterprotocol *ScatterprotocolCallerSession) CheckIfTopicExistsForRequestor(nodeAddress common.Address, topicName string) (bool, error) {
	return _Scatterprotocol.Contract.CheckIfTopicExistsForRequestor(&_Scatterprotocol.CallOpts, nodeAddress, topicName)
}

// Decimals is a free data retrieval call binding the contract method 0x313ce567.
//
// Solidity: function decimals() view returns(uint8)
func (_Scatterprotocol *ScatterprotocolCaller) Decimals(opts *bind.CallOpts) (uint8, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "decimals")

	if err != nil {
		return *new(uint8), err
	}

	out0 := *abi.ConvertType(out[0], new(uint8)).(*uint8)

	return out0, err

}

// Decimals is a free data retrieval call binding the contract method 0x313ce567.
//
// Solidity: function decimals() view returns(uint8)
func (_Scatterprotocol *ScatterprotocolSession) Decimals() (uint8, error) {
	return _Scatterprotocol.Contract.Decimals(&_Scatterprotocol.CallOpts)
}

// Decimals is a free data retrieval call binding the contract method 0x313ce567.
//
// Solidity: function decimals() view returns(uint8)
func (_Scatterprotocol *ScatterprotocolCallerSession) Decimals() (uint8, error) {
	return _Scatterprotocol.Contract.Decimals(&_Scatterprotocol.CallOpts)
}

// EvaluationJobContract is a free data retrieval call binding the contract method 0xcff06d39.
//
// Solidity: function evaluationJobContract() view returns(address)
func (_Scatterprotocol *ScatterprotocolCaller) EvaluationJobContract(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "evaluationJobContract")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// EvaluationJobContract is a free data retrieval call binding the contract method 0xcff06d39.
//
// Solidity: function evaluationJobContract() view returns(address)
func (_Scatterprotocol *ScatterprotocolSession) EvaluationJobContract() (common.Address, error) {
	return _Scatterprotocol.Contract.EvaluationJobContract(&_Scatterprotocol.CallOpts)
}

// EvaluationJobContract is a free data retrieval call binding the contract method 0xcff06d39.
//
// Solidity: function evaluationJobContract() view returns(address)
func (_Scatterprotocol *ScatterprotocolCallerSession) EvaluationJobContract() (common.Address, error) {
	return _Scatterprotocol.Contract.EvaluationJobContract(&_Scatterprotocol.CallOpts)
}

// GetAccountStake is a free data retrieval call binding the contract method 0x5e30913f.
//
// Solidity: function getAccountStake(address account) view returns(uint256)
func (_Scatterprotocol *ScatterprotocolCaller) GetAccountStake(opts *bind.CallOpts, account common.Address) (*big.Int, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "getAccountStake", account)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetAccountStake is a free data retrieval call binding the contract method 0x5e30913f.
//
// Solidity: function getAccountStake(address account) view returns(uint256)
func (_Scatterprotocol *ScatterprotocolSession) GetAccountStake(account common.Address) (*big.Int, error) {
	return _Scatterprotocol.Contract.GetAccountStake(&_Scatterprotocol.CallOpts, account)
}

// GetAccountStake is a free data retrieval call binding the contract method 0x5e30913f.
//
// Solidity: function getAccountStake(address account) view returns(uint256)
func (_Scatterprotocol *ScatterprotocolCallerSession) GetAccountStake(account common.Address) (*big.Int, error) {
	return _Scatterprotocol.Contract.GetAccountStake(&_Scatterprotocol.CallOpts, account)
}

// GetOwnStake is a free data retrieval call binding the contract method 0xfb7ba582.
//
// Solidity: function getOwnStake() view returns(uint256)
func (_Scatterprotocol *ScatterprotocolCaller) GetOwnStake(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "getOwnStake")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetOwnStake is a free data retrieval call binding the contract method 0xfb7ba582.
//
// Solidity: function getOwnStake() view returns(uint256)
func (_Scatterprotocol *ScatterprotocolSession) GetOwnStake() (*big.Int, error) {
	return _Scatterprotocol.Contract.GetOwnStake(&_Scatterprotocol.CallOpts)
}

// GetOwnStake is a free data retrieval call binding the contract method 0xfb7ba582.
//
// Solidity: function getOwnStake() view returns(uint256)
func (_Scatterprotocol *ScatterprotocolCallerSession) GetOwnStake() (*big.Int, error) {
	return _Scatterprotocol.Contract.GetOwnStake(&_Scatterprotocol.CallOpts)
}

// GetRequestorAddresses is a free data retrieval call binding the contract method 0xb4efe15f.
//
// Solidity: function getRequestorAddresses(int256 skip) view returns(string)
func (_Scatterprotocol *ScatterprotocolCaller) GetRequestorAddresses(opts *bind.CallOpts, skip *big.Int) (string, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "getRequestorAddresses", skip)

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// GetRequestorAddresses is a free data retrieval call binding the contract method 0xb4efe15f.
//
// Solidity: function getRequestorAddresses(int256 skip) view returns(string)
func (_Scatterprotocol *ScatterprotocolSession) GetRequestorAddresses(skip *big.Int) (string, error) {
	return _Scatterprotocol.Contract.GetRequestorAddresses(&_Scatterprotocol.CallOpts, skip)
}

// GetRequestorAddresses is a free data retrieval call binding the contract method 0xb4efe15f.
//
// Solidity: function getRequestorAddresses(int256 skip) view returns(string)
func (_Scatterprotocol *ScatterprotocolCallerSession) GetRequestorAddresses(skip *big.Int) (string, error) {
	return _Scatterprotocol.Contract.GetRequestorAddresses(&_Scatterprotocol.CallOpts, skip)
}

// GetRoleByAddress is a free data retrieval call binding the contract method 0x7bff77d4.
//
// Solidity: function getRoleByAddress(address addressToFind) view returns(string)
func (_Scatterprotocol *ScatterprotocolCaller) GetRoleByAddress(opts *bind.CallOpts, addressToFind common.Address) (string, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "getRoleByAddress", addressToFind)

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// GetRoleByAddress is a free data retrieval call binding the contract method 0x7bff77d4.
//
// Solidity: function getRoleByAddress(address addressToFind) view returns(string)
func (_Scatterprotocol *ScatterprotocolSession) GetRoleByAddress(addressToFind common.Address) (string, error) {
	return _Scatterprotocol.Contract.GetRoleByAddress(&_Scatterprotocol.CallOpts, addressToFind)
}

// GetRoleByAddress is a free data retrieval call binding the contract method 0x7bff77d4.
//
// Solidity: function getRoleByAddress(address addressToFind) view returns(string)
func (_Scatterprotocol *ScatterprotocolCallerSession) GetRoleByAddress(addressToFind common.Address) (string, error) {
	return _Scatterprotocol.Contract.GetRoleByAddress(&_Scatterprotocol.CallOpts, addressToFind)
}

// GetTopicsByRequestorAddress is a free data retrieval call binding the contract method 0xd8ecebed.
//
// Solidity: function getTopicsByRequestorAddress(address requestorAddress, int256 skip) view returns(string)
func (_Scatterprotocol *ScatterprotocolCaller) GetTopicsByRequestorAddress(opts *bind.CallOpts, requestorAddress common.Address, skip *big.Int) (string, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "getTopicsByRequestorAddress", requestorAddress, skip)

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// GetTopicsByRequestorAddress is a free data retrieval call binding the contract method 0xd8ecebed.
//
// Solidity: function getTopicsByRequestorAddress(address requestorAddress, int256 skip) view returns(string)
func (_Scatterprotocol *ScatterprotocolSession) GetTopicsByRequestorAddress(requestorAddress common.Address, skip *big.Int) (string, error) {
	return _Scatterprotocol.Contract.GetTopicsByRequestorAddress(&_Scatterprotocol.CallOpts, requestorAddress, skip)
}

// GetTopicsByRequestorAddress is a free data retrieval call binding the contract method 0xd8ecebed.
//
// Solidity: function getTopicsByRequestorAddress(address requestorAddress, int256 skip) view returns(string)
func (_Scatterprotocol *ScatterprotocolCallerSession) GetTopicsByRequestorAddress(requestorAddress common.Address, skip *big.Int) (string, error) {
	return _Scatterprotocol.Contract.GetTopicsByRequestorAddress(&_Scatterprotocol.CallOpts, requestorAddress, skip)
}

// GetTrainersByAddressAndTopic is a free data retrieval call binding the contract method 0x04aa1397.
//
// Solidity: function getTrainersByAddressAndTopic(address requestorAddress, string topicName, int256 skip) view returns(string)
func (_Scatterprotocol *ScatterprotocolCaller) GetTrainersByAddressAndTopic(opts *bind.CallOpts, requestorAddress common.Address, topicName string, skip *big.Int) (string, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "getTrainersByAddressAndTopic", requestorAddress, topicName, skip)

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// GetTrainersByAddressAndTopic is a free data retrieval call binding the contract method 0x04aa1397.
//
// Solidity: function getTrainersByAddressAndTopic(address requestorAddress, string topicName, int256 skip) view returns(string)
func (_Scatterprotocol *ScatterprotocolSession) GetTrainersByAddressAndTopic(requestorAddress common.Address, topicName string, skip *big.Int) (string, error) {
	return _Scatterprotocol.Contract.GetTrainersByAddressAndTopic(&_Scatterprotocol.CallOpts, requestorAddress, topicName, skip)
}

// GetTrainersByAddressAndTopic is a free data retrieval call binding the contract method 0x04aa1397.
//
// Solidity: function getTrainersByAddressAndTopic(address requestorAddress, string topicName, int256 skip) view returns(string)
func (_Scatterprotocol *ScatterprotocolCallerSession) GetTrainersByAddressAndTopic(requestorAddress common.Address, topicName string, skip *big.Int) (string, error) {
	return _Scatterprotocol.Contract.GetTrainersByAddressAndTopic(&_Scatterprotocol.CallOpts, requestorAddress, topicName, skip)
}

// Name is a free data retrieval call binding the contract method 0x06fdde03.
//
// Solidity: function name() view returns(string)
func (_Scatterprotocol *ScatterprotocolCaller) Name(opts *bind.CallOpts) (string, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "name")

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// Name is a free data retrieval call binding the contract method 0x06fdde03.
//
// Solidity: function name() view returns(string)
func (_Scatterprotocol *ScatterprotocolSession) Name() (string, error) {
	return _Scatterprotocol.Contract.Name(&_Scatterprotocol.CallOpts)
}

// Name is a free data retrieval call binding the contract method 0x06fdde03.
//
// Solidity: function name() view returns(string)
func (_Scatterprotocol *ScatterprotocolCallerSession) Name() (string, error) {
	return _Scatterprotocol.Contract.Name(&_Scatterprotocol.CallOpts)
}

// NetworkRequestors is a free data retrieval call binding the contract method 0xa765d052.
//
// Solidity: function networkRequestors(uint256 ) view returns(address)
func (_Scatterprotocol *ScatterprotocolCaller) NetworkRequestors(opts *bind.CallOpts, arg0 *big.Int) (common.Address, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "networkRequestors", arg0)

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// NetworkRequestors is a free data retrieval call binding the contract method 0xa765d052.
//
// Solidity: function networkRequestors(uint256 ) view returns(address)
func (_Scatterprotocol *ScatterprotocolSession) NetworkRequestors(arg0 *big.Int) (common.Address, error) {
	return _Scatterprotocol.Contract.NetworkRequestors(&_Scatterprotocol.CallOpts, arg0)
}

// NetworkRequestors is a free data retrieval call binding the contract method 0xa765d052.
//
// Solidity: function networkRequestors(uint256 ) view returns(address)
func (_Scatterprotocol *ScatterprotocolCallerSession) NetworkRequestors(arg0 *big.Int) (common.Address, error) {
	return _Scatterprotocol.Contract.NetworkRequestors(&_Scatterprotocol.CallOpts, arg0)
}

// NetworkTrainers is a free data retrieval call binding the contract method 0xaa711be6.
//
// Solidity: function networkTrainers(uint256 ) view returns(address)
func (_Scatterprotocol *ScatterprotocolCaller) NetworkTrainers(opts *bind.CallOpts, arg0 *big.Int) (common.Address, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "networkTrainers", arg0)

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// NetworkTrainers is a free data retrieval call binding the contract method 0xaa711be6.
//
// Solidity: function networkTrainers(uint256 ) view returns(address)
func (_Scatterprotocol *ScatterprotocolSession) NetworkTrainers(arg0 *big.Int) (common.Address, error) {
	return _Scatterprotocol.Contract.NetworkTrainers(&_Scatterprotocol.CallOpts, arg0)
}

// NetworkTrainers is a free data retrieval call binding the contract method 0xaa711be6.
//
// Solidity: function networkTrainers(uint256 ) view returns(address)
func (_Scatterprotocol *ScatterprotocolCallerSession) NetworkTrainers(arg0 *big.Int) (common.Address, error) {
	return _Scatterprotocol.Contract.NetworkTrainers(&_Scatterprotocol.CallOpts, arg0)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_Scatterprotocol *ScatterprotocolCaller) Owner(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "owner")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_Scatterprotocol *ScatterprotocolSession) Owner() (common.Address, error) {
	return _Scatterprotocol.Contract.Owner(&_Scatterprotocol.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_Scatterprotocol *ScatterprotocolCallerSession) Owner() (common.Address, error) {
	return _Scatterprotocol.Contract.Owner(&_Scatterprotocol.CallOpts)
}

// RequiredCosmosValidatorStake is a free data retrieval call binding the contract method 0x08b44b01.
//
// Solidity: function requiredCosmosValidatorStake() view returns(uint256)
func (_Scatterprotocol *ScatterprotocolCaller) RequiredCosmosValidatorStake(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "requiredCosmosValidatorStake")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// RequiredCosmosValidatorStake is a free data retrieval call binding the contract method 0x08b44b01.
//
// Solidity: function requiredCosmosValidatorStake() view returns(uint256)
func (_Scatterprotocol *ScatterprotocolSession) RequiredCosmosValidatorStake() (*big.Int, error) {
	return _Scatterprotocol.Contract.RequiredCosmosValidatorStake(&_Scatterprotocol.CallOpts)
}

// RequiredCosmosValidatorStake is a free data retrieval call binding the contract method 0x08b44b01.
//
// Solidity: function requiredCosmosValidatorStake() view returns(uint256)
func (_Scatterprotocol *ScatterprotocolCallerSession) RequiredCosmosValidatorStake() (*big.Int, error) {
	return _Scatterprotocol.Contract.RequiredCosmosValidatorStake(&_Scatterprotocol.CallOpts)
}

// RequiredModelValidatorStake is a free data retrieval call binding the contract method 0x36cb7f80.
//
// Solidity: function requiredModelValidatorStake() view returns(uint256)
func (_Scatterprotocol *ScatterprotocolCaller) RequiredModelValidatorStake(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "requiredModelValidatorStake")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// RequiredModelValidatorStake is a free data retrieval call binding the contract method 0x36cb7f80.
//
// Solidity: function requiredModelValidatorStake() view returns(uint256)
func (_Scatterprotocol *ScatterprotocolSession) RequiredModelValidatorStake() (*big.Int, error) {
	return _Scatterprotocol.Contract.RequiredModelValidatorStake(&_Scatterprotocol.CallOpts)
}

// RequiredModelValidatorStake is a free data retrieval call binding the contract method 0x36cb7f80.
//
// Solidity: function requiredModelValidatorStake() view returns(uint256)
func (_Scatterprotocol *ScatterprotocolCallerSession) RequiredModelValidatorStake() (*big.Int, error) {
	return _Scatterprotocol.Contract.RequiredModelValidatorStake(&_Scatterprotocol.CallOpts)
}

// Symbol is a free data retrieval call binding the contract method 0x95d89b41.
//
// Solidity: function symbol() view returns(string)
func (_Scatterprotocol *ScatterprotocolCaller) Symbol(opts *bind.CallOpts) (string, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "symbol")

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// Symbol is a free data retrieval call binding the contract method 0x95d89b41.
//
// Solidity: function symbol() view returns(string)
func (_Scatterprotocol *ScatterprotocolSession) Symbol() (string, error) {
	return _Scatterprotocol.Contract.Symbol(&_Scatterprotocol.CallOpts)
}

// Symbol is a free data retrieval call binding the contract method 0x95d89b41.
//
// Solidity: function symbol() view returns(string)
func (_Scatterprotocol *ScatterprotocolCallerSession) Symbol() (string, error) {
	return _Scatterprotocol.Contract.Symbol(&_Scatterprotocol.CallOpts)
}

// TotalSupply is a free data retrieval call binding the contract method 0x18160ddd.
//
// Solidity: function totalSupply() view returns(uint256)
func (_Scatterprotocol *ScatterprotocolCaller) TotalSupply(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "totalSupply")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// TotalSupply is a free data retrieval call binding the contract method 0x18160ddd.
//
// Solidity: function totalSupply() view returns(uint256)
func (_Scatterprotocol *ScatterprotocolSession) TotalSupply() (*big.Int, error) {
	return _Scatterprotocol.Contract.TotalSupply(&_Scatterprotocol.CallOpts)
}

// TotalSupply is a free data retrieval call binding the contract method 0x18160ddd.
//
// Solidity: function totalSupply() view returns(uint256)
func (_Scatterprotocol *ScatterprotocolCallerSession) TotalSupply() (*big.Int, error) {
	return _Scatterprotocol.Contract.TotalSupply(&_Scatterprotocol.CallOpts)
}

// TrainingJobContract is a free data retrieval call binding the contract method 0xb3f5b280.
//
// Solidity: function trainingJobContract() view returns(address)
func (_Scatterprotocol *ScatterprotocolCaller) TrainingJobContract(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "trainingJobContract")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// TrainingJobContract is a free data retrieval call binding the contract method 0xb3f5b280.
//
// Solidity: function trainingJobContract() view returns(address)
func (_Scatterprotocol *ScatterprotocolSession) TrainingJobContract() (common.Address, error) {
	return _Scatterprotocol.Contract.TrainingJobContract(&_Scatterprotocol.CallOpts)
}

// TrainingJobContract is a free data retrieval call binding the contract method 0xb3f5b280.
//
// Solidity: function trainingJobContract() view returns(address)
func (_Scatterprotocol *ScatterprotocolCallerSession) TrainingJobContract() (common.Address, error) {
	return _Scatterprotocol.Contract.TrainingJobContract(&_Scatterprotocol.CallOpts)
}

// AddStake is a paid mutator transaction binding the contract method 0xeb4f16b5.
//
// Solidity: function addStake(uint256 amount) returns()
func (_Scatterprotocol *ScatterprotocolTransactor) AddStake(opts *bind.TransactOpts, amount *big.Int) (*types.Transaction, error) {
	return _Scatterprotocol.contract.Transact(opts, "addStake", amount)
}

// AddStake is a paid mutator transaction binding the contract method 0xeb4f16b5.
//
// Solidity: function addStake(uint256 amount) returns()
func (_Scatterprotocol *ScatterprotocolSession) AddStake(amount *big.Int) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.AddStake(&_Scatterprotocol.TransactOpts, amount)
}

// AddStake is a paid mutator transaction binding the contract method 0xeb4f16b5.
//
// Solidity: function addStake(uint256 amount) returns()
func (_Scatterprotocol *ScatterprotocolTransactorSession) AddStake(amount *big.Int) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.AddStake(&_Scatterprotocol.TransactOpts, amount)
}

// AddTopicForRequestor is a paid mutator transaction binding the contract method 0x63b23aff.
//
// Solidity: function addTopicForRequestor(string topicName, string jobCid, address requestorAddress) returns()
func (_Scatterprotocol *ScatterprotocolTransactor) AddTopicForRequestor(opts *bind.TransactOpts, topicName string, jobCid string, requestorAddress common.Address) (*types.Transaction, error) {
	return _Scatterprotocol.contract.Transact(opts, "addTopicForRequestor", topicName, jobCid, requestorAddress)
}

// AddTopicForRequestor is a paid mutator transaction binding the contract method 0x63b23aff.
//
// Solidity: function addTopicForRequestor(string topicName, string jobCid, address requestorAddress) returns()
func (_Scatterprotocol *ScatterprotocolSession) AddTopicForRequestor(topicName string, jobCid string, requestorAddress common.Address) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.AddTopicForRequestor(&_Scatterprotocol.TransactOpts, topicName, jobCid, requestorAddress)
}

// AddTopicForRequestor is a paid mutator transaction binding the contract method 0x63b23aff.
//
// Solidity: function addTopicForRequestor(string topicName, string jobCid, address requestorAddress) returns()
func (_Scatterprotocol *ScatterprotocolTransactorSession) AddTopicForRequestor(topicName string, jobCid string, requestorAddress common.Address) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.AddTopicForRequestor(&_Scatterprotocol.TransactOpts, topicName, jobCid, requestorAddress)
}

// Approve is a paid mutator transaction binding the contract method 0x095ea7b3.
//
// Solidity: function approve(address spender, uint256 amount) returns(bool)
func (_Scatterprotocol *ScatterprotocolTransactor) Approve(opts *bind.TransactOpts, spender common.Address, amount *big.Int) (*types.Transaction, error) {
	return _Scatterprotocol.contract.Transact(opts, "approve", spender, amount)
}

// Approve is a paid mutator transaction binding the contract method 0x095ea7b3.
//
// Solidity: function approve(address spender, uint256 amount) returns(bool)
func (_Scatterprotocol *ScatterprotocolSession) Approve(spender common.Address, amount *big.Int) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.Approve(&_Scatterprotocol.TransactOpts, spender, amount)
}

// Approve is a paid mutator transaction binding the contract method 0x095ea7b3.
//
// Solidity: function approve(address spender, uint256 amount) returns(bool)
func (_Scatterprotocol *ScatterprotocolTransactorSession) Approve(spender common.Address, amount *big.Int) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.Approve(&_Scatterprotocol.TransactOpts, spender, amount)
}

// Burn is a paid mutator transaction binding the contract method 0x42966c68.
//
// Solidity: function burn(uint256 amount) returns()
func (_Scatterprotocol *ScatterprotocolTransactor) Burn(opts *bind.TransactOpts, amount *big.Int) (*types.Transaction, error) {
	return _Scatterprotocol.contract.Transact(opts, "burn", amount)
}

// Burn is a paid mutator transaction binding the contract method 0x42966c68.
//
// Solidity: function burn(uint256 amount) returns()
func (_Scatterprotocol *ScatterprotocolSession) Burn(amount *big.Int) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.Burn(&_Scatterprotocol.TransactOpts, amount)
}

// Burn is a paid mutator transaction binding the contract method 0x42966c68.
//
// Solidity: function burn(uint256 amount) returns()
func (_Scatterprotocol *ScatterprotocolTransactorSession) Burn(amount *big.Int) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.Burn(&_Scatterprotocol.TransactOpts, amount)
}

// BurnFrom is a paid mutator transaction binding the contract method 0x79cc6790.
//
// Solidity: function burnFrom(address account, uint256 amount) returns()
func (_Scatterprotocol *ScatterprotocolTransactor) BurnFrom(opts *bind.TransactOpts, account common.Address, amount *big.Int) (*types.Transaction, error) {
	return _Scatterprotocol.contract.Transact(opts, "burnFrom", account, amount)
}

// BurnFrom is a paid mutator transaction binding the contract method 0x79cc6790.
//
// Solidity: function burnFrom(address account, uint256 amount) returns()
func (_Scatterprotocol *ScatterprotocolSession) BurnFrom(account common.Address, amount *big.Int) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.BurnFrom(&_Scatterprotocol.TransactOpts, account, amount)
}

// BurnFrom is a paid mutator transaction binding the contract method 0x79cc6790.
//
// Solidity: function burnFrom(address account, uint256 amount) returns()
func (_Scatterprotocol *ScatterprotocolTransactorSession) BurnFrom(account common.Address, amount *big.Int) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.BurnFrom(&_Scatterprotocol.TransactOpts, account, amount)
}

// DecreaseAllowance is a paid mutator transaction binding the contract method 0xa457c2d7.
//
// Solidity: function decreaseAllowance(address spender, uint256 subtractedValue) returns(bool)
func (_Scatterprotocol *ScatterprotocolTransactor) DecreaseAllowance(opts *bind.TransactOpts, spender common.Address, subtractedValue *big.Int) (*types.Transaction, error) {
	return _Scatterprotocol.contract.Transact(opts, "decreaseAllowance", spender, subtractedValue)
}

// DecreaseAllowance is a paid mutator transaction binding the contract method 0xa457c2d7.
//
// Solidity: function decreaseAllowance(address spender, uint256 subtractedValue) returns(bool)
func (_Scatterprotocol *ScatterprotocolSession) DecreaseAllowance(spender common.Address, subtractedValue *big.Int) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.DecreaseAllowance(&_Scatterprotocol.TransactOpts, spender, subtractedValue)
}

// DecreaseAllowance is a paid mutator transaction binding the contract method 0xa457c2d7.
//
// Solidity: function decreaseAllowance(address spender, uint256 subtractedValue) returns(bool)
func (_Scatterprotocol *ScatterprotocolTransactorSession) DecreaseAllowance(spender common.Address, subtractedValue *big.Int) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.DecreaseAllowance(&_Scatterprotocol.TransactOpts, spender, subtractedValue)
}

// Destroy is a paid mutator transaction binding the contract method 0x83197ef0.
//
// Solidity: function destroy() returns()
func (_Scatterprotocol *ScatterprotocolTransactor) Destroy(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Scatterprotocol.contract.Transact(opts, "destroy")
}

// Destroy is a paid mutator transaction binding the contract method 0x83197ef0.
//
// Solidity: function destroy() returns()
func (_Scatterprotocol *ScatterprotocolSession) Destroy() (*types.Transaction, error) {
	return _Scatterprotocol.Contract.Destroy(&_Scatterprotocol.TransactOpts)
}

// Destroy is a paid mutator transaction binding the contract method 0x83197ef0.
//
// Solidity: function destroy() returns()
func (_Scatterprotocol *ScatterprotocolTransactorSession) Destroy() (*types.Transaction, error) {
	return _Scatterprotocol.Contract.Destroy(&_Scatterprotocol.TransactOpts)
}

// ElevateToCosmosValidator is a paid mutator transaction binding the contract method 0xbdb66855.
//
// Solidity: function elevateToCosmosValidator() returns()
func (_Scatterprotocol *ScatterprotocolTransactor) ElevateToCosmosValidator(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Scatterprotocol.contract.Transact(opts, "elevateToCosmosValidator")
}

// ElevateToCosmosValidator is a paid mutator transaction binding the contract method 0xbdb66855.
//
// Solidity: function elevateToCosmosValidator() returns()
func (_Scatterprotocol *ScatterprotocolSession) ElevateToCosmosValidator() (*types.Transaction, error) {
	return _Scatterprotocol.Contract.ElevateToCosmosValidator(&_Scatterprotocol.TransactOpts)
}

// ElevateToCosmosValidator is a paid mutator transaction binding the contract method 0xbdb66855.
//
// Solidity: function elevateToCosmosValidator() returns()
func (_Scatterprotocol *ScatterprotocolTransactorSession) ElevateToCosmosValidator() (*types.Transaction, error) {
	return _Scatterprotocol.Contract.ElevateToCosmosValidator(&_Scatterprotocol.TransactOpts)
}

// ElevateToModelValidator is a paid mutator transaction binding the contract method 0xa06e692b.
//
// Solidity: function elevateToModelValidator() returns()
func (_Scatterprotocol *ScatterprotocolTransactor) ElevateToModelValidator(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Scatterprotocol.contract.Transact(opts, "elevateToModelValidator")
}

// ElevateToModelValidator is a paid mutator transaction binding the contract method 0xa06e692b.
//
// Solidity: function elevateToModelValidator() returns()
func (_Scatterprotocol *ScatterprotocolSession) ElevateToModelValidator() (*types.Transaction, error) {
	return _Scatterprotocol.Contract.ElevateToModelValidator(&_Scatterprotocol.TransactOpts)
}

// ElevateToModelValidator is a paid mutator transaction binding the contract method 0xa06e692b.
//
// Solidity: function elevateToModelValidator() returns()
func (_Scatterprotocol *ScatterprotocolTransactorSession) ElevateToModelValidator() (*types.Transaction, error) {
	return _Scatterprotocol.Contract.ElevateToModelValidator(&_Scatterprotocol.TransactOpts)
}

// IncreaseAllowance is a paid mutator transaction binding the contract method 0x39509351.
//
// Solidity: function increaseAllowance(address spender, uint256 addedValue) returns(bool)
func (_Scatterprotocol *ScatterprotocolTransactor) IncreaseAllowance(opts *bind.TransactOpts, spender common.Address, addedValue *big.Int) (*types.Transaction, error) {
	return _Scatterprotocol.contract.Transact(opts, "increaseAllowance", spender, addedValue)
}

// IncreaseAllowance is a paid mutator transaction binding the contract method 0x39509351.
//
// Solidity: function increaseAllowance(address spender, uint256 addedValue) returns(bool)
func (_Scatterprotocol *ScatterprotocolSession) IncreaseAllowance(spender common.Address, addedValue *big.Int) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.IncreaseAllowance(&_Scatterprotocol.TransactOpts, spender, addedValue)
}

// IncreaseAllowance is a paid mutator transaction binding the contract method 0x39509351.
//
// Solidity: function increaseAllowance(address spender, uint256 addedValue) returns(bool)
func (_Scatterprotocol *ScatterprotocolTransactorSession) IncreaseAllowance(spender common.Address, addedValue *big.Int) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.IncreaseAllowance(&_Scatterprotocol.TransactOpts, spender, addedValue)
}

// InitCelestialNode is a paid mutator transaction binding the contract method 0x09079d0f.
//
// Solidity: function initCelestialNode() returns()
func (_Scatterprotocol *ScatterprotocolTransactor) InitCelestialNode(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Scatterprotocol.contract.Transact(opts, "initCelestialNode")
}

// InitCelestialNode is a paid mutator transaction binding the contract method 0x09079d0f.
//
// Solidity: function initCelestialNode() returns()
func (_Scatterprotocol *ScatterprotocolSession) InitCelestialNode() (*types.Transaction, error) {
	return _Scatterprotocol.Contract.InitCelestialNode(&_Scatterprotocol.TransactOpts)
}

// InitCelestialNode is a paid mutator transaction binding the contract method 0x09079d0f.
//
// Solidity: function initCelestialNode() returns()
func (_Scatterprotocol *ScatterprotocolTransactorSession) InitCelestialNode() (*types.Transaction, error) {
	return _Scatterprotocol.Contract.InitCelestialNode(&_Scatterprotocol.TransactOpts)
}

// InitRequestorNode is a paid mutator transaction binding the contract method 0xcb30bfc3.
//
// Solidity: function initRequestorNode() returns()
func (_Scatterprotocol *ScatterprotocolTransactor) InitRequestorNode(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Scatterprotocol.contract.Transact(opts, "initRequestorNode")
}

// InitRequestorNode is a paid mutator transaction binding the contract method 0xcb30bfc3.
//
// Solidity: function initRequestorNode() returns()
func (_Scatterprotocol *ScatterprotocolSession) InitRequestorNode() (*types.Transaction, error) {
	return _Scatterprotocol.Contract.InitRequestorNode(&_Scatterprotocol.TransactOpts)
}

// InitRequestorNode is a paid mutator transaction binding the contract method 0xcb30bfc3.
//
// Solidity: function initRequestorNode() returns()
func (_Scatterprotocol *ScatterprotocolTransactorSession) InitRequestorNode() (*types.Transaction, error) {
	return _Scatterprotocol.Contract.InitRequestorNode(&_Scatterprotocol.TransactOpts)
}

// InitTrainerNode is a paid mutator transaction binding the contract method 0x6949f907.
//
// Solidity: function initTrainerNode() returns()
func (_Scatterprotocol *ScatterprotocolTransactor) InitTrainerNode(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Scatterprotocol.contract.Transact(opts, "initTrainerNode")
}

// InitTrainerNode is a paid mutator transaction binding the contract method 0x6949f907.
//
// Solidity: function initTrainerNode() returns()
func (_Scatterprotocol *ScatterprotocolSession) InitTrainerNode() (*types.Transaction, error) {
	return _Scatterprotocol.Contract.InitTrainerNode(&_Scatterprotocol.TransactOpts)
}

// InitTrainerNode is a paid mutator transaction binding the contract method 0x6949f907.
//
// Solidity: function initTrainerNode() returns()
func (_Scatterprotocol *ScatterprotocolTransactorSession) InitTrainerNode() (*types.Transaction, error) {
	return _Scatterprotocol.Contract.InitTrainerNode(&_Scatterprotocol.TransactOpts)
}

// RemoveStake is a paid mutator transaction binding the contract method 0x939624ab.
//
// Solidity: function removeStake(uint256 amount) returns()
func (_Scatterprotocol *ScatterprotocolTransactor) RemoveStake(opts *bind.TransactOpts, amount *big.Int) (*types.Transaction, error) {
	return _Scatterprotocol.contract.Transact(opts, "removeStake", amount)
}

// RemoveStake is a paid mutator transaction binding the contract method 0x939624ab.
//
// Solidity: function removeStake(uint256 amount) returns()
func (_Scatterprotocol *ScatterprotocolSession) RemoveStake(amount *big.Int) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.RemoveStake(&_Scatterprotocol.TransactOpts, amount)
}

// RemoveStake is a paid mutator transaction binding the contract method 0x939624ab.
//
// Solidity: function removeStake(uint256 amount) returns()
func (_Scatterprotocol *ScatterprotocolTransactorSession) RemoveStake(amount *big.Int) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.RemoveStake(&_Scatterprotocol.TransactOpts, amount)
}

// RequestorAddTopic is a paid mutator transaction binding the contract method 0x513d5b1d.
//
// Solidity: function requestorAddTopic(string tokenURI, string topicName) returns()
func (_Scatterprotocol *ScatterprotocolTransactor) RequestorAddTopic(opts *bind.TransactOpts, tokenURI string, topicName string) (*types.Transaction, error) {
	return _Scatterprotocol.contract.Transact(opts, "requestorAddTopic", tokenURI, topicName)
}

// RequestorAddTopic is a paid mutator transaction binding the contract method 0x513d5b1d.
//
// Solidity: function requestorAddTopic(string tokenURI, string topicName) returns()
func (_Scatterprotocol *ScatterprotocolSession) RequestorAddTopic(tokenURI string, topicName string) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.RequestorAddTopic(&_Scatterprotocol.TransactOpts, tokenURI, topicName)
}

// RequestorAddTopic is a paid mutator transaction binding the contract method 0x513d5b1d.
//
// Solidity: function requestorAddTopic(string tokenURI, string topicName) returns()
func (_Scatterprotocol *ScatterprotocolTransactorSession) RequestorAddTopic(tokenURI string, topicName string) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.RequestorAddTopic(&_Scatterprotocol.TransactOpts, tokenURI, topicName)
}

// SetBlockReward is a paid mutator transaction binding the contract method 0x1a18e707.
//
// Solidity: function setBlockReward(uint256 reward) returns()
func (_Scatterprotocol *ScatterprotocolTransactor) SetBlockReward(opts *bind.TransactOpts, reward *big.Int) (*types.Transaction, error) {
	return _Scatterprotocol.contract.Transact(opts, "setBlockReward", reward)
}

// SetBlockReward is a paid mutator transaction binding the contract method 0x1a18e707.
//
// Solidity: function setBlockReward(uint256 reward) returns()
func (_Scatterprotocol *ScatterprotocolSession) SetBlockReward(reward *big.Int) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.SetBlockReward(&_Scatterprotocol.TransactOpts, reward)
}

// SetBlockReward is a paid mutator transaction binding the contract method 0x1a18e707.
//
// Solidity: function setBlockReward(uint256 reward) returns()
func (_Scatterprotocol *ScatterprotocolTransactorSession) SetBlockReward(reward *big.Int) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.SetBlockReward(&_Scatterprotocol.TransactOpts, reward)
}

// SetEvaluationJobContractAddress is a paid mutator transaction binding the contract method 0x039e09b1.
//
// Solidity: function setEvaluationJobContractAddress(address newAddress) returns()
func (_Scatterprotocol *ScatterprotocolTransactor) SetEvaluationJobContractAddress(opts *bind.TransactOpts, newAddress common.Address) (*types.Transaction, error) {
	return _Scatterprotocol.contract.Transact(opts, "setEvaluationJobContractAddress", newAddress)
}

// SetEvaluationJobContractAddress is a paid mutator transaction binding the contract method 0x039e09b1.
//
// Solidity: function setEvaluationJobContractAddress(address newAddress) returns()
func (_Scatterprotocol *ScatterprotocolSession) SetEvaluationJobContractAddress(newAddress common.Address) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.SetEvaluationJobContractAddress(&_Scatterprotocol.TransactOpts, newAddress)
}

// SetEvaluationJobContractAddress is a paid mutator transaction binding the contract method 0x039e09b1.
//
// Solidity: function setEvaluationJobContractAddress(address newAddress) returns()
func (_Scatterprotocol *ScatterprotocolTransactorSession) SetEvaluationJobContractAddress(newAddress common.Address) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.SetEvaluationJobContractAddress(&_Scatterprotocol.TransactOpts, newAddress)
}

// SetNodeId is a paid mutator transaction binding the contract method 0x7d9011ec.
//
// Solidity: function setNodeId(string nodeId) returns()
func (_Scatterprotocol *ScatterprotocolTransactor) SetNodeId(opts *bind.TransactOpts, nodeId string) (*types.Transaction, error) {
	return _Scatterprotocol.contract.Transact(opts, "setNodeId", nodeId)
}

// SetNodeId is a paid mutator transaction binding the contract method 0x7d9011ec.
//
// Solidity: function setNodeId(string nodeId) returns()
func (_Scatterprotocol *ScatterprotocolSession) SetNodeId(nodeId string) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.SetNodeId(&_Scatterprotocol.TransactOpts, nodeId)
}

// SetNodeId is a paid mutator transaction binding the contract method 0x7d9011ec.
//
// Solidity: function setNodeId(string nodeId) returns()
func (_Scatterprotocol *ScatterprotocolTransactorSession) SetNodeId(nodeId string) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.SetNodeId(&_Scatterprotocol.TransactOpts, nodeId)
}

// SetTrainingJobContractAddress is a paid mutator transaction binding the contract method 0x5aff6e77.
//
// Solidity: function setTrainingJobContractAddress(address newAddress) returns()
func (_Scatterprotocol *ScatterprotocolTransactor) SetTrainingJobContractAddress(opts *bind.TransactOpts, newAddress common.Address) (*types.Transaction, error) {
	return _Scatterprotocol.contract.Transact(opts, "setTrainingJobContractAddress", newAddress)
}

// SetTrainingJobContractAddress is a paid mutator transaction binding the contract method 0x5aff6e77.
//
// Solidity: function setTrainingJobContractAddress(address newAddress) returns()
func (_Scatterprotocol *ScatterprotocolSession) SetTrainingJobContractAddress(newAddress common.Address) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.SetTrainingJobContractAddress(&_Scatterprotocol.TransactOpts, newAddress)
}

// SetTrainingJobContractAddress is a paid mutator transaction binding the contract method 0x5aff6e77.
//
// Solidity: function setTrainingJobContractAddress(address newAddress) returns()
func (_Scatterprotocol *ScatterprotocolTransactorSession) SetTrainingJobContractAddress(newAddress common.Address) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.SetTrainingJobContractAddress(&_Scatterprotocol.TransactOpts, newAddress)
}

// TrainerAddTopic is a paid mutator transaction binding the contract method 0x6408602d.
//
// Solidity: function trainerAddTopic(address requestorAddress, string requestorTopic) returns()
func (_Scatterprotocol *ScatterprotocolTransactor) TrainerAddTopic(opts *bind.TransactOpts, requestorAddress common.Address, requestorTopic string) (*types.Transaction, error) {
	return _Scatterprotocol.contract.Transact(opts, "trainerAddTopic", requestorAddress, requestorTopic)
}

// TrainerAddTopic is a paid mutator transaction binding the contract method 0x6408602d.
//
// Solidity: function trainerAddTopic(address requestorAddress, string requestorTopic) returns()
func (_Scatterprotocol *ScatterprotocolSession) TrainerAddTopic(requestorAddress common.Address, requestorTopic string) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.TrainerAddTopic(&_Scatterprotocol.TransactOpts, requestorAddress, requestorTopic)
}

// TrainerAddTopic is a paid mutator transaction binding the contract method 0x6408602d.
//
// Solidity: function trainerAddTopic(address requestorAddress, string requestorTopic) returns()
func (_Scatterprotocol *ScatterprotocolTransactorSession) TrainerAddTopic(requestorAddress common.Address, requestorTopic string) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.TrainerAddTopic(&_Scatterprotocol.TransactOpts, requestorAddress, requestorTopic)
}

// Transfer is a paid mutator transaction binding the contract method 0xa9059cbb.
//
// Solidity: function transfer(address to, uint256 amount) returns(bool)
func (_Scatterprotocol *ScatterprotocolTransactor) Transfer(opts *bind.TransactOpts, to common.Address, amount *big.Int) (*types.Transaction, error) {
	return _Scatterprotocol.contract.Transact(opts, "transfer", to, amount)
}

// Transfer is a paid mutator transaction binding the contract method 0xa9059cbb.
//
// Solidity: function transfer(address to, uint256 amount) returns(bool)
func (_Scatterprotocol *ScatterprotocolSession) Transfer(to common.Address, amount *big.Int) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.Transfer(&_Scatterprotocol.TransactOpts, to, amount)
}

// Transfer is a paid mutator transaction binding the contract method 0xa9059cbb.
//
// Solidity: function transfer(address to, uint256 amount) returns(bool)
func (_Scatterprotocol *ScatterprotocolTransactorSession) Transfer(to common.Address, amount *big.Int) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.Transfer(&_Scatterprotocol.TransactOpts, to, amount)
}

// TransferFrom is a paid mutator transaction binding the contract method 0x23b872dd.
//
// Solidity: function transferFrom(address from, address to, uint256 amount) returns(bool)
func (_Scatterprotocol *ScatterprotocolTransactor) TransferFrom(opts *bind.TransactOpts, from common.Address, to common.Address, amount *big.Int) (*types.Transaction, error) {
	return _Scatterprotocol.contract.Transact(opts, "transferFrom", from, to, amount)
}

// TransferFrom is a paid mutator transaction binding the contract method 0x23b872dd.
//
// Solidity: function transferFrom(address from, address to, uint256 amount) returns(bool)
func (_Scatterprotocol *ScatterprotocolSession) TransferFrom(from common.Address, to common.Address, amount *big.Int) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.TransferFrom(&_Scatterprotocol.TransactOpts, from, to, amount)
}

// TransferFrom is a paid mutator transaction binding the contract method 0x23b872dd.
//
// Solidity: function transferFrom(address from, address to, uint256 amount) returns(bool)
func (_Scatterprotocol *ScatterprotocolTransactorSession) TransferFrom(from common.Address, to common.Address, amount *big.Int) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.TransferFrom(&_Scatterprotocol.TransactOpts, from, to, amount)
}

// ScatterprotocolApprovalIterator is returned from FilterApproval and is used to iterate over the raw logs and unpacked data for Approval events raised by the Scatterprotocol contract.
type ScatterprotocolApprovalIterator struct {
	Event *ScatterprotocolApproval // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ScatterprotocolApprovalIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ScatterprotocolApproval)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ScatterprotocolApproval)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ScatterprotocolApprovalIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ScatterprotocolApprovalIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ScatterprotocolApproval represents a Approval event raised by the Scatterprotocol contract.
type ScatterprotocolApproval struct {
	Owner   common.Address
	Spender common.Address
	Value   *big.Int
	Raw     types.Log // Blockchain specific contextual infos
}

// FilterApproval is a free log retrieval operation binding the contract event 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925.
//
// Solidity: event Approval(address indexed owner, address indexed spender, uint256 value)
func (_Scatterprotocol *ScatterprotocolFilterer) FilterApproval(opts *bind.FilterOpts, owner []common.Address, spender []common.Address) (*ScatterprotocolApprovalIterator, error) {

	var ownerRule []interface{}
	for _, ownerItem := range owner {
		ownerRule = append(ownerRule, ownerItem)
	}
	var spenderRule []interface{}
	for _, spenderItem := range spender {
		spenderRule = append(spenderRule, spenderItem)
	}

	logs, sub, err := _Scatterprotocol.contract.FilterLogs(opts, "Approval", ownerRule, spenderRule)
	if err != nil {
		return nil, err
	}
	return &ScatterprotocolApprovalIterator{contract: _Scatterprotocol.contract, event: "Approval", logs: logs, sub: sub}, nil
}

// WatchApproval is a free log subscription operation binding the contract event 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925.
//
// Solidity: event Approval(address indexed owner, address indexed spender, uint256 value)
func (_Scatterprotocol *ScatterprotocolFilterer) WatchApproval(opts *bind.WatchOpts, sink chan<- *ScatterprotocolApproval, owner []common.Address, spender []common.Address) (event.Subscription, error) {

	var ownerRule []interface{}
	for _, ownerItem := range owner {
		ownerRule = append(ownerRule, ownerItem)
	}
	var spenderRule []interface{}
	for _, spenderItem := range spender {
		spenderRule = append(spenderRule, spenderItem)
	}

	logs, sub, err := _Scatterprotocol.contract.WatchLogs(opts, "Approval", ownerRule, spenderRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ScatterprotocolApproval)
				if err := _Scatterprotocol.contract.UnpackLog(event, "Approval", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseApproval is a log parse operation binding the contract event 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925.
//
// Solidity: event Approval(address indexed owner, address indexed spender, uint256 value)
func (_Scatterprotocol *ScatterprotocolFilterer) ParseApproval(log types.Log) (*ScatterprotocolApproval, error) {
	event := new(ScatterprotocolApproval)
	if err := _Scatterprotocol.contract.UnpackLog(event, "Approval", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ScatterprotocolTransferIterator is returned from FilterTransfer and is used to iterate over the raw logs and unpacked data for Transfer events raised by the Scatterprotocol contract.
type ScatterprotocolTransferIterator struct {
	Event *ScatterprotocolTransfer // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ScatterprotocolTransferIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ScatterprotocolTransfer)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ScatterprotocolTransfer)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ScatterprotocolTransferIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ScatterprotocolTransferIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ScatterprotocolTransfer represents a Transfer event raised by the Scatterprotocol contract.
type ScatterprotocolTransfer struct {
	From  common.Address
	To    common.Address
	Value *big.Int
	Raw   types.Log // Blockchain specific contextual infos
}

// FilterTransfer is a free log retrieval operation binding the contract event 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef.
//
// Solidity: event Transfer(address indexed from, address indexed to, uint256 value)
func (_Scatterprotocol *ScatterprotocolFilterer) FilterTransfer(opts *bind.FilterOpts, from []common.Address, to []common.Address) (*ScatterprotocolTransferIterator, error) {

	var fromRule []interface{}
	for _, fromItem := range from {
		fromRule = append(fromRule, fromItem)
	}
	var toRule []interface{}
	for _, toItem := range to {
		toRule = append(toRule, toItem)
	}

	logs, sub, err := _Scatterprotocol.contract.FilterLogs(opts, "Transfer", fromRule, toRule)
	if err != nil {
		return nil, err
	}
	return &ScatterprotocolTransferIterator{contract: _Scatterprotocol.contract, event: "Transfer", logs: logs, sub: sub}, nil
}

// WatchTransfer is a free log subscription operation binding the contract event 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef.
//
// Solidity: event Transfer(address indexed from, address indexed to, uint256 value)
func (_Scatterprotocol *ScatterprotocolFilterer) WatchTransfer(opts *bind.WatchOpts, sink chan<- *ScatterprotocolTransfer, from []common.Address, to []common.Address) (event.Subscription, error) {

	var fromRule []interface{}
	for _, fromItem := range from {
		fromRule = append(fromRule, fromItem)
	}
	var toRule []interface{}
	for _, toItem := range to {
		toRule = append(toRule, toItem)
	}

	logs, sub, err := _Scatterprotocol.contract.WatchLogs(opts, "Transfer", fromRule, toRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ScatterprotocolTransfer)
				if err := _Scatterprotocol.contract.UnpackLog(event, "Transfer", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseTransfer is a log parse operation binding the contract event 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef.
//
// Solidity: event Transfer(address indexed from, address indexed to, uint256 value)
func (_Scatterprotocol *ScatterprotocolFilterer) ParseTransfer(log types.Log) (*ScatterprotocolTransfer, error) {
	event := new(ScatterprotocolTransfer)
	if err := _Scatterprotocol.contract.UnpackLog(event, "Transfer", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}
