// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package scatterprotocol

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// ScatterprotocolMetaData contains all meta data concerning the Scatterprotocol contract.
var ScatterprotocolMetaData = &bind.MetaData{
	ABI: "[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"cap\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"trainingTokenContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"evaluationTokenContract\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"requestor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"topicName\",\"type\":\"string\"}],\"name\":\"TrainingInitialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"addStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"topicName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"jobCid\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"requestorAddress\",\"type\":\"address\"}],\"name\":\"addTopicForRequestor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToNodeId\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"addressToTopics\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"addressToTrainingJobInfo\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"trainingJobCid\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"blockReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nodeAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"topicName\",\"type\":\"string\"}],\"name\":\"checkIfTopicExistsForRequestor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"destroy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"elevateToCosmosValidator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"elevateToModelValidator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"evaluationJobContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getAccountStake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwnStake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"skip\",\"type\":\"int256\"}],\"name\":\"getRequestorAddresses\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addressToFind\",\"type\":\"address\"}],\"name\":\"getRoleByAddress\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"requestorAddress\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"skip\",\"type\":\"int256\"}],\"name\":\"getTopicsByRequestorAddress\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"requestorAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"topicName\",\"type\":\"string\"},{\"internalType\":\"int256\",\"name\":\"skip\",\"type\":\"int256\"}],\"name\":\"getTrainersByAddressAndTopic\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initCelestialNode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initRequestorNode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initTrainerNode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"networkRequestors\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"networkTrainers\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"addresspayable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"removeStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"tokenURI\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"topicName\",\"type\":\"string\"}],\"name\":\"requestorAddTopic\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"requiredCosmosValidatorStake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"requiredModelValidatorStake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"setBlockReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"setEvaluationJobContractAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"nodeId\",\"type\":\"string\"}],\"name\":\"setNodeId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"setTrainingJobContractAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"topicName\",\"type\":\"string\"}],\"name\":\"startTraining\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"requestorAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"requestorTopic\",\"type\":\"string\"}],\"name\":\"trainerAddTopic\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"trainingJobContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]",
	Bin: "",
}

// ScatterprotocolABI is the input ABI used to generate the binding from.
// Deprecated: Use ScatterprotocolMetaData.ABI instead.
var ScatterprotocolABI = ScatterprotocolMetaData.ABI

// ScatterprotocolBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use ScatterprotocolMetaData.Bin instead.
var ScatterprotocolBin = ScatterprotocolMetaData.Bin

// DeployScatterprotocol deploys a new Ethereum contract, binding an instance of Scatterprotocol to it.
func DeployScatterprotocol(auth *bind.TransactOpts, backend bind.ContractBackend, cap *big.Int, reward *big.Int, trainingTokenContract common.Address, evaluationTokenContract common.Address) (common.Address, *types.Transaction, *Scatterprotocol, error) {
	parsed, err := ScatterprotocolMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(ScatterprotocolBin), backend, cap, reward, trainingTokenContract, evaluationTokenContract)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &Scatterprotocol{ScatterprotocolCaller: ScatterprotocolCaller{contract: contract}, ScatterprotocolTransactor: ScatterprotocolTransactor{contract: contract}, ScatterprotocolFilterer: ScatterprotocolFilterer{contract: contract}}, nil
}

// Scatterprotocol is an auto generated Go binding around an Ethereum contract.
type Scatterprotocol struct {
	ScatterprotocolCaller     // Read-only binding to the contract
	ScatterprotocolTransactor // Write-only binding to the contract
	ScatterprotocolFilterer   // Log filterer for contract events
}

// ScatterprotocolCaller is an auto generated read-only Go binding around an Ethereum contract.
type ScatterprotocolCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ScatterprotocolTransactor is an auto generated write-only Go binding around an Ethereum contract.
type ScatterprotocolTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ScatterprotocolFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type ScatterprotocolFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ScatterprotocolSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type ScatterprotocolSession struct {
	Contract     *Scatterprotocol  // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// ScatterprotocolCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type ScatterprotocolCallerSession struct {
	Contract *ScatterprotocolCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts          // Call options to use throughout this session
}

// ScatterprotocolTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type ScatterprotocolTransactorSession struct {
	Contract     *ScatterprotocolTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts          // Transaction auth options to use throughout this session
}

// ScatterprotocolRaw is an auto generated low-level Go binding around an Ethereum contract.
type ScatterprotocolRaw struct {
	Contract *Scatterprotocol // Generic contract binding to access the raw methods on
}

// ScatterprotocolCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type ScatterprotocolCallerRaw struct {
	Contract *ScatterprotocolCaller // Generic read-only contract binding to access the raw methods on
}

// ScatterprotocolTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type ScatterprotocolTransactorRaw struct {
	Contract *ScatterprotocolTransactor // Generic write-only contract binding to access the raw methods on
}

// NewScatterprotocol creates a new instance of Scatterprotocol, bound to a specific deployed contract.
func NewScatterprotocol(address common.Address, backend bind.ContractBackend) (*Scatterprotocol, error) {
	contract, err := bindScatterprotocol(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &Scatterprotocol{ScatterprotocolCaller: ScatterprotocolCaller{contract: contract}, ScatterprotocolTransactor: ScatterprotocolTransactor{contract: contract}, ScatterprotocolFilterer: ScatterprotocolFilterer{contract: contract}}, nil
}

// NewScatterprotocolCaller creates a new read-only instance of Scatterprotocol, bound to a specific deployed contract.
func NewScatterprotocolCaller(address common.Address, caller bind.ContractCaller) (*ScatterprotocolCaller, error) {
	contract, err := bindScatterprotocol(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &ScatterprotocolCaller{contract: contract}, nil
}

// NewScatterprotocolTransactor creates a new write-only instance of Scatterprotocol, bound to a specific deployed contract.
func NewScatterprotocolTransactor(address common.Address, transactor bind.ContractTransactor) (*ScatterprotocolTransactor, error) {
	contract, err := bindScatterprotocol(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &ScatterprotocolTransactor{contract: contract}, nil
}

// NewScatterprotocolFilterer creates a new log filterer instance of Scatterprotocol, bound to a specific deployed contract.
func NewScatterprotocolFilterer(address common.Address, filterer bind.ContractFilterer) (*ScatterprotocolFilterer, error) {
	contract, err := bindScatterprotocol(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &ScatterprotocolFilterer{contract: contract}, nil
}

// bindScatterprotocol binds a generic wrapper to an already deployed contract.
func bindScatterprotocol(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(ScatterprotocolABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Scatterprotocol *ScatterprotocolRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Scatterprotocol.Contract.ScatterprotocolCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Scatterprotocol *ScatterprotocolRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.ScatterprotocolTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Scatterprotocol *ScatterprotocolRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.ScatterprotocolTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Scatterprotocol *ScatterprotocolCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Scatterprotocol.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Scatterprotocol *ScatterprotocolTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Scatterprotocol *ScatterprotocolTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.contract.Transact(opts, method, params...)
}

// AddressToNodeId is a free data retrieval call binding the contract method 0xef36d16a.
//
// Solidity: function addressToNodeId(address ) view returns(string)
func (_Scatterprotocol *ScatterprotocolCaller) AddressToNodeId(opts *bind.CallOpts, arg0 common.Address) (string, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "addressToNodeId", arg0)

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// AddressToNodeId is a free data retrieval call binding the contract method 0xef36d16a.
//
// Solidity: function addressToNodeId(address ) view returns(string)
func (_Scatterprotocol *ScatterprotocolSession) AddressToNodeId(arg0 common.Address) (string, error) {
	return _Scatterprotocol.Contract.AddressToNodeId(&_Scatterprotocol.CallOpts, arg0)
}

// AddressToNodeId is a free data retrieval call binding the contract method 0xef36d16a.
//
// Solidity: function addressToNodeId(address ) view returns(string)
func (_Scatterprotocol *ScatterprotocolCallerSession) AddressToNodeId(arg0 common.Address) (string, error) {
	return _Scatterprotocol.Contract.AddressToNodeId(&_Scatterprotocol.CallOpts, arg0)
}

// AddressToTopics is a free data retrieval call binding the contract method 0x624c45ea.
//
// Solidity: function addressToTopics(address , uint256 ) view returns(string)
func (_Scatterprotocol *ScatterprotocolCaller) AddressToTopics(opts *bind.CallOpts, arg0 common.Address, arg1 *big.Int) (string, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "addressToTopics", arg0, arg1)

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// AddressToTopics is a free data retrieval call binding the contract method 0x624c45ea.
//
// Solidity: function addressToTopics(address , uint256 ) view returns(string)
func (_Scatterprotocol *ScatterprotocolSession) AddressToTopics(arg0 common.Address, arg1 *big.Int) (string, error) {
	return _Scatterprotocol.Contract.AddressToTopics(&_Scatterprotocol.CallOpts, arg0, arg1)
}

// AddressToTopics is a free data retrieval call binding the contract method 0x624c45ea.
//
// Solidity: function addressToTopics(address , uint256 ) view returns(string)
func (_Scatterprotocol *ScatterprotocolCallerSession) AddressToTopics(arg0 common.Address, arg1 *big.Int) (string, error) {
	return _Scatterprotocol.Contract.AddressToTopics(&_Scatterprotocol.CallOpts, arg0, arg1)
}

// AddressToTrainingJobInfo is a free data retrieval call binding the contract method 0xc0d241ed.
//
// Solidity: function addressToTrainingJobInfo(address , string ) view returns(string trainingJobCid)
func (_Scatterprotocol *ScatterprotocolCaller) AddressToTrainingJobInfo(opts *bind.CallOpts, arg0 common.Address, arg1 string) (string, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "addressToTrainingJobInfo", arg0, arg1)

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// AddressToTrainingJobInfo is a free data retrieval call binding the contract method 0xc0d241ed.
//
// Solidity: function addressToTrainingJobInfo(address , string ) view returns(string trainingJobCid)
func (_Scatterprotocol *ScatterprotocolSession) AddressToTrainingJobInfo(arg0 common.Address, arg1 string) (string, error) {
	return _Scatterprotocol.Contract.AddressToTrainingJobInfo(&_Scatterprotocol.CallOpts, arg0, arg1)
}

// AddressToTrainingJobInfo is a free data retrieval call binding the contract method 0xc0d241ed.
//
// Solidity: function addressToTrainingJobInfo(address , string ) view returns(string trainingJobCid)
func (_Scatterprotocol *ScatterprotocolCallerSession) AddressToTrainingJobInfo(arg0 common.Address, arg1 string) (string, error) {
	return _Scatterprotocol.Contract.AddressToTrainingJobInfo(&_Scatterprotocol.CallOpts, arg0, arg1)
}

// Allowance is a free data retrieval call binding the contract method 0xdd62ed3e.
//
// Solidity: function allowance(address owner, address spender) view returns(uint256)
func (_Scatterprotocol *ScatterprotocolCaller) Allowance(opts *bind.CallOpts, owner common.Address, spender common.Address) (*big.Int, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "allowance", owner, spender)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// Allowance is a free data retrieval call binding the contract method 0xdd62ed3e.
//
// Solidity: function allowance(address owner, address spender) view returns(uint256)
func (_Scatterprotocol *ScatterprotocolSession) Allowance(owner common.Address, spender common.Address) (*big.Int, error) {
	return _Scatterprotocol.Contract.Allowance(&_Scatterprotocol.CallOpts, owner, spender)
}

// Allowance is a free data retrieval call binding the contract method 0xdd62ed3e.
//
// Solidity: function allowance(address owner, address spender) view returns(uint256)
func (_Scatterprotocol *ScatterprotocolCallerSession) Allowance(owner common.Address, spender common.Address) (*big.Int, error) {
	return _Scatterprotocol.Contract.Allowance(&_Scatterprotocol.CallOpts, owner, spender)
}

// BalanceOf is a free data retrieval call binding the contract method 0x70a08231.
//
// Solidity: function balanceOf(address account) view returns(uint256)
func (_Scatterprotocol *ScatterprotocolCaller) BalanceOf(opts *bind.CallOpts, account common.Address) (*big.Int, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "balanceOf", account)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// BalanceOf is a free data retrieval call binding the contract method 0x70a08231.
//
// Solidity: function balanceOf(address account) view returns(uint256)
func (_Scatterprotocol *ScatterprotocolSession) BalanceOf(account common.Address) (*big.Int, error) {
	return _Scatterprotocol.Contract.BalanceOf(&_Scatterprotocol.CallOpts, account)
}

// BalanceOf is a free data retrieval call binding the contract method 0x70a08231.
//
// Solidity: function balanceOf(address account) view returns(uint256)
func (_Scatterprotocol *ScatterprotocolCallerSession) BalanceOf(account common.Address) (*big.Int, error) {
	return _Scatterprotocol.Contract.BalanceOf(&_Scatterprotocol.CallOpts, account)
}

// BlockReward is a free data retrieval call binding the contract method 0x0ac168a1.
//
// Solidity: function blockReward() view returns(uint256)
func (_Scatterprotocol *ScatterprotocolCaller) BlockReward(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "blockReward")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// BlockReward is a free data retrieval call binding the contract method 0x0ac168a1.
//
// Solidity: function blockReward() view returns(uint256)
func (_Scatterprotocol *ScatterprotocolSession) BlockReward() (*big.Int, error) {
	return _Scatterprotocol.Contract.BlockReward(&_Scatterprotocol.CallOpts)
}

// BlockReward is a free data retrieval call binding the contract method 0x0ac168a1.
//
// Solidity: function blockReward() view returns(uint256)
func (_Scatterprotocol *ScatterprotocolCallerSession) BlockReward() (*big.Int, error) {
	return _Scatterprotocol.Contract.BlockReward(&_Scatterprotocol.CallOpts)
}

// Cap is a free data retrieval call binding the contract method 0x355274ea.
//
// Solidity: function cap() view returns(uint256)
func (_Scatterprotocol *ScatterprotocolCaller) Cap(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "cap")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// Cap is a free data retrieval call binding the contract method 0x355274ea.
//
// Solidity: function cap() view returns(uint256)
func (_Scatterprotocol *ScatterprotocolSession) Cap() (*big.Int, error) {
	return _Scatterprotocol.Contract.Cap(&_Scatterprotocol.CallOpts)
}

// Cap is a free data retrieval call binding the contract method 0x355274ea.
//
// Solidity: function cap() view returns(uint256)
func (_Scatterprotocol *ScatterprotocolCallerSession) Cap() (*big.Int, error) {
	return _Scatterprotocol.Contract.Cap(&_Scatterprotocol.CallOpts)
}

// CheckIfTopicExistsForRequestor is a free data retrieval call binding the contract method 0x35b40e60.
//
// Solidity: function checkIfTopicExistsForRequestor(address nodeAddress, string topicName) view returns(bool)
func (_Scatterprotocol *ScatterprotocolCaller) CheckIfTopicExistsForRequestor(opts *bind.CallOpts, nodeAddress common.Address, topicName string) (bool, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "checkIfTopicExistsForRequestor", nodeAddress, topicName)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// CheckIfTopicExistsForRequestor is a free data retrieval call binding the contract method 0x35b40e60.
//
// Solidity: function checkIfTopicExistsForRequestor(address nodeAddress, string topicName) view returns(bool)
func (_Scatterprotocol *ScatterprotocolSession) CheckIfTopicExistsForRequestor(nodeAddress common.Address, topicName string) (bool, error) {
	return _Scatterprotocol.Contract.CheckIfTopicExistsForRequestor(&_Scatterprotocol.CallOpts, nodeAddress, topicName)
}

// CheckIfTopicExistsForRequestor is a free data retrieval call binding the contract method 0x35b40e60.
//
// Solidity: function checkIfTopicExistsForRequestor(address nodeAddress, string topicName) view returns(bool)
func (_Scatterprotocol *ScatterprotocolCallerSession) CheckIfTopicExistsForRequestor(nodeAddress common.Address, topicName string) (bool, error) {
	return _Scatterprotocol.Contract.CheckIfTopicExistsForRequestor(&_Scatterprotocol.CallOpts, nodeAddress, topicName)
}

// Decimals is a free data retrieval call binding the contract method 0x313ce567.
//
// Solidity: function decimals() view returns(uint8)
func (_Scatterprotocol *ScatterprotocolCaller) Decimals(opts *bind.CallOpts) (uint8, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "decimals")

	if err != nil {
		return *new(uint8), err
	}

	out0 := *abi.ConvertType(out[0], new(uint8)).(*uint8)

	return out0, err

}

// Decimals is a free data retrieval call binding the contract method 0x313ce567.
//
// Solidity: function decimals() view returns(uint8)
func (_Scatterprotocol *ScatterprotocolSession) Decimals() (uint8, error) {
	return _Scatterprotocol.Contract.Decimals(&_Scatterprotocol.CallOpts)
}

// Decimals is a free data retrieval call binding the contract method 0x313ce567.
//
// Solidity: function decimals() view returns(uint8)
func (_Scatterprotocol *ScatterprotocolCallerSession) Decimals() (uint8, error) {
	return _Scatterprotocol.Contract.Decimals(&_Scatterprotocol.CallOpts)
}

// EvaluationJobContract is a free data retrieval call binding the contract method 0xcff06d39.
//
// Solidity: function evaluationJobContract() view returns(address)
func (_Scatterprotocol *ScatterprotocolCaller) EvaluationJobContract(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "evaluationJobContract")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// EvaluationJobContract is a free data retrieval call binding the contract method 0xcff06d39.
//
// Solidity: function evaluationJobContract() view returns(address)
func (_Scatterprotocol *ScatterprotocolSession) EvaluationJobContract() (common.Address, error) {
	return _Scatterprotocol.Contract.EvaluationJobContract(&_Scatterprotocol.CallOpts)
}

// EvaluationJobContract is a free data retrieval call binding the contract method 0xcff06d39.
//
// Solidity: function evaluationJobContract() view returns(address)
func (_Scatterprotocol *ScatterprotocolCallerSession) EvaluationJobContract() (common.Address, error) {
	return _Scatterprotocol.Contract.EvaluationJobContract(&_Scatterprotocol.CallOpts)
}

// GetAccountStake is a free data retrieval call binding the contract method 0x5e30913f.
//
// Solidity: function getAccountStake(address account) view returns(uint256)
func (_Scatterprotocol *ScatterprotocolCaller) GetAccountStake(opts *bind.CallOpts, account common.Address) (*big.Int, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "getAccountStake", account)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetAccountStake is a free data retrieval call binding the contract method 0x5e30913f.
//
// Solidity: function getAccountStake(address account) view returns(uint256)
func (_Scatterprotocol *ScatterprotocolSession) GetAccountStake(account common.Address) (*big.Int, error) {
	return _Scatterprotocol.Contract.GetAccountStake(&_Scatterprotocol.CallOpts, account)
}

// GetAccountStake is a free data retrieval call binding the contract method 0x5e30913f.
//
// Solidity: function getAccountStake(address account) view returns(uint256)
func (_Scatterprotocol *ScatterprotocolCallerSession) GetAccountStake(account common.Address) (*big.Int, error) {
	return _Scatterprotocol.Contract.GetAccountStake(&_Scatterprotocol.CallOpts, account)
}

// GetOwnStake is a free data retrieval call binding the contract method 0xfb7ba582.
//
// Solidity: function getOwnStake() view returns(uint256)
func (_Scatterprotocol *ScatterprotocolCaller) GetOwnStake(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "getOwnStake")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetOwnStake is a free data retrieval call binding the contract method 0xfb7ba582.
//
// Solidity: function getOwnStake() view returns(uint256)
func (_Scatterprotocol *ScatterprotocolSession) GetOwnStake() (*big.Int, error) {
	return _Scatterprotocol.Contract.GetOwnStake(&_Scatterprotocol.CallOpts)
}

// GetOwnStake is a free data retrieval call binding the contract method 0xfb7ba582.
//
// Solidity: function getOwnStake() view returns(uint256)
func (_Scatterprotocol *ScatterprotocolCallerSession) GetOwnStake() (*big.Int, error) {
	return _Scatterprotocol.Contract.GetOwnStake(&_Scatterprotocol.CallOpts)
}

// GetRequestorAddresses is a free data retrieval call binding the contract method 0xb4efe15f.
//
// Solidity: function getRequestorAddresses(int256 skip) view returns(string)
func (_Scatterprotocol *ScatterprotocolCaller) GetRequestorAddresses(opts *bind.CallOpts, skip *big.Int) (string, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "getRequestorAddresses", skip)

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// GetRequestorAddresses is a free data retrieval call binding the contract method 0xb4efe15f.
//
// Solidity: function getRequestorAddresses(int256 skip) view returns(string)
func (_Scatterprotocol *ScatterprotocolSession) GetRequestorAddresses(skip *big.Int) (string, error) {
	return _Scatterprotocol.Contract.GetRequestorAddresses(&_Scatterprotocol.CallOpts, skip)
}

// GetRequestorAddresses is a free data retrieval call binding the contract method 0xb4efe15f.
//
// Solidity: function getRequestorAddresses(int256 skip) view returns(string)
func (_Scatterprotocol *ScatterprotocolCallerSession) GetRequestorAddresses(skip *big.Int) (string, error) {
	return _Scatterprotocol.Contract.GetRequestorAddresses(&_Scatterprotocol.CallOpts, skip)
}

// GetRoleByAddress is a free data retrieval call binding the contract method 0x7bff77d4.
//
// Solidity: function getRoleByAddress(address addressToFind) view returns(string)
func (_Scatterprotocol *ScatterprotocolCaller) GetRoleByAddress(opts *bind.CallOpts, addressToFind common.Address) (string, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "getRoleByAddress", addressToFind)

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// GetRoleByAddress is a free data retrieval call binding the contract method 0x7bff77d4.
//
// Solidity: function getRoleByAddress(address addressToFind) view returns(string)
func (_Scatterprotocol *ScatterprotocolSession) GetRoleByAddress(addressToFind common.Address) (string, error) {
	return _Scatterprotocol.Contract.GetRoleByAddress(&_Scatterprotocol.CallOpts, addressToFind)
}

// GetRoleByAddress is a free data retrieval call binding the contract method 0x7bff77d4.
//
// Solidity: function getRoleByAddress(address addressToFind) view returns(string)
func (_Scatterprotocol *ScatterprotocolCallerSession) GetRoleByAddress(addressToFind common.Address) (string, error) {
	return _Scatterprotocol.Contract.GetRoleByAddress(&_Scatterprotocol.CallOpts, addressToFind)
}

// GetTopicsByRequestorAddress is a free data retrieval call binding the contract method 0xd8ecebed.
//
// Solidity: function getTopicsByRequestorAddress(address requestorAddress, int256 skip) view returns(string)
func (_Scatterprotocol *ScatterprotocolCaller) GetTopicsByRequestorAddress(opts *bind.CallOpts, requestorAddress common.Address, skip *big.Int) (string, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "getTopicsByRequestorAddress", requestorAddress, skip)

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// GetTopicsByRequestorAddress is a free data retrieval call binding the contract method 0xd8ecebed.
//
// Solidity: function getTopicsByRequestorAddress(address requestorAddress, int256 skip) view returns(string)
func (_Scatterprotocol *ScatterprotocolSession) GetTopicsByRequestorAddress(requestorAddress common.Address, skip *big.Int) (string, error) {
	return _Scatterprotocol.Contract.GetTopicsByRequestorAddress(&_Scatterprotocol.CallOpts, requestorAddress, skip)
}

// GetTopicsByRequestorAddress is a free data retrieval call binding the contract method 0xd8ecebed.
//
// Solidity: function getTopicsByRequestorAddress(address requestorAddress, int256 skip) view returns(string)
func (_Scatterprotocol *ScatterprotocolCallerSession) GetTopicsByRequestorAddress(requestorAddress common.Address, skip *big.Int) (string, error) {
	return _Scatterprotocol.Contract.GetTopicsByRequestorAddress(&_Scatterprotocol.CallOpts, requestorAddress, skip)
}

// GetTrainersByAddressAndTopic is a free data retrieval call binding the contract method 0x04aa1397.
//
// Solidity: function getTrainersByAddressAndTopic(address requestorAddress, string topicName, int256 skip) view returns(string)
func (_Scatterprotocol *ScatterprotocolCaller) GetTrainersByAddressAndTopic(opts *bind.CallOpts, requestorAddress common.Address, topicName string, skip *big.Int) (string, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "getTrainersByAddressAndTopic", requestorAddress, topicName, skip)

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// GetTrainersByAddressAndTopic is a free data retrieval call binding the contract method 0x04aa1397.
//
// Solidity: function getTrainersByAddressAndTopic(address requestorAddress, string topicName, int256 skip) view returns(string)
func (_Scatterprotocol *ScatterprotocolSession) GetTrainersByAddressAndTopic(requestorAddress common.Address, topicName string, skip *big.Int) (string, error) {
	return _Scatterprotocol.Contract.GetTrainersByAddressAndTopic(&_Scatterprotocol.CallOpts, requestorAddress, topicName, skip)
}

// GetTrainersByAddressAndTopic is a free data retrieval call binding the contract method 0x04aa1397.
//
// Solidity: function getTrainersByAddressAndTopic(address requestorAddress, string topicName, int256 skip) view returns(string)
func (_Scatterprotocol *ScatterprotocolCallerSession) GetTrainersByAddressAndTopic(requestorAddress common.Address, topicName string, skip *big.Int) (string, error) {
	return _Scatterprotocol.Contract.GetTrainersByAddressAndTopic(&_Scatterprotocol.CallOpts, requestorAddress, topicName, skip)
}

// Name is a free data retrieval call binding the contract method 0x06fdde03.
//
// Solidity: function name() view returns(string)
func (_Scatterprotocol *ScatterprotocolCaller) Name(opts *bind.CallOpts) (string, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "name")

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// Name is a free data retrieval call binding the contract method 0x06fdde03.
//
// Solidity: function name() view returns(string)
func (_Scatterprotocol *ScatterprotocolSession) Name() (string, error) {
	return _Scatterprotocol.Contract.Name(&_Scatterprotocol.CallOpts)
}

// Name is a free data retrieval call binding the contract method 0x06fdde03.
//
// Solidity: function name() view returns(string)
func (_Scatterprotocol *ScatterprotocolCallerSession) Name() (string, error) {
	return _Scatterprotocol.Contract.Name(&_Scatterprotocol.CallOpts)
}

// NetworkRequestors is a free data retrieval call binding the contract method 0xa765d052.
//
// Solidity: function networkRequestors(uint256 ) view returns(address)
func (_Scatterprotocol *ScatterprotocolCaller) NetworkRequestors(opts *bind.CallOpts, arg0 *big.Int) (common.Address, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "networkRequestors", arg0)

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// NetworkRequestors is a free data retrieval call binding the contract method 0xa765d052.
//
// Solidity: function networkRequestors(uint256 ) view returns(address)
func (_Scatterprotocol *ScatterprotocolSession) NetworkRequestors(arg0 *big.Int) (common.Address, error) {
	return _Scatterprotocol.Contract.NetworkRequestors(&_Scatterprotocol.CallOpts, arg0)
}

// NetworkRequestors is a free data retrieval call binding the contract method 0xa765d052.
//
// Solidity: function networkRequestors(uint256 ) view returns(address)
func (_Scatterprotocol *ScatterprotocolCallerSession) NetworkRequestors(arg0 *big.Int) (common.Address, error) {
	return _Scatterprotocol.Contract.NetworkRequestors(&_Scatterprotocol.CallOpts, arg0)
}

// NetworkTrainers is a free data retrieval call binding the contract method 0xaa711be6.
//
// Solidity: function networkTrainers(uint256 ) view returns(address)
func (_Scatterprotocol *ScatterprotocolCaller) NetworkTrainers(opts *bind.CallOpts, arg0 *big.Int) (common.Address, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "networkTrainers", arg0)

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// NetworkTrainers is a free data retrieval call binding the contract method 0xaa711be6.
//
// Solidity: function networkTrainers(uint256 ) view returns(address)
func (_Scatterprotocol *ScatterprotocolSession) NetworkTrainers(arg0 *big.Int) (common.Address, error) {
	return _Scatterprotocol.Contract.NetworkTrainers(&_Scatterprotocol.CallOpts, arg0)
}

// NetworkTrainers is a free data retrieval call binding the contract method 0xaa711be6.
//
// Solidity: function networkTrainers(uint256 ) view returns(address)
func (_Scatterprotocol *ScatterprotocolCallerSession) NetworkTrainers(arg0 *big.Int) (common.Address, error) {
	return _Scatterprotocol.Contract.NetworkTrainers(&_Scatterprotocol.CallOpts, arg0)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_Scatterprotocol *ScatterprotocolCaller) Owner(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "owner")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_Scatterprotocol *ScatterprotocolSession) Owner() (common.Address, error) {
	return _Scatterprotocol.Contract.Owner(&_Scatterprotocol.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_Scatterprotocol *ScatterprotocolCallerSession) Owner() (common.Address, error) {
	return _Scatterprotocol.Contract.Owner(&_Scatterprotocol.CallOpts)
}

// RequiredCosmosValidatorStake is a free data retrieval call binding the contract method 0x08b44b01.
//
// Solidity: function requiredCosmosValidatorStake() view returns(uint256)
func (_Scatterprotocol *ScatterprotocolCaller) RequiredCosmosValidatorStake(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "requiredCosmosValidatorStake")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// RequiredCosmosValidatorStake is a free data retrieval call binding the contract method 0x08b44b01.
//
// Solidity: function requiredCosmosValidatorStake() view returns(uint256)
func (_Scatterprotocol *ScatterprotocolSession) RequiredCosmosValidatorStake() (*big.Int, error) {
	return _Scatterprotocol.Contract.RequiredCosmosValidatorStake(&_Scatterprotocol.CallOpts)
}

// RequiredCosmosValidatorStake is a free data retrieval call binding the contract method 0x08b44b01.
//
// Solidity: function requiredCosmosValidatorStake() view returns(uint256)
func (_Scatterprotocol *ScatterprotocolCallerSession) RequiredCosmosValidatorStake() (*big.Int, error) {
	return _Scatterprotocol.Contract.RequiredCosmosValidatorStake(&_Scatterprotocol.CallOpts)
}

// RequiredModelValidatorStake is a free data retrieval call binding the contract method 0x36cb7f80.
//
// Solidity: function requiredModelValidatorStake() view returns(uint256)
func (_Scatterprotocol *ScatterprotocolCaller) RequiredModelValidatorStake(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "requiredModelValidatorStake")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// RequiredModelValidatorStake is a free data retrieval call binding the contract method 0x36cb7f80.
//
// Solidity: function requiredModelValidatorStake() view returns(uint256)
func (_Scatterprotocol *ScatterprotocolSession) RequiredModelValidatorStake() (*big.Int, error) {
	return _Scatterprotocol.Contract.RequiredModelValidatorStake(&_Scatterprotocol.CallOpts)
}

// RequiredModelValidatorStake is a free data retrieval call binding the contract method 0x36cb7f80.
//
// Solidity: function requiredModelValidatorStake() view returns(uint256)
func (_Scatterprotocol *ScatterprotocolCallerSession) RequiredModelValidatorStake() (*big.Int, error) {
	return _Scatterprotocol.Contract.RequiredModelValidatorStake(&_Scatterprotocol.CallOpts)
}

// Symbol is a free data retrieval call binding the contract method 0x95d89b41.
//
// Solidity: function symbol() view returns(string)
func (_Scatterprotocol *ScatterprotocolCaller) Symbol(opts *bind.CallOpts) (string, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "symbol")

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// Symbol is a free data retrieval call binding the contract method 0x95d89b41.
//
// Solidity: function symbol() view returns(string)
func (_Scatterprotocol *ScatterprotocolSession) Symbol() (string, error) {
	return _Scatterprotocol.Contract.Symbol(&_Scatterprotocol.CallOpts)
}

// Symbol is a free data retrieval call binding the contract method 0x95d89b41.
//
// Solidity: function symbol() view returns(string)
func (_Scatterprotocol *ScatterprotocolCallerSession) Symbol() (string, error) {
	return _Scatterprotocol.Contract.Symbol(&_Scatterprotocol.CallOpts)
}

// TotalSupply is a free data retrieval call binding the contract method 0x18160ddd.
//
// Solidity: function totalSupply() view returns(uint256)
func (_Scatterprotocol *ScatterprotocolCaller) TotalSupply(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "totalSupply")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// TotalSupply is a free data retrieval call binding the contract method 0x18160ddd.
//
// Solidity: function totalSupply() view returns(uint256)
func (_Scatterprotocol *ScatterprotocolSession) TotalSupply() (*big.Int, error) {
	return _Scatterprotocol.Contract.TotalSupply(&_Scatterprotocol.CallOpts)
}

// TotalSupply is a free data retrieval call binding the contract method 0x18160ddd.
//
// Solidity: function totalSupply() view returns(uint256)
func (_Scatterprotocol *ScatterprotocolCallerSession) TotalSupply() (*big.Int, error) {
	return _Scatterprotocol.Contract.TotalSupply(&_Scatterprotocol.CallOpts)
}

// TrainingJobContract is a free data retrieval call binding the contract method 0xb3f5b280.
//
// Solidity: function trainingJobContract() view returns(address)
func (_Scatterprotocol *ScatterprotocolCaller) TrainingJobContract(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "trainingJobContract")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// TrainingJobContract is a free data retrieval call binding the contract method 0xb3f5b280.
//
// Solidity: function trainingJobContract() view returns(address)
func (_Scatterprotocol *ScatterprotocolSession) TrainingJobContract() (common.Address, error) {
	return _Scatterprotocol.Contract.TrainingJobContract(&_Scatterprotocol.CallOpts)
}

// TrainingJobContract is a free data retrieval call binding the contract method 0xb3f5b280.
//
// Solidity: function trainingJobContract() view returns(address)
func (_Scatterprotocol *ScatterprotocolCallerSession) TrainingJobContract() (common.Address, error) {
	return _Scatterprotocol.Contract.TrainingJobContract(&_Scatterprotocol.CallOpts)
}

// AddStake is a paid mutator transaction binding the contract method 0xeb4f16b5.
//
// Solidity: function addStake(uint256 amount) returns()
func (_Scatterprotocol *ScatterprotocolTransactor) AddStake(opts *bind.TransactOpts, amount *big.Int) (*types.Transaction, error) {
	return _Scatterprotocol.contract.Transact(opts, "addStake", amount)
}

// AddStake is a paid mutator transaction binding the contract method 0xeb4f16b5.
//
// Solidity: function addStake(uint256 amount) returns()
func (_Scatterprotocol *ScatterprotocolSession) AddStake(amount *big.Int) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.AddStake(&_Scatterprotocol.TransactOpts, amount)
}

// AddStake is a paid mutator transaction binding the contract method 0xeb4f16b5.
//
// Solidity: function addStake(uint256 amount) returns()
func (_Scatterprotocol *ScatterprotocolTransactorSession) AddStake(amount *big.Int) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.AddStake(&_Scatterprotocol.TransactOpts, amount)
}

// AddTopicForRequestor is a paid mutator transaction binding the contract method 0x63b23aff.
//
// Solidity: function addTopicForRequestor(string topicName, string jobCid, address requestorAddress) returns()
func (_Scatterprotocol *ScatterprotocolTransactor) AddTopicForRequestor(opts *bind.TransactOpts, topicName string, jobCid string, requestorAddress common.Address) (*types.Transaction, error) {
	return _Scatterprotocol.contract.Transact(opts, "addTopicForRequestor", topicName, jobCid, requestorAddress)
}

// AddTopicForRequestor is a paid mutator transaction binding the contract method 0x63b23aff.
//
// Solidity: function addTopicForRequestor(string topicName, string jobCid, address requestorAddress) returns()
func (_Scatterprotocol *ScatterprotocolSession) AddTopicForRequestor(topicName string, jobCid string, requestorAddress common.Address) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.AddTopicForRequestor(&_Scatterprotocol.TransactOpts, topicName, jobCid, requestorAddress)
}

// AddTopicForRequestor is a paid mutator transaction binding the contract method 0x63b23aff.
//
// Solidity: function addTopicForRequestor(string topicName, string jobCid, address requestorAddress) returns()
func (_Scatterprotocol *ScatterprotocolTransactorSession) AddTopicForRequestor(topicName string, jobCid string, requestorAddress common.Address) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.AddTopicForRequestor(&_Scatterprotocol.TransactOpts, topicName, jobCid, requestorAddress)
}

// Approve is a paid mutator transaction binding the contract method 0x095ea7b3.
//
// Solidity: function approve(address spender, uint256 amount) returns(bool)
func (_Scatterprotocol *ScatterprotocolTransactor) Approve(opts *bind.TransactOpts, spender common.Address, amount *big.Int) (*types.Transaction, error) {
	return _Scatterprotocol.contract.Transact(opts, "approve", spender, amount)
}

// Approve is a paid mutator transaction binding the contract method 0x095ea7b3.
//
// Solidity: function approve(address spender, uint256 amount) returns(bool)
func (_Scatterprotocol *ScatterprotocolSession) Approve(spender common.Address, amount *big.Int) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.Approve(&_Scatterprotocol.TransactOpts, spender, amount)
}

// Approve is a paid mutator transaction binding the contract method 0x095ea7b3.
//
// Solidity: function approve(address spender, uint256 amount) returns(bool)
func (_Scatterprotocol *ScatterprotocolTransactorSession) Approve(spender common.Address, amount *big.Int) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.Approve(&_Scatterprotocol.TransactOpts, spender, amount)
}

// Burn is a paid mutator transaction binding the contract method 0x42966c68.
//
// Solidity: function burn(uint256 amount) returns()
func (_Scatterprotocol *ScatterprotocolTransactor) Burn(opts *bind.TransactOpts, amount *big.Int) (*types.Transaction, error) {
	return _Scatterprotocol.contract.Transact(opts, "burn", amount)
}

// Burn is a paid mutator transaction binding the contract method 0x42966c68.
//
// Solidity: function burn(uint256 amount) returns()
func (_Scatterprotocol *ScatterprotocolSession) Burn(amount *big.Int) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.Burn(&_Scatterprotocol.TransactOpts, amount)
}

// Burn is a paid mutator transaction binding the contract method 0x42966c68.
//
// Solidity: function burn(uint256 amount) returns()
func (_Scatterprotocol *ScatterprotocolTransactorSession) Burn(amount *big.Int) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.Burn(&_Scatterprotocol.TransactOpts, amount)
}

// BurnFrom is a paid mutator transaction binding the contract method 0x79cc6790.
//
// Solidity: function burnFrom(address account, uint256 amount) returns()
func (_Scatterprotocol *ScatterprotocolTransactor) BurnFrom(opts *bind.TransactOpts, account common.Address, amount *big.Int) (*types.Transaction, error) {
	return _Scatterprotocol.contract.Transact(opts, "burnFrom", account, amount)
}

// BurnFrom is a paid mutator transaction binding the contract method 0x79cc6790.
//
// Solidity: function burnFrom(address account, uint256 amount) returns()
func (_Scatterprotocol *ScatterprotocolSession) BurnFrom(account common.Address, amount *big.Int) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.BurnFrom(&_Scatterprotocol.TransactOpts, account, amount)
}

// BurnFrom is a paid mutator transaction binding the contract method 0x79cc6790.
//
// Solidity: function burnFrom(address account, uint256 amount) returns()
func (_Scatterprotocol *ScatterprotocolTransactorSession) BurnFrom(account common.Address, amount *big.Int) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.BurnFrom(&_Scatterprotocol.TransactOpts, account, amount)
}

// DecreaseAllowance is a paid mutator transaction binding the contract method 0xa457c2d7.
//
// Solidity: function decreaseAllowance(address spender, uint256 subtractedValue) returns(bool)
func (_Scatterprotocol *ScatterprotocolTransactor) DecreaseAllowance(opts *bind.TransactOpts, spender common.Address, subtractedValue *big.Int) (*types.Transaction, error) {
	return _Scatterprotocol.contract.Transact(opts, "decreaseAllowance", spender, subtractedValue)
}

// DecreaseAllowance is a paid mutator transaction binding the contract method 0xa457c2d7.
//
// Solidity: function decreaseAllowance(address spender, uint256 subtractedValue) returns(bool)
func (_Scatterprotocol *ScatterprotocolSession) DecreaseAllowance(spender common.Address, subtractedValue *big.Int) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.DecreaseAllowance(&_Scatterprotocol.TransactOpts, spender, subtractedValue)
}

// DecreaseAllowance is a paid mutator transaction binding the contract method 0xa457c2d7.
//
// Solidity: function decreaseAllowance(address spender, uint256 subtractedValue) returns(bool)
func (_Scatterprotocol *ScatterprotocolTransactorSession) DecreaseAllowance(spender common.Address, subtractedValue *big.Int) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.DecreaseAllowance(&_Scatterprotocol.TransactOpts, spender, subtractedValue)
}

// Destroy is a paid mutator transaction binding the contract method 0x83197ef0.
//
// Solidity: function destroy() returns()
func (_Scatterprotocol *ScatterprotocolTransactor) Destroy(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Scatterprotocol.contract.Transact(opts, "destroy")
}

// Destroy is a paid mutator transaction binding the contract method 0x83197ef0.
//
// Solidity: function destroy() returns()
func (_Scatterprotocol *ScatterprotocolSession) Destroy() (*types.Transaction, error) {
	return _Scatterprotocol.Contract.Destroy(&_Scatterprotocol.TransactOpts)
}

// Destroy is a paid mutator transaction binding the contract method 0x83197ef0.
//
// Solidity: function destroy() returns()
func (_Scatterprotocol *ScatterprotocolTransactorSession) Destroy() (*types.Transaction, error) {
	return _Scatterprotocol.Contract.Destroy(&_Scatterprotocol.TransactOpts)
}

// ElevateToCosmosValidator is a paid mutator transaction binding the contract method 0xbdb66855.
//
// Solidity: function elevateToCosmosValidator() returns()
func (_Scatterprotocol *ScatterprotocolTransactor) ElevateToCosmosValidator(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Scatterprotocol.contract.Transact(opts, "elevateToCosmosValidator")
}

// ElevateToCosmosValidator is a paid mutator transaction binding the contract method 0xbdb66855.
//
// Solidity: function elevateToCosmosValidator() returns()
func (_Scatterprotocol *ScatterprotocolSession) ElevateToCosmosValidator() (*types.Transaction, error) {
	return _Scatterprotocol.Contract.ElevateToCosmosValidator(&_Scatterprotocol.TransactOpts)
}

// ElevateToCosmosValidator is a paid mutator transaction binding the contract method 0xbdb66855.
//
// Solidity: function elevateToCosmosValidator() returns()
func (_Scatterprotocol *ScatterprotocolTransactorSession) ElevateToCosmosValidator() (*types.Transaction, error) {
	return _Scatterprotocol.Contract.ElevateToCosmosValidator(&_Scatterprotocol.TransactOpts)
}

// ElevateToModelValidator is a paid mutator transaction binding the contract method 0xa06e692b.
//
// Solidity: function elevateToModelValidator() returns()
func (_Scatterprotocol *ScatterprotocolTransactor) ElevateToModelValidator(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Scatterprotocol.contract.Transact(opts, "elevateToModelValidator")
}

// ElevateToModelValidator is a paid mutator transaction binding the contract method 0xa06e692b.
//
// Solidity: function elevateToModelValidator() returns()
func (_Scatterprotocol *ScatterprotocolSession) ElevateToModelValidator() (*types.Transaction, error) {
	return _Scatterprotocol.Contract.ElevateToModelValidator(&_Scatterprotocol.TransactOpts)
}

// ElevateToModelValidator is a paid mutator transaction binding the contract method 0xa06e692b.
//
// Solidity: function elevateToModelValidator() returns()
func (_Scatterprotocol *ScatterprotocolTransactorSession) ElevateToModelValidator() (*types.Transaction, error) {
	return _Scatterprotocol.Contract.ElevateToModelValidator(&_Scatterprotocol.TransactOpts)
}

// IncreaseAllowance is a paid mutator transaction binding the contract method 0x39509351.
//
// Solidity: function increaseAllowance(address spender, uint256 addedValue) returns(bool)
func (_Scatterprotocol *ScatterprotocolTransactor) IncreaseAllowance(opts *bind.TransactOpts, spender common.Address, addedValue *big.Int) (*types.Transaction, error) {
	return _Scatterprotocol.contract.Transact(opts, "increaseAllowance", spender, addedValue)
}

// IncreaseAllowance is a paid mutator transaction binding the contract method 0x39509351.
//
// Solidity: function increaseAllowance(address spender, uint256 addedValue) returns(bool)
func (_Scatterprotocol *ScatterprotocolSession) IncreaseAllowance(spender common.Address, addedValue *big.Int) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.IncreaseAllowance(&_Scatterprotocol.TransactOpts, spender, addedValue)
}

// IncreaseAllowance is a paid mutator transaction binding the contract method 0x39509351.
//
// Solidity: function increaseAllowance(address spender, uint256 addedValue) returns(bool)
func (_Scatterprotocol *ScatterprotocolTransactorSession) IncreaseAllowance(spender common.Address, addedValue *big.Int) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.IncreaseAllowance(&_Scatterprotocol.TransactOpts, spender, addedValue)
}

// InitCelestialNode is a paid mutator transaction binding the contract method 0x09079d0f.
//
// Solidity: function initCelestialNode() returns()
func (_Scatterprotocol *ScatterprotocolTransactor) InitCelestialNode(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Scatterprotocol.contract.Transact(opts, "initCelestialNode")
}

// InitCelestialNode is a paid mutator transaction binding the contract method 0x09079d0f.
//
// Solidity: function initCelestialNode() returns()
func (_Scatterprotocol *ScatterprotocolSession) InitCelestialNode() (*types.Transaction, error) {
	return _Scatterprotocol.Contract.InitCelestialNode(&_Scatterprotocol.TransactOpts)
}

// InitCelestialNode is a paid mutator transaction binding the contract method 0x09079d0f.
//
// Solidity: function initCelestialNode() returns()
func (_Scatterprotocol *ScatterprotocolTransactorSession) InitCelestialNode() (*types.Transaction, error) {
	return _Scatterprotocol.Contract.InitCelestialNode(&_Scatterprotocol.TransactOpts)
}

// InitRequestorNode is a paid mutator transaction binding the contract method 0xcb30bfc3.
//
// Solidity: function initRequestorNode() returns()
func (_Scatterprotocol *ScatterprotocolTransactor) InitRequestorNode(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Scatterprotocol.contract.Transact(opts, "initRequestorNode")
}

// InitRequestorNode is a paid mutator transaction binding the contract method 0xcb30bfc3.
//
// Solidity: function initRequestorNode() returns()
func (_Scatterprotocol *ScatterprotocolSession) InitRequestorNode() (*types.Transaction, error) {
	return _Scatterprotocol.Contract.InitRequestorNode(&_Scatterprotocol.TransactOpts)
}

// InitRequestorNode is a paid mutator transaction binding the contract method 0xcb30bfc3.
//
// Solidity: function initRequestorNode() returns()
func (_Scatterprotocol *ScatterprotocolTransactorSession) InitRequestorNode() (*types.Transaction, error) {
	return _Scatterprotocol.Contract.InitRequestorNode(&_Scatterprotocol.TransactOpts)
}

// InitTrainerNode is a paid mutator transaction binding the contract method 0x6949f907.
//
// Solidity: function initTrainerNode() returns()
func (_Scatterprotocol *ScatterprotocolTransactor) InitTrainerNode(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Scatterprotocol.contract.Transact(opts, "initTrainerNode")
}

// InitTrainerNode is a paid mutator transaction binding the contract method 0x6949f907.
//
// Solidity: function initTrainerNode() returns()
func (_Scatterprotocol *ScatterprotocolSession) InitTrainerNode() (*types.Transaction, error) {
	return _Scatterprotocol.Contract.InitTrainerNode(&_Scatterprotocol.TransactOpts)
}

// InitTrainerNode is a paid mutator transaction binding the contract method 0x6949f907.
//
// Solidity: function initTrainerNode() returns()
func (_Scatterprotocol *ScatterprotocolTransactorSession) InitTrainerNode() (*types.Transaction, error) {
	return _Scatterprotocol.Contract.InitTrainerNode(&_Scatterprotocol.TransactOpts)
}

// RemoveStake is a paid mutator transaction binding the contract method 0x939624ab.
//
// Solidity: function removeStake(uint256 amount) returns()
func (_Scatterprotocol *ScatterprotocolTransactor) RemoveStake(opts *bind.TransactOpts, amount *big.Int) (*types.Transaction, error) {
	return _Scatterprotocol.contract.Transact(opts, "removeStake", amount)
}

// RemoveStake is a paid mutator transaction binding the contract method 0x939624ab.
//
// Solidity: function removeStake(uint256 amount) returns()
func (_Scatterprotocol *ScatterprotocolSession) RemoveStake(amount *big.Int) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.RemoveStake(&_Scatterprotocol.TransactOpts, amount)
}

// RemoveStake is a paid mutator transaction binding the contract method 0x939624ab.
//
// Solidity: function removeStake(uint256 amount) returns()
func (_Scatterprotocol *ScatterprotocolTransactorSession) RemoveStake(amount *big.Int) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.RemoveStake(&_Scatterprotocol.TransactOpts, amount)
}

// RequestorAddTopic is a paid mutator transaction binding the contract method 0x513d5b1d.
//
// Solidity: function requestorAddTopic(string tokenURI, string topicName) returns()
func (_Scatterprotocol *ScatterprotocolTransactor) RequestorAddTopic(opts *bind.TransactOpts, tokenURI string, topicName string) (*types.Transaction, error) {
	return _Scatterprotocol.contract.Transact(opts, "requestorAddTopic", tokenURI, topicName)
}

// RequestorAddTopic is a paid mutator transaction binding the contract method 0x513d5b1d.
//
// Solidity: function requestorAddTopic(string tokenURI, string topicName) returns()
func (_Scatterprotocol *ScatterprotocolSession) RequestorAddTopic(tokenURI string, topicName string) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.RequestorAddTopic(&_Scatterprotocol.TransactOpts, tokenURI, topicName)
}

// RequestorAddTopic is a paid mutator transaction binding the contract method 0x513d5b1d.
//
// Solidity: function requestorAddTopic(string tokenURI, string topicName) returns()
func (_Scatterprotocol *ScatterprotocolTransactorSession) RequestorAddTopic(tokenURI string, topicName string) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.RequestorAddTopic(&_Scatterprotocol.TransactOpts, tokenURI, topicName)
}

// SetBlockReward is a paid mutator transaction binding the contract method 0x1a18e707.
//
// Solidity: function setBlockReward(uint256 reward) returns()
func (_Scatterprotocol *ScatterprotocolTransactor) SetBlockReward(opts *bind.TransactOpts, reward *big.Int) (*types.Transaction, error) {
	return _Scatterprotocol.contract.Transact(opts, "setBlockReward", reward)
}

// SetBlockReward is a paid mutator transaction binding the contract method 0x1a18e707.
//
// Solidity: function setBlockReward(uint256 reward) returns()
func (_Scatterprotocol *ScatterprotocolSession) SetBlockReward(reward *big.Int) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.SetBlockReward(&_Scatterprotocol.TransactOpts, reward)
}

// SetBlockReward is a paid mutator transaction binding the contract method 0x1a18e707.
//
// Solidity: function setBlockReward(uint256 reward) returns()
func (_Scatterprotocol *ScatterprotocolTransactorSession) SetBlockReward(reward *big.Int) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.SetBlockReward(&_Scatterprotocol.TransactOpts, reward)
}

// SetEvaluationJobContractAddress is a paid mutator transaction binding the contract method 0x039e09b1.
//
// Solidity: function setEvaluationJobContractAddress(address newAddress) returns()
func (_Scatterprotocol *ScatterprotocolTransactor) SetEvaluationJobContractAddress(opts *bind.TransactOpts, newAddress common.Address) (*types.Transaction, error) {
	return _Scatterprotocol.contract.Transact(opts, "setEvaluationJobContractAddress", newAddress)
}

// SetEvaluationJobContractAddress is a paid mutator transaction binding the contract method 0x039e09b1.
//
// Solidity: function setEvaluationJobContractAddress(address newAddress) returns()
func (_Scatterprotocol *ScatterprotocolSession) SetEvaluationJobContractAddress(newAddress common.Address) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.SetEvaluationJobContractAddress(&_Scatterprotocol.TransactOpts, newAddress)
}

// SetEvaluationJobContractAddress is a paid mutator transaction binding the contract method 0x039e09b1.
//
// Solidity: function setEvaluationJobContractAddress(address newAddress) returns()
func (_Scatterprotocol *ScatterprotocolTransactorSession) SetEvaluationJobContractAddress(newAddress common.Address) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.SetEvaluationJobContractAddress(&_Scatterprotocol.TransactOpts, newAddress)
}

// SetNodeId is a paid mutator transaction binding the contract method 0x7d9011ec.
//
// Solidity: function setNodeId(string nodeId) returns()
func (_Scatterprotocol *ScatterprotocolTransactor) SetNodeId(opts *bind.TransactOpts, nodeId string) (*types.Transaction, error) {
	return _Scatterprotocol.contract.Transact(opts, "setNodeId", nodeId)
}

// SetNodeId is a paid mutator transaction binding the contract method 0x7d9011ec.
//
// Solidity: function setNodeId(string nodeId) returns()
func (_Scatterprotocol *ScatterprotocolSession) SetNodeId(nodeId string) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.SetNodeId(&_Scatterprotocol.TransactOpts, nodeId)
}

// SetNodeId is a paid mutator transaction binding the contract method 0x7d9011ec.
//
// Solidity: function setNodeId(string nodeId) returns()
func (_Scatterprotocol *ScatterprotocolTransactorSession) SetNodeId(nodeId string) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.SetNodeId(&_Scatterprotocol.TransactOpts, nodeId)
}

// SetTrainingJobContractAddress is a paid mutator transaction binding the contract method 0x5aff6e77.
//
// Solidity: function setTrainingJobContractAddress(address newAddress) returns()
func (_Scatterprotocol *ScatterprotocolTransactor) SetTrainingJobContractAddress(opts *bind.TransactOpts, newAddress common.Address) (*types.Transaction, error) {
	return _Scatterprotocol.contract.Transact(opts, "setTrainingJobContractAddress", newAddress)
}

// SetTrainingJobContractAddress is a paid mutator transaction binding the contract method 0x5aff6e77.
//
// Solidity: function setTrainingJobContractAddress(address newAddress) returns()
func (_Scatterprotocol *ScatterprotocolSession) SetTrainingJobContractAddress(newAddress common.Address) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.SetTrainingJobContractAddress(&_Scatterprotocol.TransactOpts, newAddress)
}

// SetTrainingJobContractAddress is a paid mutator transaction binding the contract method 0x5aff6e77.
//
// Solidity: function setTrainingJobContractAddress(address newAddress) returns()
func (_Scatterprotocol *ScatterprotocolTransactorSession) SetTrainingJobContractAddress(newAddress common.Address) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.SetTrainingJobContractAddress(&_Scatterprotocol.TransactOpts, newAddress)
}

// StartTraining is a paid mutator transaction binding the contract method 0x300c7315.
//
// Solidity: function startTraining(string topicName) returns()
func (_Scatterprotocol *ScatterprotocolTransactor) StartTraining(opts *bind.TransactOpts, topicName string) (*types.Transaction, error) {
	return _Scatterprotocol.contract.Transact(opts, "startTraining", topicName)
}

// StartTraining is a paid mutator transaction binding the contract method 0x300c7315.
//
// Solidity: function startTraining(string topicName) returns()
func (_Scatterprotocol *ScatterprotocolSession) StartTraining(topicName string) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.StartTraining(&_Scatterprotocol.TransactOpts, topicName)
}

// StartTraining is a paid mutator transaction binding the contract method 0x300c7315.
//
// Solidity: function startTraining(string topicName) returns()
func (_Scatterprotocol *ScatterprotocolTransactorSession) StartTraining(topicName string) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.StartTraining(&_Scatterprotocol.TransactOpts, topicName)
}

// TrainerAddTopic is a paid mutator transaction binding the contract method 0x6408602d.
//
// Solidity: function trainerAddTopic(address requestorAddress, string requestorTopic) returns()
func (_Scatterprotocol *ScatterprotocolTransactor) TrainerAddTopic(opts *bind.TransactOpts, requestorAddress common.Address, requestorTopic string) (*types.Transaction, error) {
	return _Scatterprotocol.contract.Transact(opts, "trainerAddTopic", requestorAddress, requestorTopic)
}

// TrainerAddTopic is a paid mutator transaction binding the contract method 0x6408602d.
//
// Solidity: function trainerAddTopic(address requestorAddress, string requestorTopic) returns()
func (_Scatterprotocol *ScatterprotocolSession) TrainerAddTopic(requestorAddress common.Address, requestorTopic string) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.TrainerAddTopic(&_Scatterprotocol.TransactOpts, requestorAddress, requestorTopic)
}

// TrainerAddTopic is a paid mutator transaction binding the contract method 0x6408602d.
//
// Solidity: function trainerAddTopic(address requestorAddress, string requestorTopic) returns()
func (_Scatterprotocol *ScatterprotocolTransactorSession) TrainerAddTopic(requestorAddress common.Address, requestorTopic string) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.TrainerAddTopic(&_Scatterprotocol.TransactOpts, requestorAddress, requestorTopic)
}

// Transfer is a paid mutator transaction binding the contract method 0xa9059cbb.
//
// Solidity: function transfer(address to, uint256 amount) returns(bool)
func (_Scatterprotocol *ScatterprotocolTransactor) Transfer(opts *bind.TransactOpts, to common.Address, amount *big.Int) (*types.Transaction, error) {
	return _Scatterprotocol.contract.Transact(opts, "transfer", to, amount)
}

// Transfer is a paid mutator transaction binding the contract method 0xa9059cbb.
//
// Solidity: function transfer(address to, uint256 amount) returns(bool)
func (_Scatterprotocol *ScatterprotocolSession) Transfer(to common.Address, amount *big.Int) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.Transfer(&_Scatterprotocol.TransactOpts, to, amount)
}

// Transfer is a paid mutator transaction binding the contract method 0xa9059cbb.
//
// Solidity: function transfer(address to, uint256 amount) returns(bool)
func (_Scatterprotocol *ScatterprotocolTransactorSession) Transfer(to common.Address, amount *big.Int) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.Transfer(&_Scatterprotocol.TransactOpts, to, amount)
}

// TransferFrom is a paid mutator transaction binding the contract method 0x23b872dd.
//
// Solidity: function transferFrom(address from, address to, uint256 amount) returns(bool)
func (_Scatterprotocol *ScatterprotocolTransactor) TransferFrom(opts *bind.TransactOpts, from common.Address, to common.Address, amount *big.Int) (*types.Transaction, error) {
	return _Scatterprotocol.contract.Transact(opts, "transferFrom", from, to, amount)
}

// TransferFrom is a paid mutator transaction binding the contract method 0x23b872dd.
//
// Solidity: function transferFrom(address from, address to, uint256 amount) returns(bool)
func (_Scatterprotocol *ScatterprotocolSession) TransferFrom(from common.Address, to common.Address, amount *big.Int) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.TransferFrom(&_Scatterprotocol.TransactOpts, from, to, amount)
}

// TransferFrom is a paid mutator transaction binding the contract method 0x23b872dd.
//
// Solidity: function transferFrom(address from, address to, uint256 amount) returns(bool)
func (_Scatterprotocol *ScatterprotocolTransactorSession) TransferFrom(from common.Address, to common.Address, amount *big.Int) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.TransferFrom(&_Scatterprotocol.TransactOpts, from, to, amount)
}

// ScatterprotocolApprovalIterator is returned from FilterApproval and is used to iterate over the raw logs and unpacked data for Approval events raised by the Scatterprotocol contract.
type ScatterprotocolApprovalIterator struct {
	Event *ScatterprotocolApproval // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ScatterprotocolApprovalIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ScatterprotocolApproval)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ScatterprotocolApproval)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ScatterprotocolApprovalIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ScatterprotocolApprovalIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ScatterprotocolApproval represents a Approval event raised by the Scatterprotocol contract.
type ScatterprotocolApproval struct {
	Owner   common.Address
	Spender common.Address
	Value   *big.Int
	Raw     types.Log // Blockchain specific contextual infos
}

// FilterApproval is a free log retrieval operation binding the contract event 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925.
//
// Solidity: event Approval(address indexed owner, address indexed spender, uint256 value)
func (_Scatterprotocol *ScatterprotocolFilterer) FilterApproval(opts *bind.FilterOpts, owner []common.Address, spender []common.Address) (*ScatterprotocolApprovalIterator, error) {

	var ownerRule []interface{}
	for _, ownerItem := range owner {
		ownerRule = append(ownerRule, ownerItem)
	}
	var spenderRule []interface{}
	for _, spenderItem := range spender {
		spenderRule = append(spenderRule, spenderItem)
	}

	logs, sub, err := _Scatterprotocol.contract.FilterLogs(opts, "Approval", ownerRule, spenderRule)
	if err != nil {
		return nil, err
	}
	return &ScatterprotocolApprovalIterator{contract: _Scatterprotocol.contract, event: "Approval", logs: logs, sub: sub}, nil
}

// WatchApproval is a free log subscription operation binding the contract event 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925.
//
// Solidity: event Approval(address indexed owner, address indexed spender, uint256 value)
func (_Scatterprotocol *ScatterprotocolFilterer) WatchApproval(opts *bind.WatchOpts, sink chan<- *ScatterprotocolApproval, owner []common.Address, spender []common.Address) (event.Subscription, error) {

	var ownerRule []interface{}
	for _, ownerItem := range owner {
		ownerRule = append(ownerRule, ownerItem)
	}
	var spenderRule []interface{}
	for _, spenderItem := range spender {
		spenderRule = append(spenderRule, spenderItem)
	}

	logs, sub, err := _Scatterprotocol.contract.WatchLogs(opts, "Approval", ownerRule, spenderRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ScatterprotocolApproval)
				if err := _Scatterprotocol.contract.UnpackLog(event, "Approval", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseApproval is a log parse operation binding the contract event 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925.
//
// Solidity: event Approval(address indexed owner, address indexed spender, uint256 value)
func (_Scatterprotocol *ScatterprotocolFilterer) ParseApproval(log types.Log) (*ScatterprotocolApproval, error) {
	event := new(ScatterprotocolApproval)
	if err := _Scatterprotocol.contract.UnpackLog(event, "Approval", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ScatterprotocolTrainingInitializedIterator is returned from FilterTrainingInitialized and is used to iterate over the raw logs and unpacked data for TrainingInitialized events raised by the Scatterprotocol contract.
type ScatterprotocolTrainingInitializedIterator struct {
	Event *ScatterprotocolTrainingInitialized // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ScatterprotocolTrainingInitializedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ScatterprotocolTrainingInitialized)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ScatterprotocolTrainingInitialized)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ScatterprotocolTrainingInitializedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ScatterprotocolTrainingInitializedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ScatterprotocolTrainingInitialized represents a TrainingInitialized event raised by the Scatterprotocol contract.
type ScatterprotocolTrainingInitialized struct {
	Requestor common.Address
	TopicName string
	Raw       types.Log // Blockchain specific contextual infos
}

// FilterTrainingInitialized is a free log retrieval operation binding the contract event 0xccf83a8b6b0e84145342e27b95fb2db4f9485912b03ae9e14666580c72ef2b3d.
//
// Solidity: event TrainingInitialized(address requestor, string topicName)
func (_Scatterprotocol *ScatterprotocolFilterer) FilterTrainingInitialized(opts *bind.FilterOpts) (*ScatterprotocolTrainingInitializedIterator, error) {

	logs, sub, err := _Scatterprotocol.contract.FilterLogs(opts, "TrainingInitialized")
	if err != nil {
		return nil, err
	}
	return &ScatterprotocolTrainingInitializedIterator{contract: _Scatterprotocol.contract, event: "TrainingInitialized", logs: logs, sub: sub}, nil
}

// WatchTrainingInitialized is a free log subscription operation binding the contract event 0xccf83a8b6b0e84145342e27b95fb2db4f9485912b03ae9e14666580c72ef2b3d.
//
// Solidity: event TrainingInitialized(address requestor, string topicName)
func (_Scatterprotocol *ScatterprotocolFilterer) WatchTrainingInitialized(opts *bind.WatchOpts, sink chan<- *ScatterprotocolTrainingInitialized) (event.Subscription, error) {

	logs, sub, err := _Scatterprotocol.contract.WatchLogs(opts, "TrainingInitialized")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ScatterprotocolTrainingInitialized)
				if err := _Scatterprotocol.contract.UnpackLog(event, "TrainingInitialized", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseTrainingInitialized is a log parse operation binding the contract event 0xccf83a8b6b0e84145342e27b95fb2db4f9485912b03ae9e14666580c72ef2b3d.
//
// Solidity: event TrainingInitialized(address requestor, string topicName)
func (_Scatterprotocol *ScatterprotocolFilterer) ParseTrainingInitialized(log types.Log) (*ScatterprotocolTrainingInitialized, error) {
	event := new(ScatterprotocolTrainingInitialized)
	if err := _Scatterprotocol.contract.UnpackLog(event, "TrainingInitialized", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ScatterprotocolTransferIterator is returned from FilterTransfer and is used to iterate over the raw logs and unpacked data for Transfer events raised by the Scatterprotocol contract.
type ScatterprotocolTransferIterator struct {
	Event *ScatterprotocolTransfer // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ScatterprotocolTransferIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ScatterprotocolTransfer)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ScatterprotocolTransfer)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ScatterprotocolTransferIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ScatterprotocolTransferIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ScatterprotocolTransfer represents a Transfer event raised by the Scatterprotocol contract.
type ScatterprotocolTransfer struct {
	From  common.Address
	To    common.Address
	Value *big.Int
	Raw   types.Log // Blockchain specific contextual infos
}

// FilterTransfer is a free log retrieval operation binding the contract event 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef.
//
// Solidity: event Transfer(address indexed from, address indexed to, uint256 value)
func (_Scatterprotocol *ScatterprotocolFilterer) FilterTransfer(opts *bind.FilterOpts, from []common.Address, to []common.Address) (*ScatterprotocolTransferIterator, error) {

	var fromRule []interface{}
	for _, fromItem := range from {
		fromRule = append(fromRule, fromItem)
	}
	var toRule []interface{}
	for _, toItem := range to {
		toRule = append(toRule, toItem)
	}

	logs, sub, err := _Scatterprotocol.contract.FilterLogs(opts, "Transfer", fromRule, toRule)
	if err != nil {
		return nil, err
	}
	return &ScatterprotocolTransferIterator{contract: _Scatterprotocol.contract, event: "Transfer", logs: logs, sub: sub}, nil
}

// WatchTransfer is a free log subscription operation binding the contract event 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef.
//
// Solidity: event Transfer(address indexed from, address indexed to, uint256 value)
func (_Scatterprotocol *ScatterprotocolFilterer) WatchTransfer(opts *bind.WatchOpts, sink chan<- *ScatterprotocolTransfer, from []common.Address, to []common.Address) (event.Subscription, error) {

	var fromRule []interface{}
	for _, fromItem := range from {
		fromRule = append(fromRule, fromItem)
	}
	var toRule []interface{}
	for _, toItem := range to {
		toRule = append(toRule, toItem)
	}

	logs, sub, err := _Scatterprotocol.contract.WatchLogs(opts, "Transfer", fromRule, toRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ScatterprotocolTransfer)
				if err := _Scatterprotocol.contract.UnpackLog(event, "Transfer", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseTransfer is a log parse operation binding the contract event 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef.
//
// Solidity: event Transfer(address indexed from, address indexed to, uint256 value)
func (_Scatterprotocol *ScatterprotocolFilterer) ParseTransfer(log types.Log) (*ScatterprotocolTransfer, error) {
	event := new(ScatterprotocolTransfer)
	if err := _Scatterprotocol.contract.UnpackLog(event, "Transfer", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}
