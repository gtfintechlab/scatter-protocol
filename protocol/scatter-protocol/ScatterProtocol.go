// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package scatterprotocol

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// ScatterprotocolMetaData contains all meta data concerning the Scatterprotocol contract.
var ScatterprotocolMetaData = &bind.MetaData{
	ABI: "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"trainingTokenContractAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"evaluationTokenContractAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"scatterTokenContractAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"modelTokenContractAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"name\":\"DebugEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"requestor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"topicName\",\"type\":\"string\"}],\"name\":\"ModelReadyToValidate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"requestor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"topicName\",\"type\":\"string\"}],\"name\":\"RequestForEvaluationSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"requestor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"topicName\",\"type\":\"string\"}],\"name\":\"TrainingInitialized\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToNodeId\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToRoles\",\"outputs\":[{\"internalType\":\"enumroles\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"addressToTopics\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"addressToTrainingJobInfo\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"trainingJobCid\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"pooledReward\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"evaluationJobCid\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nodeAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"topicName\",\"type\":\"string\"}],\"name\":\"checkIfTopicExistsForRequestor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"destroy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"evaluationJobContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addressToView\",\"type\":\"address\"}],\"name\":\"getEnumRoleByAddress\",\"outputs\":[{\"internalType\":\"enumroles\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"skip\",\"type\":\"int256\"}],\"name\":\"getRequestorAddresses\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addressToFind\",\"type\":\"address\"}],\"name\":\"getRoleByAddress\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"requestorAddress\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"skip\",\"type\":\"int256\"}],\"name\":\"getTopicsByRequestorAddress\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"requestorAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"topicName\",\"type\":\"string\"},{\"internalType\":\"int256\",\"name\":\"skip\",\"type\":\"int256\"}],\"name\":\"getTrainersByAddressAndTopic\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initModelValidator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initRequestorNode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initTrainerNode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"modelLogger\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"modelTokenContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"networkRequestors\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"networkTrainers\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"networkValidators\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"addresspayable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"modelURI\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"requestorAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"topicName\",\"type\":\"string\"}],\"name\":\"publishModelToProtocol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"tokenURI\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"topicName\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"pooledReward\",\"type\":\"uint256\"}],\"name\":\"requestorAddTopic\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"scatterTokenContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"setEvaluationJobContractAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"nodeId\",\"type\":\"string\"}],\"name\":\"setNodeId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addressToUpdate\",\"type\":\"address\"},{\"internalType\":\"enumroles\",\"name\":\"newRole\",\"type\":\"uint8\"}],\"name\":\"setRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"setScatterTokenContractAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"setTrainingJobContractAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"topicName\",\"type\":\"string\"}],\"name\":\"startTraining\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"topicName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"evaluationSetURI\",\"type\":\"string\"}],\"name\":\"submitEvaluationSet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"requestorAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"requestorTopic\",\"type\":\"string\"}],\"name\":\"trainerAddTopic\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"trainerTrainingMap\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"trainingJobContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"validatorTrainingMap\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]",
	Bin: "0x6080604052600160145560646015553480156200001b57600080fd5b5060405162004f8f38038062004f8f8339818101604052810190620000419190620001f9565b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555083600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050506200026b565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001c18262000194565b9050919050565b620001d381620001b4565b8114620001df57600080fd5b50565b600081519050620001f381620001c8565b92915050565b600080600080608085870312156200021657620002156200018f565b5b60006200022687828801620001e2565b94505060206200023987828801620001e2565b93505060406200024c87828801620001e2565b92505060606200025f87828801620001e2565b91505092959194509250565b614d14806200027b6000396000f3fe608060405234801561001057600080fd5b50600436106102115760003560e01c80637bff77d411610125578063b3f5b280116100ad578063cb30bfc31161007c578063cb30bfc314610636578063cff06d3914610640578063d8ecebed1461065e578063ef36d16a1461068e578063f629ad71146106be57610211565b8063b3f5b2801461059a578063b4efe15f146105b8578063c0a4371c146105e8578063c0d241ed1461060457610211565b80638da5cb5b116100f45780638da5cb5b146104e45780639294be1214610502578063a765d0521461051e578063a9de0ae91461054e578063aa711be61461056a57610211565b80637bff77d4146104725780637d9011ec146104a25780638017c3e1146104be57806383197ef0146104da57610211565b80634be0be0d116101a85780635c11037e116101775780635c11037e146103bc578063624c45ea146103ec5780636408602d1461041c57806367fa5840146104385780636949f9071461046857610211565b80634be0be0d14610336578063571c3e6014610366578063594de850146103825780635aff6e77146103a057610211565b8063153a7b36116101e4578063153a7b361461029c578063300c7315146102cc57806335b40e60146102e8578063467477411461031857610211565b8063039e09b11461021657806304aa1397146102325780630b680f76146102625780630d3fa27814610292575b600080fd5b610230600480360381019061022b9190613569565b6106ee565b005b61024c60048036038101906102479190613712565b6107c0565b6040516102599190613800565b60405180910390f35b61027c60048036038101906102779190613822565b6109b9565b60405161028991906138ac565b60405180910390f35b61029a610a0b565b005b6102b660048036038101906102b19190613569565b610b74565b6040516102c3919061393e565b60405180910390f35b6102e660048036038101906102e19190613959565b610c5a565b005b61030260048036038101906102fd91906139a2565b610f36565b60405161030f91906138ac565b60405180910390f35b610320610fad565b60405161032d9190613a0d565b60405180910390f35b610350600480360381019061034b9190613a5e565b610fd3565b60405161035d9190613a0d565b60405180910390f35b610380600480360381019061037b9190613ab0565b611012565b005b61038a61110d565b6040516103979190613a0d565b60405180910390f35b6103ba60048036038101906103b59190613569565b611133565b005b6103d660048036038101906103d19190613822565b611205565b6040516103e39190613800565b60405180910390f35b61040660048036038101906104019190613af0565b6112d5565b6040516104139190613800565b60405180910390f35b610436600480360381019061043191906139a2565b61138e565b005b610452600480360381019061044d9190613822565b61166d565b60405161045f91906138ac565b60405180910390f35b6104706116bf565b005b61048c60048036038101906104879190613569565b611750565b6040516104999190613800565b60405180910390f35b6104bc60048036038101906104b79190613959565b611a63565b005b6104d860048036038101906104d39190613b30565b611ab3565b005b6104e2611c9e565b005b6104ec611d65565b6040516104f99190613bc9565b60405180910390f35b61051c60048036038101906105179190613be4565b611d89565b005b61053860048036038101906105339190613a5e565b6121b1565b6040516105459190613a0d565b60405180910390f35b61056860048036038101906105639190613569565b6121f0565b005b610584600480360381019061057f9190613a5e565b6122c2565b6040516105919190613a0d565b60405180910390f35b6105a2612301565b6040516105af9190613a0d565b60405180910390f35b6105d260048036038101906105cd9190613c6f565b612327565b6040516105df9190613800565b60405180910390f35b61060260048036038101906105fd9190613c9c565b612442565b005b61061e600480360381019061061991906139a2565b6127c1565b60405161062d93929190613d36565b60405180910390f35b61063e61291e565b005b6106486129af565b6040516106559190613a0d565b60405180910390f35b61067860048036038101906106739190613d7b565b6129d5565b6040516106859190613800565b60405180910390f35b6106a860048036038101906106a39190613569565b612b67565b6040516106b59190613800565b60405180910390f35b6106d860048036038101906106d39190613569565b612c07565b6040516106e5919061393e565b60405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461077c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077390613e2d565b60405180910390fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b606060006040518060200160405280600081525090506000600860008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020856040516108259190613e89565b908152602001604051809103902090506000600a856108449190613ecf565b82600101805490501261086357600a8561085e9190613ecf565b61086c565b81600101805490505b905060008590505b818112156109ab57600073ffffffffffffffffffffffffffffffffffffffff168360010182815481106108aa576108a9613f13565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160315610998578361095384600101838154811061090b5761090a613f13565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166014612c27565b604051602001610964929190613f42565b6040516020818303038152906040529350836040516020016109869190613f8c565b60405160208183030381529060405293505b80806109a390613fb2565b915050610874565b508293505050509392505050565b601260205282600052604060002082805160208101820180518482526020830160208501208183528095505050505050602052806000526040600020600092509250509054906101000a900460ff1681565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639693845f6040518163ffffffff1660e01b81526004016020604051808303816000875af1158015610a7c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aa09190614026565b905080610ae2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ad9906140c5565b60405180910390fd5b610aef600b600a33612e63565b610afc600d600c33612e63565b6003600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690836004811115610b5f57610b5e6138c7565b5b0217905550610b71600f600e33613047565b50565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610c06576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bfd90614157565b60405180910390fd5b600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b60016004811115610c6e57610c6d6138c7565b5b600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166004811115610ccd57610ccc6138c7565b5b14610d0d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d049061420f565b60405180910390fd5b610d173382610f36565b610d56576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d4d906142c7565b60405180910390fd5b60006064601554600f80549050610d6d91906142e7565b610d779190614358565b90506000610e0b600f805480602002602001604051908101604052809291908181526020018280548015610e0057602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610db6575b50505050508361313c565b905060005b8151811015610ef7576001601260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002085604051610e689190613e89565b90815260200160405180910390206000848481518110610e8b57610e8a613f13565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508080610eef90614389565b915050610e10565b507fccf83a8b6b0e84145342e27b95fb2db4f9485912b03ae9e14666580c72ef2b3d3384604051610f299291906143d1565b60405180910390a1505050565b600080600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002083604051610f869190613e89565b90815260200160405180910390206000018054610fa290614430565b905011905092915050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600f8181548110610fe357600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146110a2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161109990614157565b60405180910390fd5b80600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690836004811115611104576111036138c7565b5b02179055505050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146111c1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111b890613e2d565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6013602052826000526040600020828051602081018201805184825260208301602085012081835280955050505050506020528060005260406000206000925092505050805461125490614430565b80601f016020809104026020016040519081016040528092919081815260200182805461128090614430565b80156112cd5780601f106112a2576101008083540402835291602001916112cd565b820191906000526020600020905b8154815290600101906020018083116112b057829003601f168201915b505050505081565b600960205281600052604060002081815481106112f157600080fd5b9060005260206000200160009150915050805461130d90614430565b80601f016020809104026020016040519081016040528092919081815260200182805461133990614430565b80156113865780601f1061135b57610100808354040283529160200191611386565b820191906000526020600020905b81548152906001019060200180831161136957829003601f168201915b505050505081565b600260048111156113a2576113a16138c7565b5b600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166004811115611401576114006138c7565b5b14611441576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611438906144f9565b60405180910390fd5b6000601160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020826040516114909190613e89565b908152602001604051809103902060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905080156114f75750611669565b600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020826040516115449190613e89565b9081526020016040518091039020600101339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001601160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020836040516116059190613e89565b908152602001604051809103902060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550505b5050565b601160205282600052604060002082805160208101820180518482526020830160208501208183528095505050505050602052806000526040600020600092509250509054906101000a900460ff1681565b6116cc600f600e33612e63565b6116d9600b600a33612e63565b6002600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083600481111561173c5761173b6138c7565b5b021790555061174e600d600c33613047565b565b606060016004811115611766576117656138c7565b5b600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1660048111156117c5576117c46138c7565b5b03611807576040518060400160405280600981526020017f726571756573746f7200000000000000000000000000000000000000000000008152509050611a5e565b6002600481111561181b5761181a6138c7565b5b600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16600481111561187a576118796138c7565b5b036118bc576040518060400160405280600781526020017f747261696e6572000000000000000000000000000000000000000000000000008152509050611a5e565b600360048111156118d0576118cf6138c7565b5b600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16600481111561192f5761192e6138c7565b5b03611971576040518060400160405280600981526020017f76616c696461746f7200000000000000000000000000000000000000000000008152509050611a5e565b600480811115611984576119836138c7565b5b600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1660048111156119e3576119e26138c7565b5b03611a25576040518060400160405280600981526020017f6368616c6c656e676500000000000000000000000000000000000000000000008152509050611a5e565b6040518060400160405280600781526020017f6e6f20726f6c650000000000000000000000000000000000000000000000000081525090505b919050565b80601060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209081611aaf91906146c5565b5050565b60016004811115611ac757611ac66138c7565b5b600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166004811115611b2657611b256138c7565b5b14611b66576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b5d9061420f565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166349db9dc333836040518363ffffffff1660e01b8152600401611bc39291906143d1565b600060405180830381600087803b158015611bdd57600080fd5b505af1158015611bf1573d6000803e3d6000fd5b5050505080600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002083604051611c439190613e89565b90815260200160405180910390206003019081611c6091906146c5565b507f81ebde127b98dac35c03a4eec2d7d67042cbb737d00846b2cb0fa3f4e33f159a3383604051611c929291906143d1565b60405180910390a15050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611d2c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d2390613e2d565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60026004811115611d9d57611d9c6138c7565b5b600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166004811115611dfc57611dfb6138c7565b5b14611e3c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e33906144f9565b60405180910390fd5b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663178632ee84336040518363ffffffff1660e01b8152600401611e99929190614797565b600060405180830381600087803b158015611eb357600080fd5b505af1158015611ec7573d6000803e3d6000fd5b5050505082601360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082604051611f199190613e89565b908152602001604051809103902060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209081611f7091906146c5565b506000600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082604051611fc09190613e89565b908152602001604051809103902060010180548060200260200160405190810160405280929190818152602001828054801561205157602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311612007575b50505050509050600081510361206757506121ac565b60005b8151811015612170576040518060200160405280600081525080519060200120601360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020846040516120d79190613e89565b908152602001604051809103902060008484815181106120fa576120f9613f13565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051612149919061486a565b60405180910390200361215d5750506121ac565b808061216890614389565b91505061206a565b507ff7e2a6109d1c061bfecbea32c29709ab398588a2d2ad965c461d536d086e14e083836040516121a29291906143d1565b60405180910390a1505b505050565b600b81815481106121c157600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461227e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161227590613e2d565b60405180910390fd5b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600d81815481106122d257600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b606060006040518060200160405280600081525090506000600a8461234c9190613ecf565b600b805490501261236957600a846123649190613ecf565b612370565b600b805490505b905060008490505b8181121561243757826123e0600b838154811061239857612397613f13565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166014612c27565b6040516020016123f1929190613f42565b6040516020818303038152906040529250826040516020016124139190613f8c565b6040516020818303038152906040529250808061242f90613fb2565b915050612378565b508192505050919050565b60016004811115612456576124556138c7565b5b600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1660048111156124b5576124b46138c7565b5b146124f5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016124ec9061420f565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636838a4f684336040518363ffffffff1660e01b8152600401612552929190614797565b600060405180830381600087803b15801561256c57600080fd5b505af1158015612580573d6000803e3d6000fd5b5050505060008067ffffffffffffffff8111156125a05761259f6135b1565b5b6040519080825280602002602001820160405280156125ce5781602001602082028036833780820191505090505b5090506000604051806080016040528086815260200183815260200184815260200160405180602001604052806000815250815250905080600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020856040516126539190613e89565b9081526020016040518091039020600082015181600001908161267691906146c5565b506020820151816001019080519060200190612693929190613450565b506040820151816002015560608201518160030190816126b391906146c5565b50905050600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208490806001815401808255809150506001900390600052602060002001600090919091909150908161272891906146c5565b50600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342a0f9bf3386866040518463ffffffff1660e01b815260040161278893929190614881565b600060405180830381600087803b1580156127a257600080fd5b505af11580156127b6573d6000803e3d6000fd5b505050505050505050565b6008602052816000526040600020818051602081018201805184825260208301602085012081835280955050505050506000915091505080600001805461280790614430565b80601f016020809104026020016040519081016040528092919081815260200182805461283390614430565b80156128805780601f1061285557610100808354040283529160200191612880565b820191906000526020600020905b81548152906001019060200180831161286357829003601f168201915b50505050509080600201549080600301805461289b90614430565b80601f01602080910402602001604051908101604052809291908181526020018280546128c790614430565b80156129145780601f106128e957610100808354040283529160200191612914565b820191906000526020600020905b8154815290600101906020018083116128f757829003601f168201915b5050505050905083565b61292b600d600c33612e63565b612938600f600e33612e63565b6001600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083600481111561299b5761299a6138c7565b5b02179055506129ad600b600a33613047565b565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b606060006040518060200160405280600081525090506000600a846129fa9190613ecf565b600960008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905012612a5457600a84612a4f9190613ecf565b612a98565b600960008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490505b905060008490505b81811215612b5b5782600960008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110612afa57612af9613f13565b5b90600052602060002001604051602001612b15929190614942565b604051602081830303815290604052925082604051602001612b379190613f8c565b60405160208183030381529060405292508080612b5390613fb2565b915050612aa0565b50819250505092915050565b60106020528060005260406000206000915090508054612b8690614430565b80601f0160208091040260200160405190810160405280929190818152602001828054612bb290614430565b8015612bff5780601f10612bd457610100808354040283529160200191612bff565b820191906000526020600020905b815481529060010190602001808311612be257829003601f168201915b505050505081565b60076020528060005260406000206000915054906101000a900460ff1681565b606060006002836002612c3a91906142e7565b612c449190614966565b67ffffffffffffffff811115612c5d57612c5c6135b1565b5b6040519080825280601f01601f191660200182016040528015612c8f5781602001600182028036833780820191505090505b5090507f300000000000000000000000000000000000000000000000000000000000000081600081518110612cc757612cc6613f13565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f780000000000000000000000000000000000000000000000000000000000000081600181518110612d2b57612d2a613f13565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060006001846002612d6b91906142e7565b612d759190614966565b90505b6001811115612e15577f3031323334353637383961626364656600000000000000000000000000000000600f861660108110612db757612db6613f13565b5b1a60f81b828281518110612dce57612dcd613f13565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600485901c945080612e0e9061499a565b9050612d78565b5060008414612e59576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612e5090614a0f565b60405180910390fd5b8091505092915050565b60008260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060008103612eb45750613042565b6000600182612ec39190614a2f565b905060008560018780549050612ed99190614a2f565b81548110612eea57612ee9613f13565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905080868381548110612f2b57612f2a613f13565b5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550828560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555085805480612fc757612fc6614a63565b5b6001900381819060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905590558460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600090555050505b505050565b60008260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054036131375782819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082805490508260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b505050565b60606000821361319757600067ffffffffffffffff811115613161576131606135b1565b5b60405190808252806020026020018201604052801561318f5781602001602082028036833780820191505090505b5090506132c2565b82518211156131db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016131d290614b04565b60405180910390fd5b60006131e6846132c8565b905060008367ffffffffffffffff811115613204576132036135b1565b5b6040519080825280602002602001820160405280156132325781602001602082028036833780820191505090505b50905060005b848110156132bb5782818151811061325357613252613f13565b5b602002602001015182828151811061326e5761326d613f13565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505080806132b390614389565b915050613238565b5080925050505b92915050565b6060600082905060008151905060006001826132e49190614a2f565b90505b60008111156133f35760006001826132ff9190614966565b6133076133fe565b6133119190614b24565b905083818151811061332657613325613f13565b5b602002602001015184838151811061334157613340613f13565b5b602002602001015185848151811061335c5761335b613f13565b5b6020026020010186848151811061337657613375613f13565b5b602002602001018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152508273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050505080806133eb9061499a565b9150506132e7565b508192505050919050565b60006014600081548092919061341390614389565b91905055504442600f6014546040516020016134329493929190614c94565b6040516020818303038152906040528051906020012060001c905090565b8280548282559060005260206000209081019282156134c9579160200282015b828111156134c85782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190613470565b5b5090506134d691906134da565b5090565b5b808211156134f35760008160009055506001016134db565b5090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006135368261350b565b9050919050565b6135468161352b565b811461355157600080fd5b50565b6000813590506135638161353d565b92915050565b60006020828403121561357f5761357e613501565b5b600061358d84828501613554565b91505092915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6135e9826135a0565b810181811067ffffffffffffffff82111715613608576136076135b1565b5b80604052505050565b600061361b6134f7565b905061362782826135e0565b919050565b600067ffffffffffffffff821115613647576136466135b1565b5b613650826135a0565b9050602081019050919050565b82818337600083830152505050565b600061367f61367a8461362c565b613611565b90508281526020810184848401111561369b5761369a61359b565b5b6136a684828561365d565b509392505050565b600082601f8301126136c3576136c2613596565b5b81356136d384826020860161366c565b91505092915050565b6000819050919050565b6136ef816136dc565b81146136fa57600080fd5b50565b60008135905061370c816136e6565b92915050565b60008060006060848603121561372b5761372a613501565b5b600061373986828701613554565b935050602084013567ffffffffffffffff81111561375a57613759613506565b5b613766868287016136ae565b9250506040613777868287016136fd565b9150509250925092565b600081519050919050565b600082825260208201905092915050565b60005b838110156137bb5780820151818401526020810190506137a0565b60008484015250505050565b60006137d282613781565b6137dc818561378c565b93506137ec81856020860161379d565b6137f5816135a0565b840191505092915050565b6000602082019050818103600083015261381a81846137c7565b905092915050565b60008060006060848603121561383b5761383a613501565b5b600061384986828701613554565b935050602084013567ffffffffffffffff81111561386a57613869613506565b5b613876868287016136ae565b925050604061388786828701613554565b9150509250925092565b60008115159050919050565b6138a681613891565b82525050565b60006020820190506138c1600083018461389d565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60058110613907576139066138c7565b5b50565b6000819050613918826138f6565b919050565b60006139288261390a565b9050919050565b6139388161391d565b82525050565b6000602082019050613953600083018461392f565b92915050565b60006020828403121561396f5761396e613501565b5b600082013567ffffffffffffffff81111561398d5761398c613506565b5b613999848285016136ae565b91505092915050565b600080604083850312156139b9576139b8613501565b5b60006139c785828601613554565b925050602083013567ffffffffffffffff8111156139e8576139e7613506565b5b6139f4858286016136ae565b9150509250929050565b613a078161352b565b82525050565b6000602082019050613a2260008301846139fe565b92915050565b6000819050919050565b613a3b81613a28565b8114613a4657600080fd5b50565b600081359050613a5881613a32565b92915050565b600060208284031215613a7457613a73613501565b5b6000613a8284828501613a49565b91505092915050565b60058110613a9857600080fd5b50565b600081359050613aaa81613a8b565b92915050565b60008060408385031215613ac757613ac6613501565b5b6000613ad585828601613554565b9250506020613ae685828601613a9b565b9150509250929050565b60008060408385031215613b0757613b06613501565b5b6000613b1585828601613554565b9250506020613b2685828601613a49565b9150509250929050565b60008060408385031215613b4757613b46613501565b5b600083013567ffffffffffffffff811115613b6557613b64613506565b5b613b71858286016136ae565b925050602083013567ffffffffffffffff811115613b9257613b91613506565b5b613b9e858286016136ae565b9150509250929050565b6000613bb38261350b565b9050919050565b613bc381613ba8565b82525050565b6000602082019050613bde6000830184613bba565b92915050565b600080600060608486031215613bfd57613bfc613501565b5b600084013567ffffffffffffffff811115613c1b57613c1a613506565b5b613c27868287016136ae565b9350506020613c3886828701613554565b925050604084013567ffffffffffffffff811115613c5957613c58613506565b5b613c65868287016136ae565b9150509250925092565b600060208284031215613c8557613c84613501565b5b6000613c93848285016136fd565b91505092915050565b600080600060608486031215613cb557613cb4613501565b5b600084013567ffffffffffffffff811115613cd357613cd2613506565b5b613cdf868287016136ae565b935050602084013567ffffffffffffffff811115613d0057613cff613506565b5b613d0c868287016136ae565b9250506040613d1d86828701613a49565b9150509250925092565b613d3081613a28565b82525050565b60006060820190508181036000830152613d5081866137c7565b9050613d5f6020830185613d27565b8181036040830152613d7181846137c7565b9050949350505050565b60008060408385031215613d9257613d91613501565b5b6000613da085828601613554565b9250506020613db1858286016136fd565b9150509250929050565b7f4f6e6c7920746865206f776e65722063616e2063616c6c20746869732066756e60008201527f6374696f6e000000000000000000000000000000000000000000000000000000602082015250565b6000613e1760258361378c565b9150613e2282613dbb565b604082019050919050565b60006020820190508181036000830152613e4681613e0a565b9050919050565b600081905092915050565b6000613e6382613781565b613e6d8185613e4d565b9350613e7d81856020860161379d565b80840191505092915050565b6000613e958284613e58565b915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000613eda826136dc565b9150613ee5836136dc565b925082820190508281121560008312168382126000841215161715613f0d57613f0c613ea0565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000613f4e8285613e58565b9150613f5a8284613e58565b91508190509392505050565b7f0a00000000000000000000000000000000000000000000000000000000000000815250565b6000613f988284613e58565b9150613fa382613f66565b60018201915081905092915050565b6000613fbd826136dc565b91507f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203613fef57613fee613ea0565b5b600182019050919050565b61400381613891565b811461400e57600080fd5b50565b60008151905061402081613ffa565b92915050565b60006020828403121561403c5761403b613501565b5b600061404a84828501614011565b91505092915050565b7f596f7572206e6f6465206973206e6f7420656c696769626c6520746f2062656360008201527f6f6d652061206d6f64656c2076616c696461746f720000000000000000000000602082015250565b60006140af60358361378c565b91506140ba82614053565b604082019050919050565b600060208201905081810360008301526140de816140a2565b9050919050565b7f54686973206d6574686f642063616e206f6e6c792062652063616c6c6564206260008201527f7920746865207363617474657220746f6b656e20636f6e747261637400000000602082015250565b6000614141603c8361378c565b915061414c826140e5565b604082019050919050565b6000602082019050818103600083015261417081614134565b9050919050565b7f596f75206d757374206368616e676520796f7572206e6f6465277320726f6c6560008201527f20746f20726571756573746f72206265666f72652063616c6c696e672074686960208201527f73206d6574686f64000000000000000000000000000000000000000000000000604082015250565b60006141f960488361378c565b915061420482614177565b606082019050919050565b60006020820190508181036000830152614228816141ec565b9050919050565b7f5468697320746f70696320686173206e6f74206265656e20616464656420616e60008201527f64207468657265666f72652063616e6e6f74207374617274206120747261696e60208201527f696e67206a6f6200000000000000000000000000000000000000000000000000604082015250565b60006142b160478361378c565b91506142bc8261422f565b606082019050919050565b600060208201905081810360008301526142e0816142a4565b9050919050565b60006142f282613a28565b91506142fd83613a28565b925082820261430b81613a28565b9150828204841483151761432257614321613ea0565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061436382613a28565b915061436e83613a28565b92508261437e5761437d614329565b5b828204905092915050565b600061439482613a28565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036143c6576143c5613ea0565b5b600182019050919050565b60006040820190506143e660008301856139fe565b81810360208301526143f881846137c7565b90509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061444857607f821691505b60208210810361445b5761445a614401565b5b50919050565b7f596f75206d757374206368616e676520796f7572206e6f6465277320726f6c6560008201527f20746f20747261696e6572206265666f72652063616c6c696e6720746869732060208201527f6d6574686f640000000000000000000000000000000000000000000000000000604082015250565b60006144e360468361378c565b91506144ee82614461565b606082019050919050565b60006020820190508181036000830152614512816144d6565b9050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830261457b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261453e565b614585868361453e565b95508019841693508086168417925050509392505050565b6000819050919050565b60006145c26145bd6145b884613a28565b61459d565b613a28565b9050919050565b6000819050919050565b6145dc836145a7565b6145f06145e8826145c9565b84845461454b565b825550505050565b600090565b6146056145f8565b6146108184846145d3565b505050565b5b81811015614634576146296000826145fd565b600181019050614616565b5050565b601f8211156146795761464a81614519565b6146538461452e565b81016020851015614662578190505b61467661466e8561452e565b830182614615565b50505b505050565b600082821c905092915050565b600061469c6000198460080261467e565b1980831691505092915050565b60006146b5838361468b565b9150826002028217905092915050565b6146ce82613781565b67ffffffffffffffff8111156146e7576146e66135b1565b5b6146f18254614430565b6146fc828285614638565b600060209050601f83116001811461472f576000841561471d578287015190505b61472785826146a9565b86555061478f565b601f19841661473d86614519565b60005b8281101561476557848901518255600182019150602085019450602081019050614740565b86831015614782578489015161477e601f89168261468b565b8355505b6001600288020188555050505b505050505050565b600060408201905081810360008301526147b181856137c7565b90506147c060208301846139fe565b9392505050565b600081905092915050565b60008190508160005260206000209050919050565b600081546147f481614430565b6147fe81866147c7565b94506001821660008114614819576001811461482e57614861565b60ff1983168652811515820286019350614861565b614837856147d2565b60005b838110156148595781548189015260018201915060208101905061483a565b838801955050505b50505092915050565b600061487682846147e7565b915081905092915050565b600060608201905061489660008301866139fe565b81810360208301526148a881856137c7565b90506148b76040830184613d27565b949350505050565b600081546148cc81614430565b6148d68186613e4d565b945060018216600081146148f1576001811461490657614939565b60ff1983168652811515820286019350614939565b61490f85614519565b60005b8381101561493157815481890152600182019150602081019050614912565b838801955050505b50505092915050565b600061494e8285613e58565b915061495a82846148bf565b91508190509392505050565b600061497182613a28565b915061497c83613a28565b925082820190508082111561499457614993613ea0565b5b92915050565b60006149a582613a28565b9150600082036149b8576149b7613ea0565b5b600182039050919050565b7f537472696e67733a20686578206c656e67746820696e73756666696369656e74600082015250565b60006149f960208361378c565b9150614a04826149c3565b602082019050919050565b60006020820190508181036000830152614a28816149ec565b9050919050565b6000614a3a82613a28565b9150614a4583613a28565b9250828203905081811115614a5d57614a5c613ea0565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b7f436f756e742073686f756c64206265206c657373207468616e206f722065717560008201527f616c20746f206172726179206c656e6774680000000000000000000000000000602082015250565b6000614aee60328361378c565b9150614af982614a92565b604082019050919050565b60006020820190508181036000830152614b1d81614ae1565b9050919050565b6000614b2f82613a28565b9150614b3a83613a28565b925082614b4a57614b49614329565b5b828206905092915050565b6000819050919050565b614b70614b6b82613a28565b614b55565b82525050565b600081549050919050565b600081905092915050565b60008190508160005260206000209050919050565b614baa8161352b565b82525050565b6000614bbc8383614ba1565b60208301905092915050565b60008160001c9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000614c08614c0383614bc8565b614bd5565b9050919050565b6000614c1b8254614bf5565b9050919050565b6000600182019050919050565b6000614c3a82614b76565b614c448185614b81565b9350614c4f83614b8c565b8060005b83811015614c8757614c6482614c0f565b614c6e8882614bb0565b9750614c7983614c22565b925050600181019050614c53565b5085935050505092915050565b6000614ca08287614b5f565b602082019150614cb08286614b5f565b602082019150614cc08285614c2f565b9150614ccc8284614b5f565b6020820191508190509594505050505056fea264697066735822122072db856e1be87ba84d2dd7df29ad04cdbfc596ec4d8a1ba716d841f90b94886b64736f6c63430008110033",
}

// ScatterprotocolABI is the input ABI used to generate the binding from.
// Deprecated: Use ScatterprotocolMetaData.ABI instead.
var ScatterprotocolABI = ScatterprotocolMetaData.ABI

// ScatterprotocolBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use ScatterprotocolMetaData.Bin instead.
var ScatterprotocolBin = ScatterprotocolMetaData.Bin

// DeployScatterprotocol deploys a new Ethereum contract, binding an instance of Scatterprotocol to it.
func DeployScatterprotocol(auth *bind.TransactOpts, backend bind.ContractBackend, trainingTokenContractAddress common.Address, evaluationTokenContractAddress common.Address, scatterTokenContractAddress common.Address, modelTokenContractAddress common.Address) (common.Address, *types.Transaction, *Scatterprotocol, error) {
	parsed, err := ScatterprotocolMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(ScatterprotocolBin), backend, trainingTokenContractAddress, evaluationTokenContractAddress, scatterTokenContractAddress, modelTokenContractAddress)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &Scatterprotocol{ScatterprotocolCaller: ScatterprotocolCaller{contract: contract}, ScatterprotocolTransactor: ScatterprotocolTransactor{contract: contract}, ScatterprotocolFilterer: ScatterprotocolFilterer{contract: contract}}, nil
}

// Scatterprotocol is an auto generated Go binding around an Ethereum contract.
type Scatterprotocol struct {
	ScatterprotocolCaller     // Read-only binding to the contract
	ScatterprotocolTransactor // Write-only binding to the contract
	ScatterprotocolFilterer   // Log filterer for contract events
}

// ScatterprotocolCaller is an auto generated read-only Go binding around an Ethereum contract.
type ScatterprotocolCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ScatterprotocolTransactor is an auto generated write-only Go binding around an Ethereum contract.
type ScatterprotocolTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ScatterprotocolFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type ScatterprotocolFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ScatterprotocolSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type ScatterprotocolSession struct {
	Contract     *Scatterprotocol  // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// ScatterprotocolCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type ScatterprotocolCallerSession struct {
	Contract *ScatterprotocolCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts          // Call options to use throughout this session
}

// ScatterprotocolTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type ScatterprotocolTransactorSession struct {
	Contract     *ScatterprotocolTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts          // Transaction auth options to use throughout this session
}

// ScatterprotocolRaw is an auto generated low-level Go binding around an Ethereum contract.
type ScatterprotocolRaw struct {
	Contract *Scatterprotocol // Generic contract binding to access the raw methods on
}

// ScatterprotocolCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type ScatterprotocolCallerRaw struct {
	Contract *ScatterprotocolCaller // Generic read-only contract binding to access the raw methods on
}

// ScatterprotocolTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type ScatterprotocolTransactorRaw struct {
	Contract *ScatterprotocolTransactor // Generic write-only contract binding to access the raw methods on
}

// NewScatterprotocol creates a new instance of Scatterprotocol, bound to a specific deployed contract.
func NewScatterprotocol(address common.Address, backend bind.ContractBackend) (*Scatterprotocol, error) {
	contract, err := bindScatterprotocol(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &Scatterprotocol{ScatterprotocolCaller: ScatterprotocolCaller{contract: contract}, ScatterprotocolTransactor: ScatterprotocolTransactor{contract: contract}, ScatterprotocolFilterer: ScatterprotocolFilterer{contract: contract}}, nil
}

// NewScatterprotocolCaller creates a new read-only instance of Scatterprotocol, bound to a specific deployed contract.
func NewScatterprotocolCaller(address common.Address, caller bind.ContractCaller) (*ScatterprotocolCaller, error) {
	contract, err := bindScatterprotocol(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &ScatterprotocolCaller{contract: contract}, nil
}

// NewScatterprotocolTransactor creates a new write-only instance of Scatterprotocol, bound to a specific deployed contract.
func NewScatterprotocolTransactor(address common.Address, transactor bind.ContractTransactor) (*ScatterprotocolTransactor, error) {
	contract, err := bindScatterprotocol(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &ScatterprotocolTransactor{contract: contract}, nil
}

// NewScatterprotocolFilterer creates a new log filterer instance of Scatterprotocol, bound to a specific deployed contract.
func NewScatterprotocolFilterer(address common.Address, filterer bind.ContractFilterer) (*ScatterprotocolFilterer, error) {
	contract, err := bindScatterprotocol(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &ScatterprotocolFilterer{contract: contract}, nil
}

// bindScatterprotocol binds a generic wrapper to an already deployed contract.
func bindScatterprotocol(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(ScatterprotocolABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Scatterprotocol *ScatterprotocolRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Scatterprotocol.Contract.ScatterprotocolCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Scatterprotocol *ScatterprotocolRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.ScatterprotocolTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Scatterprotocol *ScatterprotocolRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.ScatterprotocolTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Scatterprotocol *ScatterprotocolCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Scatterprotocol.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Scatterprotocol *ScatterprotocolTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Scatterprotocol *ScatterprotocolTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.contract.Transact(opts, method, params...)
}

// AddressToNodeId is a free data retrieval call binding the contract method 0xef36d16a.
//
// Solidity: function addressToNodeId(address ) view returns(string)
func (_Scatterprotocol *ScatterprotocolCaller) AddressToNodeId(opts *bind.CallOpts, arg0 common.Address) (string, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "addressToNodeId", arg0)

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// AddressToNodeId is a free data retrieval call binding the contract method 0xef36d16a.
//
// Solidity: function addressToNodeId(address ) view returns(string)
func (_Scatterprotocol *ScatterprotocolSession) AddressToNodeId(arg0 common.Address) (string, error) {
	return _Scatterprotocol.Contract.AddressToNodeId(&_Scatterprotocol.CallOpts, arg0)
}

// AddressToNodeId is a free data retrieval call binding the contract method 0xef36d16a.
//
// Solidity: function addressToNodeId(address ) view returns(string)
func (_Scatterprotocol *ScatterprotocolCallerSession) AddressToNodeId(arg0 common.Address) (string, error) {
	return _Scatterprotocol.Contract.AddressToNodeId(&_Scatterprotocol.CallOpts, arg0)
}

// AddressToRoles is a free data retrieval call binding the contract method 0xf629ad71.
//
// Solidity: function addressToRoles(address ) view returns(uint8)
func (_Scatterprotocol *ScatterprotocolCaller) AddressToRoles(opts *bind.CallOpts, arg0 common.Address) (uint8, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "addressToRoles", arg0)

	if err != nil {
		return *new(uint8), err
	}

	out0 := *abi.ConvertType(out[0], new(uint8)).(*uint8)

	return out0, err

}

// AddressToRoles is a free data retrieval call binding the contract method 0xf629ad71.
//
// Solidity: function addressToRoles(address ) view returns(uint8)
func (_Scatterprotocol *ScatterprotocolSession) AddressToRoles(arg0 common.Address) (uint8, error) {
	return _Scatterprotocol.Contract.AddressToRoles(&_Scatterprotocol.CallOpts, arg0)
}

// AddressToRoles is a free data retrieval call binding the contract method 0xf629ad71.
//
// Solidity: function addressToRoles(address ) view returns(uint8)
func (_Scatterprotocol *ScatterprotocolCallerSession) AddressToRoles(arg0 common.Address) (uint8, error) {
	return _Scatterprotocol.Contract.AddressToRoles(&_Scatterprotocol.CallOpts, arg0)
}

// AddressToTopics is a free data retrieval call binding the contract method 0x624c45ea.
//
// Solidity: function addressToTopics(address , uint256 ) view returns(string)
func (_Scatterprotocol *ScatterprotocolCaller) AddressToTopics(opts *bind.CallOpts, arg0 common.Address, arg1 *big.Int) (string, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "addressToTopics", arg0, arg1)

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// AddressToTopics is a free data retrieval call binding the contract method 0x624c45ea.
//
// Solidity: function addressToTopics(address , uint256 ) view returns(string)
func (_Scatterprotocol *ScatterprotocolSession) AddressToTopics(arg0 common.Address, arg1 *big.Int) (string, error) {
	return _Scatterprotocol.Contract.AddressToTopics(&_Scatterprotocol.CallOpts, arg0, arg1)
}

// AddressToTopics is a free data retrieval call binding the contract method 0x624c45ea.
//
// Solidity: function addressToTopics(address , uint256 ) view returns(string)
func (_Scatterprotocol *ScatterprotocolCallerSession) AddressToTopics(arg0 common.Address, arg1 *big.Int) (string, error) {
	return _Scatterprotocol.Contract.AddressToTopics(&_Scatterprotocol.CallOpts, arg0, arg1)
}

// AddressToTrainingJobInfo is a free data retrieval call binding the contract method 0xc0d241ed.
//
// Solidity: function addressToTrainingJobInfo(address , string ) view returns(string trainingJobCid, uint256 pooledReward, string evaluationJobCid)
func (_Scatterprotocol *ScatterprotocolCaller) AddressToTrainingJobInfo(opts *bind.CallOpts, arg0 common.Address, arg1 string) (struct {
	TrainingJobCid   string
	PooledReward     *big.Int
	EvaluationJobCid string
}, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "addressToTrainingJobInfo", arg0, arg1)

	outstruct := new(struct {
		TrainingJobCid   string
		PooledReward     *big.Int
		EvaluationJobCid string
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.TrainingJobCid = *abi.ConvertType(out[0], new(string)).(*string)
	outstruct.PooledReward = *abi.ConvertType(out[1], new(*big.Int)).(**big.Int)
	outstruct.EvaluationJobCid = *abi.ConvertType(out[2], new(string)).(*string)

	return *outstruct, err

}

// AddressToTrainingJobInfo is a free data retrieval call binding the contract method 0xc0d241ed.
//
// Solidity: function addressToTrainingJobInfo(address , string ) view returns(string trainingJobCid, uint256 pooledReward, string evaluationJobCid)
func (_Scatterprotocol *ScatterprotocolSession) AddressToTrainingJobInfo(arg0 common.Address, arg1 string) (struct {
	TrainingJobCid   string
	PooledReward     *big.Int
	EvaluationJobCid string
}, error) {
	return _Scatterprotocol.Contract.AddressToTrainingJobInfo(&_Scatterprotocol.CallOpts, arg0, arg1)
}

// AddressToTrainingJobInfo is a free data retrieval call binding the contract method 0xc0d241ed.
//
// Solidity: function addressToTrainingJobInfo(address , string ) view returns(string trainingJobCid, uint256 pooledReward, string evaluationJobCid)
func (_Scatterprotocol *ScatterprotocolCallerSession) AddressToTrainingJobInfo(arg0 common.Address, arg1 string) (struct {
	TrainingJobCid   string
	PooledReward     *big.Int
	EvaluationJobCid string
}, error) {
	return _Scatterprotocol.Contract.AddressToTrainingJobInfo(&_Scatterprotocol.CallOpts, arg0, arg1)
}

// CheckIfTopicExistsForRequestor is a free data retrieval call binding the contract method 0x35b40e60.
//
// Solidity: function checkIfTopicExistsForRequestor(address nodeAddress, string topicName) view returns(bool)
func (_Scatterprotocol *ScatterprotocolCaller) CheckIfTopicExistsForRequestor(opts *bind.CallOpts, nodeAddress common.Address, topicName string) (bool, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "checkIfTopicExistsForRequestor", nodeAddress, topicName)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// CheckIfTopicExistsForRequestor is a free data retrieval call binding the contract method 0x35b40e60.
//
// Solidity: function checkIfTopicExistsForRequestor(address nodeAddress, string topicName) view returns(bool)
func (_Scatterprotocol *ScatterprotocolSession) CheckIfTopicExistsForRequestor(nodeAddress common.Address, topicName string) (bool, error) {
	return _Scatterprotocol.Contract.CheckIfTopicExistsForRequestor(&_Scatterprotocol.CallOpts, nodeAddress, topicName)
}

// CheckIfTopicExistsForRequestor is a free data retrieval call binding the contract method 0x35b40e60.
//
// Solidity: function checkIfTopicExistsForRequestor(address nodeAddress, string topicName) view returns(bool)
func (_Scatterprotocol *ScatterprotocolCallerSession) CheckIfTopicExistsForRequestor(nodeAddress common.Address, topicName string) (bool, error) {
	return _Scatterprotocol.Contract.CheckIfTopicExistsForRequestor(&_Scatterprotocol.CallOpts, nodeAddress, topicName)
}

// EvaluationJobContract is a free data retrieval call binding the contract method 0xcff06d39.
//
// Solidity: function evaluationJobContract() view returns(address)
func (_Scatterprotocol *ScatterprotocolCaller) EvaluationJobContract(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "evaluationJobContract")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// EvaluationJobContract is a free data retrieval call binding the contract method 0xcff06d39.
//
// Solidity: function evaluationJobContract() view returns(address)
func (_Scatterprotocol *ScatterprotocolSession) EvaluationJobContract() (common.Address, error) {
	return _Scatterprotocol.Contract.EvaluationJobContract(&_Scatterprotocol.CallOpts)
}

// EvaluationJobContract is a free data retrieval call binding the contract method 0xcff06d39.
//
// Solidity: function evaluationJobContract() view returns(address)
func (_Scatterprotocol *ScatterprotocolCallerSession) EvaluationJobContract() (common.Address, error) {
	return _Scatterprotocol.Contract.EvaluationJobContract(&_Scatterprotocol.CallOpts)
}

// GetEnumRoleByAddress is a free data retrieval call binding the contract method 0x153a7b36.
//
// Solidity: function getEnumRoleByAddress(address addressToView) view returns(uint8)
func (_Scatterprotocol *ScatterprotocolCaller) GetEnumRoleByAddress(opts *bind.CallOpts, addressToView common.Address) (uint8, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "getEnumRoleByAddress", addressToView)

	if err != nil {
		return *new(uint8), err
	}

	out0 := *abi.ConvertType(out[0], new(uint8)).(*uint8)

	return out0, err

}

// GetEnumRoleByAddress is a free data retrieval call binding the contract method 0x153a7b36.
//
// Solidity: function getEnumRoleByAddress(address addressToView) view returns(uint8)
func (_Scatterprotocol *ScatterprotocolSession) GetEnumRoleByAddress(addressToView common.Address) (uint8, error) {
	return _Scatterprotocol.Contract.GetEnumRoleByAddress(&_Scatterprotocol.CallOpts, addressToView)
}

// GetEnumRoleByAddress is a free data retrieval call binding the contract method 0x153a7b36.
//
// Solidity: function getEnumRoleByAddress(address addressToView) view returns(uint8)
func (_Scatterprotocol *ScatterprotocolCallerSession) GetEnumRoleByAddress(addressToView common.Address) (uint8, error) {
	return _Scatterprotocol.Contract.GetEnumRoleByAddress(&_Scatterprotocol.CallOpts, addressToView)
}

// GetRequestorAddresses is a free data retrieval call binding the contract method 0xb4efe15f.
//
// Solidity: function getRequestorAddresses(int256 skip) view returns(string)
func (_Scatterprotocol *ScatterprotocolCaller) GetRequestorAddresses(opts *bind.CallOpts, skip *big.Int) (string, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "getRequestorAddresses", skip)

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// GetRequestorAddresses is a free data retrieval call binding the contract method 0xb4efe15f.
//
// Solidity: function getRequestorAddresses(int256 skip) view returns(string)
func (_Scatterprotocol *ScatterprotocolSession) GetRequestorAddresses(skip *big.Int) (string, error) {
	return _Scatterprotocol.Contract.GetRequestorAddresses(&_Scatterprotocol.CallOpts, skip)
}

// GetRequestorAddresses is a free data retrieval call binding the contract method 0xb4efe15f.
//
// Solidity: function getRequestorAddresses(int256 skip) view returns(string)
func (_Scatterprotocol *ScatterprotocolCallerSession) GetRequestorAddresses(skip *big.Int) (string, error) {
	return _Scatterprotocol.Contract.GetRequestorAddresses(&_Scatterprotocol.CallOpts, skip)
}

// GetRoleByAddress is a free data retrieval call binding the contract method 0x7bff77d4.
//
// Solidity: function getRoleByAddress(address addressToFind) view returns(string)
func (_Scatterprotocol *ScatterprotocolCaller) GetRoleByAddress(opts *bind.CallOpts, addressToFind common.Address) (string, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "getRoleByAddress", addressToFind)

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// GetRoleByAddress is a free data retrieval call binding the contract method 0x7bff77d4.
//
// Solidity: function getRoleByAddress(address addressToFind) view returns(string)
func (_Scatterprotocol *ScatterprotocolSession) GetRoleByAddress(addressToFind common.Address) (string, error) {
	return _Scatterprotocol.Contract.GetRoleByAddress(&_Scatterprotocol.CallOpts, addressToFind)
}

// GetRoleByAddress is a free data retrieval call binding the contract method 0x7bff77d4.
//
// Solidity: function getRoleByAddress(address addressToFind) view returns(string)
func (_Scatterprotocol *ScatterprotocolCallerSession) GetRoleByAddress(addressToFind common.Address) (string, error) {
	return _Scatterprotocol.Contract.GetRoleByAddress(&_Scatterprotocol.CallOpts, addressToFind)
}

// GetTopicsByRequestorAddress is a free data retrieval call binding the contract method 0xd8ecebed.
//
// Solidity: function getTopicsByRequestorAddress(address requestorAddress, int256 skip) view returns(string)
func (_Scatterprotocol *ScatterprotocolCaller) GetTopicsByRequestorAddress(opts *bind.CallOpts, requestorAddress common.Address, skip *big.Int) (string, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "getTopicsByRequestorAddress", requestorAddress, skip)

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// GetTopicsByRequestorAddress is a free data retrieval call binding the contract method 0xd8ecebed.
//
// Solidity: function getTopicsByRequestorAddress(address requestorAddress, int256 skip) view returns(string)
func (_Scatterprotocol *ScatterprotocolSession) GetTopicsByRequestorAddress(requestorAddress common.Address, skip *big.Int) (string, error) {
	return _Scatterprotocol.Contract.GetTopicsByRequestorAddress(&_Scatterprotocol.CallOpts, requestorAddress, skip)
}

// GetTopicsByRequestorAddress is a free data retrieval call binding the contract method 0xd8ecebed.
//
// Solidity: function getTopicsByRequestorAddress(address requestorAddress, int256 skip) view returns(string)
func (_Scatterprotocol *ScatterprotocolCallerSession) GetTopicsByRequestorAddress(requestorAddress common.Address, skip *big.Int) (string, error) {
	return _Scatterprotocol.Contract.GetTopicsByRequestorAddress(&_Scatterprotocol.CallOpts, requestorAddress, skip)
}

// GetTrainersByAddressAndTopic is a free data retrieval call binding the contract method 0x04aa1397.
//
// Solidity: function getTrainersByAddressAndTopic(address requestorAddress, string topicName, int256 skip) view returns(string)
func (_Scatterprotocol *ScatterprotocolCaller) GetTrainersByAddressAndTopic(opts *bind.CallOpts, requestorAddress common.Address, topicName string, skip *big.Int) (string, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "getTrainersByAddressAndTopic", requestorAddress, topicName, skip)

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// GetTrainersByAddressAndTopic is a free data retrieval call binding the contract method 0x04aa1397.
//
// Solidity: function getTrainersByAddressAndTopic(address requestorAddress, string topicName, int256 skip) view returns(string)
func (_Scatterprotocol *ScatterprotocolSession) GetTrainersByAddressAndTopic(requestorAddress common.Address, topicName string, skip *big.Int) (string, error) {
	return _Scatterprotocol.Contract.GetTrainersByAddressAndTopic(&_Scatterprotocol.CallOpts, requestorAddress, topicName, skip)
}

// GetTrainersByAddressAndTopic is a free data retrieval call binding the contract method 0x04aa1397.
//
// Solidity: function getTrainersByAddressAndTopic(address requestorAddress, string topicName, int256 skip) view returns(string)
func (_Scatterprotocol *ScatterprotocolCallerSession) GetTrainersByAddressAndTopic(requestorAddress common.Address, topicName string, skip *big.Int) (string, error) {
	return _Scatterprotocol.Contract.GetTrainersByAddressAndTopic(&_Scatterprotocol.CallOpts, requestorAddress, topicName, skip)
}

// ModelLogger is a free data retrieval call binding the contract method 0x5c11037e.
//
// Solidity: function modelLogger(address , string , address ) view returns(string)
func (_Scatterprotocol *ScatterprotocolCaller) ModelLogger(opts *bind.CallOpts, arg0 common.Address, arg1 string, arg2 common.Address) (string, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "modelLogger", arg0, arg1, arg2)

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// ModelLogger is a free data retrieval call binding the contract method 0x5c11037e.
//
// Solidity: function modelLogger(address , string , address ) view returns(string)
func (_Scatterprotocol *ScatterprotocolSession) ModelLogger(arg0 common.Address, arg1 string, arg2 common.Address) (string, error) {
	return _Scatterprotocol.Contract.ModelLogger(&_Scatterprotocol.CallOpts, arg0, arg1, arg2)
}

// ModelLogger is a free data retrieval call binding the contract method 0x5c11037e.
//
// Solidity: function modelLogger(address , string , address ) view returns(string)
func (_Scatterprotocol *ScatterprotocolCallerSession) ModelLogger(arg0 common.Address, arg1 string, arg2 common.Address) (string, error) {
	return _Scatterprotocol.Contract.ModelLogger(&_Scatterprotocol.CallOpts, arg0, arg1, arg2)
}

// ModelTokenContract is a free data retrieval call binding the contract method 0x46747741.
//
// Solidity: function modelTokenContract() view returns(address)
func (_Scatterprotocol *ScatterprotocolCaller) ModelTokenContract(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "modelTokenContract")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// ModelTokenContract is a free data retrieval call binding the contract method 0x46747741.
//
// Solidity: function modelTokenContract() view returns(address)
func (_Scatterprotocol *ScatterprotocolSession) ModelTokenContract() (common.Address, error) {
	return _Scatterprotocol.Contract.ModelTokenContract(&_Scatterprotocol.CallOpts)
}

// ModelTokenContract is a free data retrieval call binding the contract method 0x46747741.
//
// Solidity: function modelTokenContract() view returns(address)
func (_Scatterprotocol *ScatterprotocolCallerSession) ModelTokenContract() (common.Address, error) {
	return _Scatterprotocol.Contract.ModelTokenContract(&_Scatterprotocol.CallOpts)
}

// NetworkRequestors is a free data retrieval call binding the contract method 0xa765d052.
//
// Solidity: function networkRequestors(uint256 ) view returns(address)
func (_Scatterprotocol *ScatterprotocolCaller) NetworkRequestors(opts *bind.CallOpts, arg0 *big.Int) (common.Address, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "networkRequestors", arg0)

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// NetworkRequestors is a free data retrieval call binding the contract method 0xa765d052.
//
// Solidity: function networkRequestors(uint256 ) view returns(address)
func (_Scatterprotocol *ScatterprotocolSession) NetworkRequestors(arg0 *big.Int) (common.Address, error) {
	return _Scatterprotocol.Contract.NetworkRequestors(&_Scatterprotocol.CallOpts, arg0)
}

// NetworkRequestors is a free data retrieval call binding the contract method 0xa765d052.
//
// Solidity: function networkRequestors(uint256 ) view returns(address)
func (_Scatterprotocol *ScatterprotocolCallerSession) NetworkRequestors(arg0 *big.Int) (common.Address, error) {
	return _Scatterprotocol.Contract.NetworkRequestors(&_Scatterprotocol.CallOpts, arg0)
}

// NetworkTrainers is a free data retrieval call binding the contract method 0xaa711be6.
//
// Solidity: function networkTrainers(uint256 ) view returns(address)
func (_Scatterprotocol *ScatterprotocolCaller) NetworkTrainers(opts *bind.CallOpts, arg0 *big.Int) (common.Address, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "networkTrainers", arg0)

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// NetworkTrainers is a free data retrieval call binding the contract method 0xaa711be6.
//
// Solidity: function networkTrainers(uint256 ) view returns(address)
func (_Scatterprotocol *ScatterprotocolSession) NetworkTrainers(arg0 *big.Int) (common.Address, error) {
	return _Scatterprotocol.Contract.NetworkTrainers(&_Scatterprotocol.CallOpts, arg0)
}

// NetworkTrainers is a free data retrieval call binding the contract method 0xaa711be6.
//
// Solidity: function networkTrainers(uint256 ) view returns(address)
func (_Scatterprotocol *ScatterprotocolCallerSession) NetworkTrainers(arg0 *big.Int) (common.Address, error) {
	return _Scatterprotocol.Contract.NetworkTrainers(&_Scatterprotocol.CallOpts, arg0)
}

// NetworkValidators is a free data retrieval call binding the contract method 0x4be0be0d.
//
// Solidity: function networkValidators(uint256 ) view returns(address)
func (_Scatterprotocol *ScatterprotocolCaller) NetworkValidators(opts *bind.CallOpts, arg0 *big.Int) (common.Address, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "networkValidators", arg0)

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// NetworkValidators is a free data retrieval call binding the contract method 0x4be0be0d.
//
// Solidity: function networkValidators(uint256 ) view returns(address)
func (_Scatterprotocol *ScatterprotocolSession) NetworkValidators(arg0 *big.Int) (common.Address, error) {
	return _Scatterprotocol.Contract.NetworkValidators(&_Scatterprotocol.CallOpts, arg0)
}

// NetworkValidators is a free data retrieval call binding the contract method 0x4be0be0d.
//
// Solidity: function networkValidators(uint256 ) view returns(address)
func (_Scatterprotocol *ScatterprotocolCallerSession) NetworkValidators(arg0 *big.Int) (common.Address, error) {
	return _Scatterprotocol.Contract.NetworkValidators(&_Scatterprotocol.CallOpts, arg0)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_Scatterprotocol *ScatterprotocolCaller) Owner(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "owner")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_Scatterprotocol *ScatterprotocolSession) Owner() (common.Address, error) {
	return _Scatterprotocol.Contract.Owner(&_Scatterprotocol.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_Scatterprotocol *ScatterprotocolCallerSession) Owner() (common.Address, error) {
	return _Scatterprotocol.Contract.Owner(&_Scatterprotocol.CallOpts)
}

// ScatterTokenContract is a free data retrieval call binding the contract method 0x594de850.
//
// Solidity: function scatterTokenContract() view returns(address)
func (_Scatterprotocol *ScatterprotocolCaller) ScatterTokenContract(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "scatterTokenContract")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// ScatterTokenContract is a free data retrieval call binding the contract method 0x594de850.
//
// Solidity: function scatterTokenContract() view returns(address)
func (_Scatterprotocol *ScatterprotocolSession) ScatterTokenContract() (common.Address, error) {
	return _Scatterprotocol.Contract.ScatterTokenContract(&_Scatterprotocol.CallOpts)
}

// ScatterTokenContract is a free data retrieval call binding the contract method 0x594de850.
//
// Solidity: function scatterTokenContract() view returns(address)
func (_Scatterprotocol *ScatterprotocolCallerSession) ScatterTokenContract() (common.Address, error) {
	return _Scatterprotocol.Contract.ScatterTokenContract(&_Scatterprotocol.CallOpts)
}

// TrainerTrainingMap is a free data retrieval call binding the contract method 0x67fa5840.
//
// Solidity: function trainerTrainingMap(address , string , address ) view returns(bool)
func (_Scatterprotocol *ScatterprotocolCaller) TrainerTrainingMap(opts *bind.CallOpts, arg0 common.Address, arg1 string, arg2 common.Address) (bool, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "trainerTrainingMap", arg0, arg1, arg2)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// TrainerTrainingMap is a free data retrieval call binding the contract method 0x67fa5840.
//
// Solidity: function trainerTrainingMap(address , string , address ) view returns(bool)
func (_Scatterprotocol *ScatterprotocolSession) TrainerTrainingMap(arg0 common.Address, arg1 string, arg2 common.Address) (bool, error) {
	return _Scatterprotocol.Contract.TrainerTrainingMap(&_Scatterprotocol.CallOpts, arg0, arg1, arg2)
}

// TrainerTrainingMap is a free data retrieval call binding the contract method 0x67fa5840.
//
// Solidity: function trainerTrainingMap(address , string , address ) view returns(bool)
func (_Scatterprotocol *ScatterprotocolCallerSession) TrainerTrainingMap(arg0 common.Address, arg1 string, arg2 common.Address) (bool, error) {
	return _Scatterprotocol.Contract.TrainerTrainingMap(&_Scatterprotocol.CallOpts, arg0, arg1, arg2)
}

// TrainingJobContract is a free data retrieval call binding the contract method 0xb3f5b280.
//
// Solidity: function trainingJobContract() view returns(address)
func (_Scatterprotocol *ScatterprotocolCaller) TrainingJobContract(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "trainingJobContract")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// TrainingJobContract is a free data retrieval call binding the contract method 0xb3f5b280.
//
// Solidity: function trainingJobContract() view returns(address)
func (_Scatterprotocol *ScatterprotocolSession) TrainingJobContract() (common.Address, error) {
	return _Scatterprotocol.Contract.TrainingJobContract(&_Scatterprotocol.CallOpts)
}

// TrainingJobContract is a free data retrieval call binding the contract method 0xb3f5b280.
//
// Solidity: function trainingJobContract() view returns(address)
func (_Scatterprotocol *ScatterprotocolCallerSession) TrainingJobContract() (common.Address, error) {
	return _Scatterprotocol.Contract.TrainingJobContract(&_Scatterprotocol.CallOpts)
}

// ValidatorTrainingMap is a free data retrieval call binding the contract method 0x0b680f76.
//
// Solidity: function validatorTrainingMap(address , string , address ) view returns(bool)
func (_Scatterprotocol *ScatterprotocolCaller) ValidatorTrainingMap(opts *bind.CallOpts, arg0 common.Address, arg1 string, arg2 common.Address) (bool, error) {
	var out []interface{}
	err := _Scatterprotocol.contract.Call(opts, &out, "validatorTrainingMap", arg0, arg1, arg2)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// ValidatorTrainingMap is a free data retrieval call binding the contract method 0x0b680f76.
//
// Solidity: function validatorTrainingMap(address , string , address ) view returns(bool)
func (_Scatterprotocol *ScatterprotocolSession) ValidatorTrainingMap(arg0 common.Address, arg1 string, arg2 common.Address) (bool, error) {
	return _Scatterprotocol.Contract.ValidatorTrainingMap(&_Scatterprotocol.CallOpts, arg0, arg1, arg2)
}

// ValidatorTrainingMap is a free data retrieval call binding the contract method 0x0b680f76.
//
// Solidity: function validatorTrainingMap(address , string , address ) view returns(bool)
func (_Scatterprotocol *ScatterprotocolCallerSession) ValidatorTrainingMap(arg0 common.Address, arg1 string, arg2 common.Address) (bool, error) {
	return _Scatterprotocol.Contract.ValidatorTrainingMap(&_Scatterprotocol.CallOpts, arg0, arg1, arg2)
}

// Destroy is a paid mutator transaction binding the contract method 0x83197ef0.
//
// Solidity: function destroy() returns()
func (_Scatterprotocol *ScatterprotocolTransactor) Destroy(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Scatterprotocol.contract.Transact(opts, "destroy")
}

// Destroy is a paid mutator transaction binding the contract method 0x83197ef0.
//
// Solidity: function destroy() returns()
func (_Scatterprotocol *ScatterprotocolSession) Destroy() (*types.Transaction, error) {
	return _Scatterprotocol.Contract.Destroy(&_Scatterprotocol.TransactOpts)
}

// Destroy is a paid mutator transaction binding the contract method 0x83197ef0.
//
// Solidity: function destroy() returns()
func (_Scatterprotocol *ScatterprotocolTransactorSession) Destroy() (*types.Transaction, error) {
	return _Scatterprotocol.Contract.Destroy(&_Scatterprotocol.TransactOpts)
}

// InitModelValidator is a paid mutator transaction binding the contract method 0x0d3fa278.
//
// Solidity: function initModelValidator() returns()
func (_Scatterprotocol *ScatterprotocolTransactor) InitModelValidator(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Scatterprotocol.contract.Transact(opts, "initModelValidator")
}

// InitModelValidator is a paid mutator transaction binding the contract method 0x0d3fa278.
//
// Solidity: function initModelValidator() returns()
func (_Scatterprotocol *ScatterprotocolSession) InitModelValidator() (*types.Transaction, error) {
	return _Scatterprotocol.Contract.InitModelValidator(&_Scatterprotocol.TransactOpts)
}

// InitModelValidator is a paid mutator transaction binding the contract method 0x0d3fa278.
//
// Solidity: function initModelValidator() returns()
func (_Scatterprotocol *ScatterprotocolTransactorSession) InitModelValidator() (*types.Transaction, error) {
	return _Scatterprotocol.Contract.InitModelValidator(&_Scatterprotocol.TransactOpts)
}

// InitRequestorNode is a paid mutator transaction binding the contract method 0xcb30bfc3.
//
// Solidity: function initRequestorNode() returns()
func (_Scatterprotocol *ScatterprotocolTransactor) InitRequestorNode(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Scatterprotocol.contract.Transact(opts, "initRequestorNode")
}

// InitRequestorNode is a paid mutator transaction binding the contract method 0xcb30bfc3.
//
// Solidity: function initRequestorNode() returns()
func (_Scatterprotocol *ScatterprotocolSession) InitRequestorNode() (*types.Transaction, error) {
	return _Scatterprotocol.Contract.InitRequestorNode(&_Scatterprotocol.TransactOpts)
}

// InitRequestorNode is a paid mutator transaction binding the contract method 0xcb30bfc3.
//
// Solidity: function initRequestorNode() returns()
func (_Scatterprotocol *ScatterprotocolTransactorSession) InitRequestorNode() (*types.Transaction, error) {
	return _Scatterprotocol.Contract.InitRequestorNode(&_Scatterprotocol.TransactOpts)
}

// InitTrainerNode is a paid mutator transaction binding the contract method 0x6949f907.
//
// Solidity: function initTrainerNode() returns()
func (_Scatterprotocol *ScatterprotocolTransactor) InitTrainerNode(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Scatterprotocol.contract.Transact(opts, "initTrainerNode")
}

// InitTrainerNode is a paid mutator transaction binding the contract method 0x6949f907.
//
// Solidity: function initTrainerNode() returns()
func (_Scatterprotocol *ScatterprotocolSession) InitTrainerNode() (*types.Transaction, error) {
	return _Scatterprotocol.Contract.InitTrainerNode(&_Scatterprotocol.TransactOpts)
}

// InitTrainerNode is a paid mutator transaction binding the contract method 0x6949f907.
//
// Solidity: function initTrainerNode() returns()
func (_Scatterprotocol *ScatterprotocolTransactorSession) InitTrainerNode() (*types.Transaction, error) {
	return _Scatterprotocol.Contract.InitTrainerNode(&_Scatterprotocol.TransactOpts)
}

// PublishModelToProtocol is a paid mutator transaction binding the contract method 0x9294be12.
//
// Solidity: function publishModelToProtocol(string modelURI, address requestorAddress, string topicName) returns()
func (_Scatterprotocol *ScatterprotocolTransactor) PublishModelToProtocol(opts *bind.TransactOpts, modelURI string, requestorAddress common.Address, topicName string) (*types.Transaction, error) {
	return _Scatterprotocol.contract.Transact(opts, "publishModelToProtocol", modelURI, requestorAddress, topicName)
}

// PublishModelToProtocol is a paid mutator transaction binding the contract method 0x9294be12.
//
// Solidity: function publishModelToProtocol(string modelURI, address requestorAddress, string topicName) returns()
func (_Scatterprotocol *ScatterprotocolSession) PublishModelToProtocol(modelURI string, requestorAddress common.Address, topicName string) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.PublishModelToProtocol(&_Scatterprotocol.TransactOpts, modelURI, requestorAddress, topicName)
}

// PublishModelToProtocol is a paid mutator transaction binding the contract method 0x9294be12.
//
// Solidity: function publishModelToProtocol(string modelURI, address requestorAddress, string topicName) returns()
func (_Scatterprotocol *ScatterprotocolTransactorSession) PublishModelToProtocol(modelURI string, requestorAddress common.Address, topicName string) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.PublishModelToProtocol(&_Scatterprotocol.TransactOpts, modelURI, requestorAddress, topicName)
}

// RequestorAddTopic is a paid mutator transaction binding the contract method 0xc0a4371c.
//
// Solidity: function requestorAddTopic(string tokenURI, string topicName, uint256 pooledReward) returns()
func (_Scatterprotocol *ScatterprotocolTransactor) RequestorAddTopic(opts *bind.TransactOpts, tokenURI string, topicName string, pooledReward *big.Int) (*types.Transaction, error) {
	return _Scatterprotocol.contract.Transact(opts, "requestorAddTopic", tokenURI, topicName, pooledReward)
}

// RequestorAddTopic is a paid mutator transaction binding the contract method 0xc0a4371c.
//
// Solidity: function requestorAddTopic(string tokenURI, string topicName, uint256 pooledReward) returns()
func (_Scatterprotocol *ScatterprotocolSession) RequestorAddTopic(tokenURI string, topicName string, pooledReward *big.Int) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.RequestorAddTopic(&_Scatterprotocol.TransactOpts, tokenURI, topicName, pooledReward)
}

// RequestorAddTopic is a paid mutator transaction binding the contract method 0xc0a4371c.
//
// Solidity: function requestorAddTopic(string tokenURI, string topicName, uint256 pooledReward) returns()
func (_Scatterprotocol *ScatterprotocolTransactorSession) RequestorAddTopic(tokenURI string, topicName string, pooledReward *big.Int) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.RequestorAddTopic(&_Scatterprotocol.TransactOpts, tokenURI, topicName, pooledReward)
}

// SetEvaluationJobContractAddress is a paid mutator transaction binding the contract method 0x039e09b1.
//
// Solidity: function setEvaluationJobContractAddress(address newAddress) returns()
func (_Scatterprotocol *ScatterprotocolTransactor) SetEvaluationJobContractAddress(opts *bind.TransactOpts, newAddress common.Address) (*types.Transaction, error) {
	return _Scatterprotocol.contract.Transact(opts, "setEvaluationJobContractAddress", newAddress)
}

// SetEvaluationJobContractAddress is a paid mutator transaction binding the contract method 0x039e09b1.
//
// Solidity: function setEvaluationJobContractAddress(address newAddress) returns()
func (_Scatterprotocol *ScatterprotocolSession) SetEvaluationJobContractAddress(newAddress common.Address) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.SetEvaluationJobContractAddress(&_Scatterprotocol.TransactOpts, newAddress)
}

// SetEvaluationJobContractAddress is a paid mutator transaction binding the contract method 0x039e09b1.
//
// Solidity: function setEvaluationJobContractAddress(address newAddress) returns()
func (_Scatterprotocol *ScatterprotocolTransactorSession) SetEvaluationJobContractAddress(newAddress common.Address) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.SetEvaluationJobContractAddress(&_Scatterprotocol.TransactOpts, newAddress)
}

// SetNodeId is a paid mutator transaction binding the contract method 0x7d9011ec.
//
// Solidity: function setNodeId(string nodeId) returns()
func (_Scatterprotocol *ScatterprotocolTransactor) SetNodeId(opts *bind.TransactOpts, nodeId string) (*types.Transaction, error) {
	return _Scatterprotocol.contract.Transact(opts, "setNodeId", nodeId)
}

// SetNodeId is a paid mutator transaction binding the contract method 0x7d9011ec.
//
// Solidity: function setNodeId(string nodeId) returns()
func (_Scatterprotocol *ScatterprotocolSession) SetNodeId(nodeId string) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.SetNodeId(&_Scatterprotocol.TransactOpts, nodeId)
}

// SetNodeId is a paid mutator transaction binding the contract method 0x7d9011ec.
//
// Solidity: function setNodeId(string nodeId) returns()
func (_Scatterprotocol *ScatterprotocolTransactorSession) SetNodeId(nodeId string) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.SetNodeId(&_Scatterprotocol.TransactOpts, nodeId)
}

// SetRole is a paid mutator transaction binding the contract method 0x571c3e60.
//
// Solidity: function setRole(address addressToUpdate, uint8 newRole) returns()
func (_Scatterprotocol *ScatterprotocolTransactor) SetRole(opts *bind.TransactOpts, addressToUpdate common.Address, newRole uint8) (*types.Transaction, error) {
	return _Scatterprotocol.contract.Transact(opts, "setRole", addressToUpdate, newRole)
}

// SetRole is a paid mutator transaction binding the contract method 0x571c3e60.
//
// Solidity: function setRole(address addressToUpdate, uint8 newRole) returns()
func (_Scatterprotocol *ScatterprotocolSession) SetRole(addressToUpdate common.Address, newRole uint8) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.SetRole(&_Scatterprotocol.TransactOpts, addressToUpdate, newRole)
}

// SetRole is a paid mutator transaction binding the contract method 0x571c3e60.
//
// Solidity: function setRole(address addressToUpdate, uint8 newRole) returns()
func (_Scatterprotocol *ScatterprotocolTransactorSession) SetRole(addressToUpdate common.Address, newRole uint8) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.SetRole(&_Scatterprotocol.TransactOpts, addressToUpdate, newRole)
}

// SetScatterTokenContractAddress is a paid mutator transaction binding the contract method 0xa9de0ae9.
//
// Solidity: function setScatterTokenContractAddress(address newAddress) returns()
func (_Scatterprotocol *ScatterprotocolTransactor) SetScatterTokenContractAddress(opts *bind.TransactOpts, newAddress common.Address) (*types.Transaction, error) {
	return _Scatterprotocol.contract.Transact(opts, "setScatterTokenContractAddress", newAddress)
}

// SetScatterTokenContractAddress is a paid mutator transaction binding the contract method 0xa9de0ae9.
//
// Solidity: function setScatterTokenContractAddress(address newAddress) returns()
func (_Scatterprotocol *ScatterprotocolSession) SetScatterTokenContractAddress(newAddress common.Address) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.SetScatterTokenContractAddress(&_Scatterprotocol.TransactOpts, newAddress)
}

// SetScatterTokenContractAddress is a paid mutator transaction binding the contract method 0xa9de0ae9.
//
// Solidity: function setScatterTokenContractAddress(address newAddress) returns()
func (_Scatterprotocol *ScatterprotocolTransactorSession) SetScatterTokenContractAddress(newAddress common.Address) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.SetScatterTokenContractAddress(&_Scatterprotocol.TransactOpts, newAddress)
}

// SetTrainingJobContractAddress is a paid mutator transaction binding the contract method 0x5aff6e77.
//
// Solidity: function setTrainingJobContractAddress(address newAddress) returns()
func (_Scatterprotocol *ScatterprotocolTransactor) SetTrainingJobContractAddress(opts *bind.TransactOpts, newAddress common.Address) (*types.Transaction, error) {
	return _Scatterprotocol.contract.Transact(opts, "setTrainingJobContractAddress", newAddress)
}

// SetTrainingJobContractAddress is a paid mutator transaction binding the contract method 0x5aff6e77.
//
// Solidity: function setTrainingJobContractAddress(address newAddress) returns()
func (_Scatterprotocol *ScatterprotocolSession) SetTrainingJobContractAddress(newAddress common.Address) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.SetTrainingJobContractAddress(&_Scatterprotocol.TransactOpts, newAddress)
}

// SetTrainingJobContractAddress is a paid mutator transaction binding the contract method 0x5aff6e77.
//
// Solidity: function setTrainingJobContractAddress(address newAddress) returns()
func (_Scatterprotocol *ScatterprotocolTransactorSession) SetTrainingJobContractAddress(newAddress common.Address) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.SetTrainingJobContractAddress(&_Scatterprotocol.TransactOpts, newAddress)
}

// StartTraining is a paid mutator transaction binding the contract method 0x300c7315.
//
// Solidity: function startTraining(string topicName) returns()
func (_Scatterprotocol *ScatterprotocolTransactor) StartTraining(opts *bind.TransactOpts, topicName string) (*types.Transaction, error) {
	return _Scatterprotocol.contract.Transact(opts, "startTraining", topicName)
}

// StartTraining is a paid mutator transaction binding the contract method 0x300c7315.
//
// Solidity: function startTraining(string topicName) returns()
func (_Scatterprotocol *ScatterprotocolSession) StartTraining(topicName string) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.StartTraining(&_Scatterprotocol.TransactOpts, topicName)
}

// StartTraining is a paid mutator transaction binding the contract method 0x300c7315.
//
// Solidity: function startTraining(string topicName) returns()
func (_Scatterprotocol *ScatterprotocolTransactorSession) StartTraining(topicName string) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.StartTraining(&_Scatterprotocol.TransactOpts, topicName)
}

// SubmitEvaluationSet is a paid mutator transaction binding the contract method 0x8017c3e1.
//
// Solidity: function submitEvaluationSet(string topicName, string evaluationSetURI) returns()
func (_Scatterprotocol *ScatterprotocolTransactor) SubmitEvaluationSet(opts *bind.TransactOpts, topicName string, evaluationSetURI string) (*types.Transaction, error) {
	return _Scatterprotocol.contract.Transact(opts, "submitEvaluationSet", topicName, evaluationSetURI)
}

// SubmitEvaluationSet is a paid mutator transaction binding the contract method 0x8017c3e1.
//
// Solidity: function submitEvaluationSet(string topicName, string evaluationSetURI) returns()
func (_Scatterprotocol *ScatterprotocolSession) SubmitEvaluationSet(topicName string, evaluationSetURI string) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.SubmitEvaluationSet(&_Scatterprotocol.TransactOpts, topicName, evaluationSetURI)
}

// SubmitEvaluationSet is a paid mutator transaction binding the contract method 0x8017c3e1.
//
// Solidity: function submitEvaluationSet(string topicName, string evaluationSetURI) returns()
func (_Scatterprotocol *ScatterprotocolTransactorSession) SubmitEvaluationSet(topicName string, evaluationSetURI string) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.SubmitEvaluationSet(&_Scatterprotocol.TransactOpts, topicName, evaluationSetURI)
}

// TrainerAddTopic is a paid mutator transaction binding the contract method 0x6408602d.
//
// Solidity: function trainerAddTopic(address requestorAddress, string requestorTopic) returns()
func (_Scatterprotocol *ScatterprotocolTransactor) TrainerAddTopic(opts *bind.TransactOpts, requestorAddress common.Address, requestorTopic string) (*types.Transaction, error) {
	return _Scatterprotocol.contract.Transact(opts, "trainerAddTopic", requestorAddress, requestorTopic)
}

// TrainerAddTopic is a paid mutator transaction binding the contract method 0x6408602d.
//
// Solidity: function trainerAddTopic(address requestorAddress, string requestorTopic) returns()
func (_Scatterprotocol *ScatterprotocolSession) TrainerAddTopic(requestorAddress common.Address, requestorTopic string) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.TrainerAddTopic(&_Scatterprotocol.TransactOpts, requestorAddress, requestorTopic)
}

// TrainerAddTopic is a paid mutator transaction binding the contract method 0x6408602d.
//
// Solidity: function trainerAddTopic(address requestorAddress, string requestorTopic) returns()
func (_Scatterprotocol *ScatterprotocolTransactorSession) TrainerAddTopic(requestorAddress common.Address, requestorTopic string) (*types.Transaction, error) {
	return _Scatterprotocol.Contract.TrainerAddTopic(&_Scatterprotocol.TransactOpts, requestorAddress, requestorTopic)
}

// ScatterprotocolDebugEventIterator is returned from FilterDebugEvent and is used to iterate over the raw logs and unpacked data for DebugEvent events raised by the Scatterprotocol contract.
type ScatterprotocolDebugEventIterator struct {
	Event *ScatterprotocolDebugEvent // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ScatterprotocolDebugEventIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ScatterprotocolDebugEvent)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ScatterprotocolDebugEvent)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ScatterprotocolDebugEventIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ScatterprotocolDebugEventIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ScatterprotocolDebugEvent represents a DebugEvent event raised by the Scatterprotocol contract.
type ScatterprotocolDebugEvent struct {
	Message string
	Raw     types.Log // Blockchain specific contextual infos
}

// FilterDebugEvent is a free log retrieval operation binding the contract event 0x56f074d292557f2e3c567d982816e0fb5b72100ff196892f8fbd23b8a9073679.
//
// Solidity: event DebugEvent(string message)
func (_Scatterprotocol *ScatterprotocolFilterer) FilterDebugEvent(opts *bind.FilterOpts) (*ScatterprotocolDebugEventIterator, error) {

	logs, sub, err := _Scatterprotocol.contract.FilterLogs(opts, "DebugEvent")
	if err != nil {
		return nil, err
	}
	return &ScatterprotocolDebugEventIterator{contract: _Scatterprotocol.contract, event: "DebugEvent", logs: logs, sub: sub}, nil
}

// WatchDebugEvent is a free log subscription operation binding the contract event 0x56f074d292557f2e3c567d982816e0fb5b72100ff196892f8fbd23b8a9073679.
//
// Solidity: event DebugEvent(string message)
func (_Scatterprotocol *ScatterprotocolFilterer) WatchDebugEvent(opts *bind.WatchOpts, sink chan<- *ScatterprotocolDebugEvent) (event.Subscription, error) {

	logs, sub, err := _Scatterprotocol.contract.WatchLogs(opts, "DebugEvent")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ScatterprotocolDebugEvent)
				if err := _Scatterprotocol.contract.UnpackLog(event, "DebugEvent", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseDebugEvent is a log parse operation binding the contract event 0x56f074d292557f2e3c567d982816e0fb5b72100ff196892f8fbd23b8a9073679.
//
// Solidity: event DebugEvent(string message)
func (_Scatterprotocol *ScatterprotocolFilterer) ParseDebugEvent(log types.Log) (*ScatterprotocolDebugEvent, error) {
	event := new(ScatterprotocolDebugEvent)
	if err := _Scatterprotocol.contract.UnpackLog(event, "DebugEvent", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ScatterprotocolModelReadyToValidateIterator is returned from FilterModelReadyToValidate and is used to iterate over the raw logs and unpacked data for ModelReadyToValidate events raised by the Scatterprotocol contract.
type ScatterprotocolModelReadyToValidateIterator struct {
	Event *ScatterprotocolModelReadyToValidate // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ScatterprotocolModelReadyToValidateIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ScatterprotocolModelReadyToValidate)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ScatterprotocolModelReadyToValidate)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ScatterprotocolModelReadyToValidateIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ScatterprotocolModelReadyToValidateIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ScatterprotocolModelReadyToValidate represents a ModelReadyToValidate event raised by the Scatterprotocol contract.
type ScatterprotocolModelReadyToValidate struct {
	Requestor common.Address
	TopicName string
	Raw       types.Log // Blockchain specific contextual infos
}

// FilterModelReadyToValidate is a free log retrieval operation binding the contract event 0x81ebde127b98dac35c03a4eec2d7d67042cbb737d00846b2cb0fa3f4e33f159a.
//
// Solidity: event ModelReadyToValidate(address requestor, string topicName)
func (_Scatterprotocol *ScatterprotocolFilterer) FilterModelReadyToValidate(opts *bind.FilterOpts) (*ScatterprotocolModelReadyToValidateIterator, error) {

	logs, sub, err := _Scatterprotocol.contract.FilterLogs(opts, "ModelReadyToValidate")
	if err != nil {
		return nil, err
	}
	return &ScatterprotocolModelReadyToValidateIterator{contract: _Scatterprotocol.contract, event: "ModelReadyToValidate", logs: logs, sub: sub}, nil
}

// WatchModelReadyToValidate is a free log subscription operation binding the contract event 0x81ebde127b98dac35c03a4eec2d7d67042cbb737d00846b2cb0fa3f4e33f159a.
//
// Solidity: event ModelReadyToValidate(address requestor, string topicName)
func (_Scatterprotocol *ScatterprotocolFilterer) WatchModelReadyToValidate(opts *bind.WatchOpts, sink chan<- *ScatterprotocolModelReadyToValidate) (event.Subscription, error) {

	logs, sub, err := _Scatterprotocol.contract.WatchLogs(opts, "ModelReadyToValidate")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ScatterprotocolModelReadyToValidate)
				if err := _Scatterprotocol.contract.UnpackLog(event, "ModelReadyToValidate", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseModelReadyToValidate is a log parse operation binding the contract event 0x81ebde127b98dac35c03a4eec2d7d67042cbb737d00846b2cb0fa3f4e33f159a.
//
// Solidity: event ModelReadyToValidate(address requestor, string topicName)
func (_Scatterprotocol *ScatterprotocolFilterer) ParseModelReadyToValidate(log types.Log) (*ScatterprotocolModelReadyToValidate, error) {
	event := new(ScatterprotocolModelReadyToValidate)
	if err := _Scatterprotocol.contract.UnpackLog(event, "ModelReadyToValidate", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ScatterprotocolRequestForEvaluationSetIterator is returned from FilterRequestForEvaluationSet and is used to iterate over the raw logs and unpacked data for RequestForEvaluationSet events raised by the Scatterprotocol contract.
type ScatterprotocolRequestForEvaluationSetIterator struct {
	Event *ScatterprotocolRequestForEvaluationSet // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ScatterprotocolRequestForEvaluationSetIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ScatterprotocolRequestForEvaluationSet)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ScatterprotocolRequestForEvaluationSet)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ScatterprotocolRequestForEvaluationSetIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ScatterprotocolRequestForEvaluationSetIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ScatterprotocolRequestForEvaluationSet represents a RequestForEvaluationSet event raised by the Scatterprotocol contract.
type ScatterprotocolRequestForEvaluationSet struct {
	Requestor common.Address
	TopicName string
	Raw       types.Log // Blockchain specific contextual infos
}

// FilterRequestForEvaluationSet is a free log retrieval operation binding the contract event 0xf7e2a6109d1c061bfecbea32c29709ab398588a2d2ad965c461d536d086e14e0.
//
// Solidity: event RequestForEvaluationSet(address requestor, string topicName)
func (_Scatterprotocol *ScatterprotocolFilterer) FilterRequestForEvaluationSet(opts *bind.FilterOpts) (*ScatterprotocolRequestForEvaluationSetIterator, error) {

	logs, sub, err := _Scatterprotocol.contract.FilterLogs(opts, "RequestForEvaluationSet")
	if err != nil {
		return nil, err
	}
	return &ScatterprotocolRequestForEvaluationSetIterator{contract: _Scatterprotocol.contract, event: "RequestForEvaluationSet", logs: logs, sub: sub}, nil
}

// WatchRequestForEvaluationSet is a free log subscription operation binding the contract event 0xf7e2a6109d1c061bfecbea32c29709ab398588a2d2ad965c461d536d086e14e0.
//
// Solidity: event RequestForEvaluationSet(address requestor, string topicName)
func (_Scatterprotocol *ScatterprotocolFilterer) WatchRequestForEvaluationSet(opts *bind.WatchOpts, sink chan<- *ScatterprotocolRequestForEvaluationSet) (event.Subscription, error) {

	logs, sub, err := _Scatterprotocol.contract.WatchLogs(opts, "RequestForEvaluationSet")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ScatterprotocolRequestForEvaluationSet)
				if err := _Scatterprotocol.contract.UnpackLog(event, "RequestForEvaluationSet", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseRequestForEvaluationSet is a log parse operation binding the contract event 0xf7e2a6109d1c061bfecbea32c29709ab398588a2d2ad965c461d536d086e14e0.
//
// Solidity: event RequestForEvaluationSet(address requestor, string topicName)
func (_Scatterprotocol *ScatterprotocolFilterer) ParseRequestForEvaluationSet(log types.Log) (*ScatterprotocolRequestForEvaluationSet, error) {
	event := new(ScatterprotocolRequestForEvaluationSet)
	if err := _Scatterprotocol.contract.UnpackLog(event, "RequestForEvaluationSet", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ScatterprotocolTrainingInitializedIterator is returned from FilterTrainingInitialized and is used to iterate over the raw logs and unpacked data for TrainingInitialized events raised by the Scatterprotocol contract.
type ScatterprotocolTrainingInitializedIterator struct {
	Event *ScatterprotocolTrainingInitialized // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ScatterprotocolTrainingInitializedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ScatterprotocolTrainingInitialized)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ScatterprotocolTrainingInitialized)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ScatterprotocolTrainingInitializedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ScatterprotocolTrainingInitializedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ScatterprotocolTrainingInitialized represents a TrainingInitialized event raised by the Scatterprotocol contract.
type ScatterprotocolTrainingInitialized struct {
	Requestor common.Address
	TopicName string
	Raw       types.Log // Blockchain specific contextual infos
}

// FilterTrainingInitialized is a free log retrieval operation binding the contract event 0xccf83a8b6b0e84145342e27b95fb2db4f9485912b03ae9e14666580c72ef2b3d.
//
// Solidity: event TrainingInitialized(address requestor, string topicName)
func (_Scatterprotocol *ScatterprotocolFilterer) FilterTrainingInitialized(opts *bind.FilterOpts) (*ScatterprotocolTrainingInitializedIterator, error) {

	logs, sub, err := _Scatterprotocol.contract.FilterLogs(opts, "TrainingInitialized")
	if err != nil {
		return nil, err
	}
	return &ScatterprotocolTrainingInitializedIterator{contract: _Scatterprotocol.contract, event: "TrainingInitialized", logs: logs, sub: sub}, nil
}

// WatchTrainingInitialized is a free log subscription operation binding the contract event 0xccf83a8b6b0e84145342e27b95fb2db4f9485912b03ae9e14666580c72ef2b3d.
//
// Solidity: event TrainingInitialized(address requestor, string topicName)
func (_Scatterprotocol *ScatterprotocolFilterer) WatchTrainingInitialized(opts *bind.WatchOpts, sink chan<- *ScatterprotocolTrainingInitialized) (event.Subscription, error) {

	logs, sub, err := _Scatterprotocol.contract.WatchLogs(opts, "TrainingInitialized")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ScatterprotocolTrainingInitialized)
				if err := _Scatterprotocol.contract.UnpackLog(event, "TrainingInitialized", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseTrainingInitialized is a log parse operation binding the contract event 0xccf83a8b6b0e84145342e27b95fb2db4f9485912b03ae9e14666580c72ef2b3d.
//
// Solidity: event TrainingInitialized(address requestor, string topicName)
func (_Scatterprotocol *ScatterprotocolFilterer) ParseTrainingInitialized(log types.Log) (*ScatterprotocolTrainingInitialized, error) {
	event := new(ScatterprotocolTrainingInitialized)
	if err := _Scatterprotocol.contract.UnpackLog(event, "TrainingInitialized", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}
