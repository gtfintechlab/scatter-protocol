{
    "environment": {
        "deployProtocol": false,
        "protocolOwnerAddress": "0x89D9cf4Cc89A8058c5bDcBA525FFb14Fe15f614B",
        "protocolOwnerPrivateKey": "58a83c4aead5717f1c43567d82e504609345eb75b11312a057f9e600a7788ff7",
        "ethereumNode": "ws://172.22.80.1:7545"
    },
    "nodes": [
        {
            "id": "bootstrap_node",
            "type": "bootstrap",
            "ipv4Address": "127.0.0.1",
            "tcpPort": 7001 
        },
        {
            "id": "requestor_node",
            "type": "requestor",
            "extAddress": ":5002",
            "datastorePort": 8701,
            "datastoreUsername": "postgres",
            "datastorePassword": "postgres",
            "useMdns": true,
            "blockchainAddress": "0xB5219B818d2870D08fFbFC0aA93742Db2df721b4",
            "privateKey": "da2c5e2ee5b3204e3253e2ea04ad4fd1f53ec7d3a9302c1c92ebfa1135de6124",
            "initialScatterTokenSupply": 100000
        },
        {
            "id": "trainer_node",
            "type": "trainer",
            "extAddress": ":6001",
            "datastorePort": 8702,
            "datastoreUsername": "postgres",
            "datastorePassword": "postgres",
            "useMdns": true,
            "blockchainAddress": "0xE4505606D2DD1B47A782bF4149f073EB91E0A6Bb",
            "privateKey": "f898575dc21b5a4fc16ee69d8482b63b22ed23326c08efb495bf9417c60c4f0c",
            "initialScatterTokenSupply": 100000
        }
    ],

    "steps": [
        {
            "description": "Requestor is requesting the network to train a model",
            "nodeId": "requestor_node",
            "action": "POST /node/topic/add",
            "body": {
                "topic": "requestor topic 1",
                "path": "training/requestor/train",
                "reward": 100,
                "evaluationJob": "training/requestor/validate" 
            }
        },
        {
            "description": "Trainer is searching for all topics that have been published",
            "nodeId": "trainer_node",
            "action": "GET /node/topics/published",

            "_comment": "stateKey will make the result of this action accessible across other actions this node takes part in",
            "stateKey": "PUBLISHED_TOPICS" 
        },
        {
            "description": "Trainer is adding the topic that has been found",
            "nodeId": "trainer_node",
            "action": "POST /node/topic/add",
            "body": {
                "requestorAddress": "{PUBLISHED_TOPICS.topics[0].NodeAddress}",
                "topic": "{PUBLISHED_TOPICS.topics[0].TopicName}",
                "path": "/home/samrat/Documents/scatterchain/training/data/example"
            }
        },
        {
            "description": "Requestor is starting the training procedure",
            "nodeId": "requestor_node",
            "action": "POST /node/training/start",
            "body": {
                "topic": "requestor topic 1"
            }
        }
    ]
}