{
    "environment": {
        "deployProtocol": true,
        "protocolOwnerAddress": "0x0a4813055e2dE4d61B9Ba2f31AB528aD607A1De0",
        "protocolOwnerPrivateKey": "14789b11ec1b93e4054e868bdb8915592f7c80c4233c5a5f5428baac740fd438",
        "ethereumNode": "127.0.0.1:8545"
    },
    "nodes": [
        {
            "id": "bootstrap_node",
            "type": "bootstrap",
            "ipv4Address": "127.0.0.1",
            "tcpPort": 7001 
        },
        {
            "id": "requestor_node",
            "type": "requestor",
            "extAddress": ":5002",
            "datastorePort": 8701,
            "datastoreUsername": "postgres",
            "datastorePassword": "postgres",
            "useMdns": true,
            "blockchainAddress": "0xe92F5Aee5E24f6F28818C7ff97c2c15F58919174",
            "privateKey": "b0e3ca84143821e3cd2cc599d236c8ef6b840ce2fc9533b349cf8a6870943af7",
            "initialScatterTokenSupply": 100000
        },
        {
            "id": "trainer_node",
            "type": "trainer",
            "extAddress": ":6001",
            "datastorePort": 8702,
            "datastoreUsername": "postgres",
            "datastorePassword": "postgres",
            "useMdns": true,
            "blockchainAddress": "0xf316281B649Dc57b3cE7e0e407012076ffF7302D",
            "privateKey": "d87eaea4b3ddf8ac5260903bf4873c3c4680f326a69b0dfca7f8a4dbf19ea581",
            "initialScatterTokenSupply": 100000
        },
        {
            "id": "validator_node",
            "type": "validator",
            "extAddress": ":7002",
            "datastorePort": 8703,
            "datastoreUsername": "postgres",
            "datastorePassword": "postgres",
            "useMdns": true,
            "blockchainAddress": "0x326c08F1aA13975dFe0ea73f9964166b9Eb06364",
            "privateKey": "b881915133227c2e51c5b848d33851dbf839c7c717afc665605a422b51ef46e6",
            "initialScatterTokenSupply": 100000
        }
    ],

    "steps": [
        {
            "description": "Requestor is requesting the network to train a model",
            "nodeId": "requestor_node",
            "action": "POST /node/topic/add",
            "body": {
                "topic": "requestor topic 1",
                "path": "training/requestor/train",
                "reward": 100,
                "evaluationJob": "training/requestor/validate",
                "evaluationJobData": "training/data/requestor/validate"
            }
        },
        {
            "description": "Trainer is searching for all topics that have been published",
            "nodeId": "trainer_node",
            "action": "GET /node/topics/published",

            "_comment": "stateKey will make the result of this action accessible across other actions this node takes part in",
            "stateKey": "PUBLISHED_TOPICS" 
        },
        {
            "description": "Trainer is adding the topic that has been found",
            "nodeId": "trainer_node",
            "action": "POST /node/topic/add",
            "body": {
                "requestorAddress": "{PUBLISHED_TOPICS.topics[0].NodeAddress}",
                "topic": "{PUBLISHED_TOPICS.topics[0].TopicName}",
                "path": "/home/samrat/Documents/scatterchain/training/data/example",
                "stake": 500
            }
        },
        {
            "description": "Requestor is starting the training procedure",
            "nodeId": "requestor_node",
            "action": "POST /node/training/start",
            "body": {
                "topic": "requestor topic 1"
            }
        }
    ]
}